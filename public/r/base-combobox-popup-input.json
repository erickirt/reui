{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "base-combobox-popup-input",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "tailwind-merge",
    "@base-ui-components/react",
    "class-variance-authority",
    "lucide-react"
  ],
  "registryDependencies": [
    "https://reui.io/r/base-button.json",
    "https://reui.io/r/base-combobox.json"
  ],
  "files": [
    {
      "path": "registry/default/components/base-combobox/popup-input.tsx",
      "content": "'use client';\n\nimport { Button } from '@/registry/default/ui/base-button';\nimport {\n  Combobox,\n  ComboboxClear,\n  ComboboxContent,\n  ComboboxEmpty,\n  ComboboxIcon,\n  ComboboxInput,\n  ComboboxItem,\n  ComboboxItemIndicator,\n  ComboboxList,\n  ComboboxTrigger,\n  ComboboxValue,\n} from '@/registry/default/ui/base-combobox';\n\nexport default function PopupInputCombobox() {\n  return (\n    <Combobox items={countries}>\n      <div className=\"relative max-w-xs w-full\">\n        <ComboboxTrigger className=\"w-full\" render={<Button variant=\"outline\" mode=\"input\" />}>\n          <ComboboxValue>{(value: Country) => <>{value ? value.label : 'Select country'}</>}</ComboboxValue>\n          <ComboboxIcon />\n        </ComboboxTrigger>\n        <ComboboxClear />\n      </div>\n      <ComboboxContent className=\"pt-0\">\n        <div className=\"p-2\">\n          <ComboboxInput placeholder=\"e.g. United Kingdom\" />\n        </div>\n        <ComboboxEmpty>No countries found.</ComboboxEmpty>\n        <ComboboxList className=\"overflow-y-auto max-h-[300px]\">\n          {(country: Country) => (\n            <ComboboxItem key={country.code} value={country}>\n              <ComboboxItemIndicator />\n              {country.label ?? country.value}\n            </ComboboxItem>\n          )}\n        </ComboboxList>\n      </ComboboxContent>\n    </Combobox>\n  );\n}\n\ninterface Country {\n  code: string;\n  value: string | null;\n  continent: string;\n  label: string;\n}\n\nconst countries: Country[] = [\n  { code: '', value: null, continent: '', label: 'Select country' },\n  { code: 'af', value: 'afghanistan', label: 'Afghanistan', continent: 'Asia' },\n  { code: 'al', value: 'albania', label: 'Albania', continent: 'Europe' },\n  { code: 'dz', value: 'algeria', label: 'Algeria', continent: 'Africa' },\n  { code: 'ad', value: 'andorra', label: 'Andorra', continent: 'Europe' },\n  { code: 'ao', value: 'angola', label: 'Angola', continent: 'Africa' },\n  {\n    code: 'ar',\n    value: 'argentina',\n    label: 'Argentina',\n    continent: 'South America',\n  },\n  { code: 'am', value: 'armenia', label: 'Armenia', continent: 'Asia' },\n  { code: 'au', value: 'australia', label: 'Australia', continent: 'Oceania' },\n  { code: 'at', value: 'austria', label: 'Austria', continent: 'Europe' },\n  { code: 'az', value: 'azerbaijan', label: 'Azerbaijan', continent: 'Asia' },\n  {\n    code: 'bs',\n    value: 'bahamas',\n    label: 'Bahamas',\n    continent: 'North America',\n  },\n  { code: 'bh', value: 'bahrain', label: 'Bahrain', continent: 'Asia' },\n  { code: 'bd', value: 'bangladesh', label: 'Bangladesh', continent: 'Asia' },\n  {\n    code: 'bb',\n    value: 'barbados',\n    label: 'Barbados',\n    continent: 'North America',\n  },\n  { code: 'by', value: 'belarus', label: 'Belarus', continent: 'Europe' },\n  { code: 'be', value: 'belgium', label: 'Belgium', continent: 'Europe' },\n  { code: 'bz', value: 'belize', label: 'Belize', continent: 'North America' },\n  { code: 'bj', value: 'benin', label: 'Benin', continent: 'Africa' },\n  { code: 'bt', value: 'bhutan', label: 'Bhutan', continent: 'Asia' },\n  {\n    code: 'bo',\n    value: 'bolivia',\n    label: 'Bolivia',\n    continent: 'South America',\n  },\n  {\n    code: 'ba',\n    value: 'bosnia-and-herzegovina',\n    label: 'Bosnia and Herzegovina',\n    continent: 'Europe',\n  },\n  { code: 'bw', value: 'botswana', label: 'Botswana', continent: 'Africa' },\n  { code: 'br', value: 'brazil', label: 'Brazil', continent: 'South America' },\n  { code: 'bn', value: 'brunei', label: 'Brunei', continent: 'Asia' },\n  { code: 'bg', value: 'bulgaria', label: 'Bulgaria', continent: 'Europe' },\n  {\n    code: 'bf',\n    value: 'burkina-faso',\n    label: 'Burkina Faso',\n    continent: 'Africa',\n  },\n  { code: 'bi', value: 'burundi', label: 'Burundi', continent: 'Africa' },\n  { code: 'kh', value: 'cambodia', label: 'Cambodia', continent: 'Asia' },\n  { code: 'cm', value: 'cameroon', label: 'Cameroon', continent: 'Africa' },\n  { code: 'ca', value: 'canada', label: 'Canada', continent: 'North America' },\n  { code: 'cv', value: 'cape-verde', label: 'Cape Verde', continent: 'Africa' },\n  {\n    code: 'cf',\n    value: 'central-african-republic',\n    label: 'Central African Republic',\n    continent: 'Africa',\n  },\n  { code: 'td', value: 'chad', label: 'Chad', continent: 'Africa' },\n  { code: 'cl', value: 'chile', label: 'Chile', continent: 'South America' },\n  { code: 'cn', value: 'china', label: 'China', continent: 'Asia' },\n  {\n    code: 'co',\n    value: 'colombia',\n    label: 'Colombia',\n    continent: 'South America',\n  },\n  { code: 'km', value: 'comoros', label: 'Comoros', continent: 'Africa' },\n  { code: 'cg', value: 'congo', label: 'Congo', continent: 'Africa' },\n  {\n    code: 'cr',\n    value: 'costa-rica',\n    label: 'Costa Rica',\n    continent: 'North America',\n  },\n  { code: 'hr', value: 'croatia', label: 'Croatia', continent: 'Europe' },\n  { code: 'cu', value: 'cuba', label: 'Cuba', continent: 'North America' },\n  { code: 'cy', value: 'cyprus', label: 'Cyprus', continent: 'Asia' },\n  {\n    code: 'cz',\n    value: 'czech-republic',\n    label: 'Czech Republic',\n    continent: 'Europe',\n  },\n  { code: 'dk', value: 'denmark', label: 'Denmark', continent: 'Europe' },\n  { code: 'dj', value: 'djibouti', label: 'Djibouti', continent: 'Africa' },\n  {\n    code: 'dm',\n    value: 'dominica',\n    label: 'Dominica',\n    continent: 'North America',\n  },\n  {\n    code: 'do',\n    value: 'dominican-republic',\n    label: 'Dominican Republic',\n    continent: 'North America',\n  },\n  {\n    code: 'ec',\n    value: 'ecuador',\n    label: 'Ecuador',\n    continent: 'South America',\n  },\n  { code: 'eg', value: 'egypt', label: 'Egypt', continent: 'Africa' },\n  {\n    code: 'sv',\n    value: 'el-salvador',\n    label: 'El Salvador',\n    continent: 'North America',\n  },\n  {\n    code: 'gq',\n    value: 'equatorial-guinea',\n    label: 'Equatorial Guinea',\n    continent: 'Africa',\n  },\n  { code: 'er', value: 'eritrea', label: 'Eritrea', continent: 'Africa' },\n  { code: 'ee', value: 'estonia', label: 'Estonia', continent: 'Europe' },\n  { code: 'et', value: 'ethiopia', label: 'Ethiopia', continent: 'Africa' },\n  { code: 'fj', value: 'fiji', label: 'Fiji', continent: 'Oceania' },\n  { code: 'fi', value: 'finland', label: 'Finland', continent: 'Europe' },\n  { code: 'fr', value: 'france', label: 'France', continent: 'Europe' },\n  { code: 'ga', value: 'gabon', label: 'Gabon', continent: 'Africa' },\n  { code: 'gm', value: 'gambia', label: 'Gambia', continent: 'Africa' },\n  { code: 'ge', value: 'georgia', label: 'Georgia', continent: 'Asia' },\n  { code: 'de', value: 'germany', label: 'Germany', continent: 'Europe' },\n  { code: 'gh', value: 'ghana', label: 'Ghana', continent: 'Africa' },\n  { code: 'gr', value: 'greece', label: 'Greece', continent: 'Europe' },\n  {\n    code: 'gd',\n    value: 'grenada',\n    label: 'Grenada',\n    continent: 'North America',\n  },\n  {\n    code: 'gt',\n    value: 'guatemala',\n    label: 'Guatemala',\n    continent: 'North America',\n  },\n  { code: 'gn', value: 'guinea', label: 'Guinea', continent: 'Africa' },\n  {\n    code: 'gw',\n    value: 'guinea-bissau',\n    label: 'Guinea-Bissau',\n    continent: 'Africa',\n  },\n  { code: 'gy', value: 'guyana', label: 'Guyana', continent: 'South America' },\n  { code: 'ht', value: 'haiti', label: 'Haiti', continent: 'North America' },\n  {\n    code: 'hn',\n    value: 'honduras',\n    label: 'Honduras',\n    continent: 'North America',\n  },\n  { code: 'hu', value: 'hungary', label: 'Hungary', continent: 'Europe' },\n  { code: 'is', value: 'iceland', label: 'Iceland', continent: 'Europe' },\n  { code: 'in', value: 'india', label: 'India', continent: 'Asia' },\n  { code: 'id', value: 'indonesia', label: 'Indonesia', continent: 'Asia' },\n  { code: 'ir', value: 'iran', label: 'Iran', continent: 'Asia' },\n  { code: 'iq', value: 'iraq', label: 'Iraq', continent: 'Asia' },\n  { code: 'ie', value: 'ireland', label: 'Ireland', continent: 'Europe' },\n  { code: 'il', value: 'israel', label: 'Israel', continent: 'Asia' },\n  { code: 'it', value: 'italy', label: 'Italy', continent: 'Europe' },\n  {\n    code: 'jm',\n    value: 'jamaica',\n    label: 'Jamaica',\n    continent: 'North America',\n  },\n  { code: 'jp', value: 'japan', label: 'Japan', continent: 'Asia' },\n  { code: 'jo', value: 'jordan', label: 'Jordan', continent: 'Asia' },\n  { code: 'kz', value: 'kazakhstan', label: 'Kazakhstan', continent: 'Asia' },\n  { code: 'ke', value: 'kenya', label: 'Kenya', continent: 'Africa' },\n  { code: 'kw', value: 'kuwait', label: 'Kuwait', continent: 'Asia' },\n  { code: 'kg', value: 'kyrgyzstan', label: 'Kyrgyzstan', continent: 'Asia' },\n  { code: 'la', value: 'laos', label: 'Laos', continent: 'Asia' },\n  { code: 'lv', value: 'latvia', label: 'Latvia', continent: 'Europe' },\n  { code: 'lb', value: 'lebanon', label: 'Lebanon', continent: 'Asia' },\n  { code: 'ls', value: 'lesotho', label: 'Lesotho', continent: 'Africa' },\n  { code: 'lr', value: 'liberia', label: 'Liberia', continent: 'Africa' },\n  { code: 'ly', value: 'libya', label: 'Libya', continent: 'Africa' },\n  {\n    code: 'li',\n    value: 'liechtenstein',\n    label: 'Liechtenstein',\n    continent: 'Europe',\n  },\n  { code: 'lt', value: 'lithuania', label: 'Lithuania', continent: 'Europe' },\n  { code: 'lu', value: 'luxembourg', label: 'Luxembourg', continent: 'Europe' },\n  { code: 'mg', value: 'madagascar', label: 'Madagascar', continent: 'Africa' },\n  { code: 'mw', value: 'malawi', label: 'Malawi', continent: 'Africa' },\n  { code: 'my', value: 'malaysia', label: 'Malaysia', continent: 'Asia' },\n  { code: 'mv', value: 'maldives', label: 'Maldives', continent: 'Asia' },\n  { code: 'ml', value: 'mali', label: 'Mali', continent: 'Africa' },\n  { code: 'mt', value: 'malta', label: 'Malta', continent: 'Europe' },\n  {\n    code: 'mh',\n    value: 'marshall-islands',\n    label: 'Marshall Islands',\n    continent: 'Oceania',\n  },\n  { code: 'mr', value: 'mauritania', label: 'Mauritania', continent: 'Africa' },\n  { code: 'mu', value: 'mauritius', label: 'Mauritius', continent: 'Africa' },\n  { code: 'mx', value: 'mexico', label: 'Mexico', continent: 'North America' },\n  {\n    code: 'fm',\n    value: 'micronesia',\n    label: 'Micronesia',\n    continent: 'Oceania',\n  },\n  { code: 'md', value: 'moldova', label: 'Moldova', continent: 'Europe' },\n  { code: 'mc', value: 'monaco', label: 'Monaco', continent: 'Europe' },\n  { code: 'mn', value: 'mongolia', label: 'Mongolia', continent: 'Asia' },\n  { code: 'me', value: 'montenegro', label: 'Montenegro', continent: 'Europe' },\n  { code: 'ma', value: 'morocco', label: 'Morocco', continent: 'Africa' },\n  { code: 'mz', value: 'mozambique', label: 'Mozambique', continent: 'Africa' },\n  { code: 'mm', value: 'myanmar', label: 'Myanmar', continent: 'Asia' },\n  { code: 'na', value: 'namibia', label: 'Namibia', continent: 'Africa' },\n  { code: 'nr', value: 'nauru', label: 'Nauru', continent: 'Oceania' },\n  { code: 'np', value: 'nepal', label: 'Nepal', continent: 'Asia' },\n  {\n    code: 'nl',\n    value: 'netherlands',\n    label: 'Netherlands',\n    continent: 'Europe',\n  },\n  {\n    code: 'nz',\n    value: 'new-zealand',\n    label: 'New Zealand',\n    continent: 'Oceania',\n  },\n  {\n    code: 'ni',\n    value: 'nicaragua',\n    label: 'Nicaragua',\n    continent: 'North America',\n  },\n  { code: 'ne', value: 'niger', label: 'Niger', continent: 'Africa' },\n  { code: 'ng', value: 'nigeria', label: 'Nigeria', continent: 'Africa' },\n  { code: 'kp', value: 'north-korea', label: 'North Korea', continent: 'Asia' },\n  {\n    code: 'mk',\n    value: 'north-macedonia',\n    label: 'North Macedonia',\n    continent: 'Europe',\n  },\n  { code: 'no', value: 'norway', label: 'Norway', continent: 'Europe' },\n  { code: 'om', value: 'oman', label: 'Oman', continent: 'Asia' },\n  { code: 'pk', value: 'pakistan', label: 'Pakistan', continent: 'Asia' },\n  { code: 'pw', value: 'palau', label: 'Palau', continent: 'Oceania' },\n  { code: 'ps', value: 'palestine', label: 'Palestine', continent: 'Asia' },\n  { code: 'pa', value: 'panama', label: 'Panama', continent: 'North America' },\n  {\n    code: 'pg',\n    value: 'papua-new-guinea',\n    label: 'Papua New Guinea',\n    continent: 'Oceania',\n  },\n  {\n    code: 'py',\n    value: 'paraguay',\n    label: 'Paraguay',\n    continent: 'South America',\n  },\n  { code: 'pe', value: 'peru', label: 'Peru', continent: 'South America' },\n  { code: 'ph', value: 'philippines', label: 'Philippines', continent: 'Asia' },\n  { code: 'pl', value: 'poland', label: 'Poland', continent: 'Europe' },\n  { code: 'pt', value: 'portugal', label: 'Portugal', continent: 'Europe' },\n  { code: 'qa', value: 'qatar', label: 'Qatar', continent: 'Asia' },\n  { code: 'ro', value: 'romania', label: 'Romania', continent: 'Europe' },\n  { code: 'ru', value: 'russia', label: 'Russia', continent: 'Europe' },\n  { code: 'rw', value: 'rwanda', label: 'Rwanda', continent: 'Africa' },\n  { code: 'ws', value: 'samoa', label: 'Samoa', continent: 'Oceania' },\n  { code: 'sm', value: 'san-marino', label: 'San Marino', continent: 'Europe' },\n  {\n    code: 'sa',\n    value: 'saudi-arabia',\n    label: 'Saudi Arabia',\n    continent: 'Asia',\n  },\n  { code: 'sn', value: 'senegal', label: 'Senegal', continent: 'Africa' },\n  { code: 'rs', value: 'serbia', label: 'Serbia', continent: 'Europe' },\n  { code: 'sc', value: 'seychelles', label: 'Seychelles', continent: 'Africa' },\n  {\n    code: 'sl',\n    value: 'sierra-leone',\n    label: 'Sierra Leone',\n    continent: 'Africa',\n  },\n  { code: 'sg', value: 'singapore', label: 'Singapore', continent: 'Asia' },\n  { code: 'sk', value: 'slovakia', label: 'Slovakia', continent: 'Europe' },\n  { code: 'si', value: 'slovenia', label: 'Slovenia', continent: 'Europe' },\n  {\n    code: 'sb',\n    value: 'solomon-islands',\n    label: 'Solomon Islands',\n    continent: 'Oceania',\n  },\n  { code: 'so', value: 'somalia', label: 'Somalia', continent: 'Africa' },\n  {\n    code: 'za',\n    value: 'south-africa',\n    label: 'South Africa',\n    continent: 'Africa',\n  },\n  { code: 'kr', value: 'south-korea', label: 'South Korea', continent: 'Asia' },\n  {\n    code: 'ss',\n    value: 'south-sudan',\n    label: 'South Sudan',\n    continent: 'Africa',\n  },\n  { code: 'es', value: 'spain', label: 'Spain', continent: 'Europe' },\n  { code: 'lk', value: 'sri-lanka', label: 'Sri Lanka', continent: 'Asia' },\n  { code: 'sd', value: 'sudan', label: 'Sudan', continent: 'Africa' },\n  {\n    code: 'sr',\n    value: 'suriname',\n    label: 'Suriname',\n    continent: 'South America',\n  },\n  { code: 'se', value: 'sweden', label: 'Sweden', continent: 'Europe' },\n  {\n    code: 'ch',\n    value: 'switzerland',\n    label: 'Switzerland',\n    continent: 'Europe',\n  },\n  { code: 'sy', value: 'syria', label: 'Syria', continent: 'Asia' },\n  { code: 'tw', value: 'taiwan', label: 'Taiwan', continent: 'Asia' },\n  { code: 'tj', value: 'tajikistan', label: 'Tajikistan', continent: 'Asia' },\n  { code: 'tz', value: 'tanzania', label: 'Tanzania', continent: 'Africa' },\n  { code: 'th', value: 'thailand', label: 'Thailand', continent: 'Asia' },\n  { code: 'tl', value: 'timor-leste', label: 'Timor-Leste', continent: 'Asia' },\n  { code: 'tg', value: 'togo', label: 'Togo', continent: 'Africa' },\n  { code: 'to', value: 'tonga', label: 'Tonga', continent: 'Oceania' },\n  {\n    code: 'tt',\n    value: 'trinidad-and-tobago',\n    label: 'Trinidad and Tobago',\n    continent: 'North America',\n  },\n  { code: 'tn', value: 'tunisia', label: 'Tunisia', continent: 'Africa' },\n  { code: 'tr', value: 'turkey', label: 'Turkey', continent: 'Asia' },\n  {\n    code: 'tm',\n    value: 'turkmenistan',\n    label: 'Turkmenistan',\n    continent: 'Asia',\n  },\n  { code: 'tv', value: 'tuvalu', label: 'Tuvalu', continent: 'Oceania' },\n  { code: 'ug', value: 'uganda', label: 'Uganda', continent: 'Africa' },\n  { code: 'ua', value: 'ukraine', label: 'Ukraine', continent: 'Europe' },\n  {\n    code: 'ae',\n    value: 'united-arab-emirates',\n    label: 'United Arab Emirates',\n    continent: 'Asia',\n  },\n  {\n    code: 'gb',\n    value: 'united-kingdom',\n    label: 'United Kingdom',\n    continent: 'Europe',\n  },\n  {\n    code: 'us',\n    value: 'united-states',\n    label: 'United States',\n    continent: 'North America',\n  },\n  {\n    code: 'uy',\n    value: 'uruguay',\n    label: 'Uruguay',\n    continent: 'South America',\n  },\n  { code: 'uz', value: 'uzbekistan', label: 'Uzbekistan', continent: 'Asia' },\n  { code: 'vu', value: 'vanuatu', label: 'Vanuatu', continent: 'Oceania' },\n  {\n    code: 'va',\n    value: 'vatican-city',\n    label: 'Vatican City',\n    continent: 'Europe',\n  },\n  {\n    code: 've',\n    value: 'venezuela',\n    label: 'Venezuela',\n    continent: 'South America',\n  },\n  { code: 'vn', value: 'vietnam', label: 'Vietnam', continent: 'Asia' },\n  { code: 'ye', value: 'yemen', label: 'Yemen', continent: 'Asia' },\n  { code: 'zm', value: 'zambia', label: 'Zambia', continent: 'Africa' },\n  { code: 'zw', value: 'zimbabwe', label: 'Zimbabwe', continent: 'Africa' },\n];\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/ui/base-button.tsx",
      "content": "import * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { mergeProps } from '@base-ui-components/react/merge-props';\nimport { useRender } from '@base-ui-components/react/use-render';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { ChevronDown, LucideIcon } from 'lucide-react';\n\nconst buttonVariants = cva(\n  'cursor-pointer group whitespace-nowrap focus-visible:outline-hidden inline-flex items-center justify-center has-data-[arrow=true]:justify-between whitespace-nowrap text-sm font-medium ring-offset-background transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-60 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        primary: 'bg-primary text-primary-foreground hover:bg-primary/90 data-[state=open]:bg-primary/90',\n        mono: 'bg-zinc-950 text-white dark:bg-zinc-300 dark:text-black hover:bg-zinc-950/90 dark:hover:bg-zinc-300/90 data-[state=open]:bg-zinc-950/90 dark:data-[state=open]:bg-zinc-300/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90 data-[state=open]:bg-destructive/90',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/90 data-[state=open]:bg-secondary/90',\n        outline: 'bg-background text-accent-foreground border border-input hover:bg-accent data-[state=open]:bg-accent',\n        dashed:\n          'text-accent-foreground border border-input border-dashed bg-background hover:bg-accent hover:text-accent-foreground data-[state=open]:text-accent-foreground',\n        ghost:\n          'text-accent-foreground hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\n        dim: 'text-muted-foreground hover:text-foreground data-[state=open]:text-foreground',\n        foreground: '',\n        inverse: '',\n      },\n      appearance: {\n        default: '',\n        ghost: '',\n      },\n      underline: {\n        solid: '',\n        dashed: '',\n      },\n      underlined: {\n        solid: '',\n        dashed: '',\n      },\n      size: {\n        lg: 'h-10 rounded-md px-4 text-sm gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-8.5 rounded-md px-3 gap-1.5 text-[0.8125rem] leading-(--text-sm--line-height) [&_svg:not([class*=size-])]:size-4',\n        sm: 'h-7 rounded-md px-2.5 gap-1.25 text-xs [&_svg:not([class*=size-])]:size-3.5',\n        icon: 'size-8.5 rounded-md [&_svg:not([class*=size-])]:size-4 shrink-0',\n      },\n      autoHeight: {\n        true: '',\n        false: '',\n      },\n      shape: {\n        default: '',\n        circle: 'rounded-full',\n      },\n      mode: {\n        default: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        icon: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        link: 'text-primary h-auto p-0 bg-transparent rounded-none hover:bg-transparent data-[state=open]:bg-transparent',\n        input: `\n            justify-start font-normal hover:bg-background [&_svg]:transition-colors [&_svg]:hover:text-foreground data-[state=open]:bg-background \n            focus-visible:border-ring focus-visible:outline-hidden focus-visible:ring-[3px] focus-visible:ring-ring/30 \n            [[data-state=open]>&]:border-ring [[data-state=open]>&]:outline-hidden [[data-state=open]>&]:ring-[3px] \n            [[data-state=open]>&]:ring-ring/30 \n            aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n            in-data-[invalid=true]:border-destructive/60 in-data-[invalid=true]:ring-destructive/10  dark:in-data-[invalid=true]:border-destructive dark:in-data-[invalid=true]:ring-destructive/20\n          `,\n      },\n      placeholder: {\n        true: 'text-muted-foreground',\n        false: '',\n      },\n    },\n    compoundVariants: [\n      // Icons opacity for default mode\n      {\n        variant: 'ghost',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Icons opacity for default mode\n      {\n        variant: 'outline',\n        mode: 'input',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Auto height\n      {\n        size: 'md',\n        autoHeight: true,\n        className: 'h-auto min-h-8.5',\n      },\n      {\n        size: 'sm',\n        autoHeight: true,\n        className: 'h-auto min-h-7',\n      },\n      {\n        size: 'lg',\n        autoHeight: true,\n        className: 'h-auto min-h-10',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Link\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      // Ghost\n      {\n        variant: 'primary',\n        appearance: 'ghost',\n        className: 'bg-transparent text-primary/90 hover:bg-primary/5 data-[state=open]:bg-primary/5',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'ghost',\n        className: 'bg-transparent text-destructive/90 hover:bg-destructive/5 data-[state=open]:bg-destructive/5',\n      },\n      {\n        variant: 'ghost',\n        mode: 'icon',\n        className: 'text-muted-foreground',\n      },\n\n      // Size\n      {\n        size: 'sm',\n        mode: 'icon',\n        className: 'w-7 h-7 p-0 [[&_svg:not([class*=size-])]:size-3.5',\n      },\n      {\n        size: 'md',\n        mode: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'lg',\n        mode: 'icon',\n        className: 'w-10 h-10 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n\n      // Input mode\n      {\n        mode: 'input',\n        placeholder: true,\n        variant: 'outline',\n        className: 'font-normal text-muted-foreground',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'sm',\n        className: 'gap-1.25',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'md',\n        className: 'gap-1.5',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'lg',\n        className: 'gap-1.5',\n      },\n    ],\n    defaultVariants: {\n      variant: 'primary',\n      mode: 'default',\n      size: 'md',\n      shape: 'default',\n      appearance: 'default',\n    },\n  },\n);\n\nexport interface ButtonProps extends useRender.ComponentProps<'button'>, VariantProps<typeof buttonVariants> {\n  selected?: boolean;\n  asChild?: boolean;\n}\n\nfunction Button({\n  render,\n  asChild = false,\n  children,\n  className,\n  selected,\n  variant,\n  shape,\n  appearance,\n  mode,\n  size,\n  autoHeight,\n  underlined,\n  underline,\n  placeholder = false,\n  ...props\n}: ButtonProps) {\n  const defaultProps = {\n    'data-slot': 'button',\n    className: cn(\n      buttonVariants({\n        variant,\n        size,\n        shape,\n        appearance,\n        mode,\n        autoHeight,\n        placeholder,\n        underlined,\n        underline,\n        className,\n      }),\n      asChild && props.disabled && 'pointer-events-none opacity-50',\n    ),\n    ...(selected && { 'data-state': 'open' as const }),\n  };\n\n  // Determine render element based on asChild prop\n  const renderElement =\n    asChild && React.isValidElement(children)\n      ? (children as React.ReactElement<Record<string, unknown>, string | React.JSXElementConstructor<unknown>>)\n      : render || <button />;\n\n  // When using asChild, children becomes the element props, otherwise use children normally\n  const finalProps =\n    asChild && React.isValidElement(children)\n      ? mergeProps(defaultProps, props)\n      : mergeProps(defaultProps, { ...props, children });\n\n  const element = useRender({\n    render: renderElement,\n    props: finalProps,\n  });\n\n  return element;\n}\n\ninterface ButtonArrowProps extends React.SVGProps<SVGSVGElement> {\n  icon?: LucideIcon;\n}\n\nfunction ButtonArrow({ icon: Icon = ChevronDown, className, ...props }: ButtonArrowProps) {\n  return <Icon data-slot=\"button-arrow\" className={cn('ms-auto -me-1', className)} {...props} />;\n}\n\nexport { Button, ButtonArrow, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/base-combobox.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Combobox as ComboboxPrimitive } from '@base-ui-components/react/combobox';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { Check, ChevronDown, X } from 'lucide-react';\n\n// Define input size variants (without file: part)\nconst inputVariants = cva(\n  `\n    flex w-full bg-background border border-input shadow-xs shadow-black/5 transition-[color,box-shadow] text-foreground placeholder:text-muted-foreground/80 \n    focus-visible:ring-ring/30 focus-visible:border-ring focus-visible:outline-none focus-visible:ring-[3px]     \n    has-[[data-slot=combobox-input]:focus-visible]:ring-ring/30 \n    has-[[data-slot=combobox-input]:focus-visible]:border-ring\n    has-[[data-slot=combobox-input]:focus-visible]:outline-none\n    has-[[data-slot=combobox-input]:focus-visible]:ring-[3px]\n    [&_[data-slot=combobox-input]]:grow\n    disabled:cursor-not-allowed disabled:opacity-60 \n    [&[readonly]]:bg-muted/80 [&[readonly]]:cursor-not-allowed\n    aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n  `,\n  {\n    variants: {\n      variant: {\n        lg: 'py-1 min-h-10 px-4 text-sm rounded-md [&~[data-slot=combobox-icon]]:end-2.5 [&~[data-slot=combobox-clear]]:end-7',\n        md: 'py-1 min-h-8.5 px-3 text-[0.8125rem] leading-(--text-sm--line-height) rounded-md [&~[data-slot=combobox-icon]]:end-2 [&~[data-slot=combobox-clear]]:end-6',\n        sm: 'py-0.5 min-h-7 px-2.5 text-xs rounded-md [&~[data-slot=combobox-icon]]:end-1.75 [&~[data-slot=combobox-clear]]:end-5.75',\n      },\n    },\n    defaultVariants: {\n      variant: 'md',\n    },\n  },\n);\n\nconst chipsVariants = cva(\n  [\n    'flex items-center flex-wrap gap-1',\n    '[&_[data-slot=combobox-input]]:py-0 [&_[data-slot=combobox-input]]:px-1.5 has-[[data-slot=combobox-chip]]:[&_[data-slot=combobox-input]]:px-0',\n    '[&_[data-slot=combobox-input]]:min-h-0 [&_[data-slot=combobox-input]]:flex-1',\n    '[&_[data-slot=combobox-input]]:border-0 [&_[data-slot=combobox-input]]:shadow-none [&_[data-slot=combobox-input]]:rounded-none',\n    '[&_[data-slot=combobox-input]]:outline-none [&_[data-slot=combobox-input]]:ring-0',\n  ],\n  {\n    variants: {\n      variant: {\n        sm: 'px-0.75',\n        md: 'px-1',\n        lg: 'px-1.5',\n      },\n    },\n  },\n);\n\n// Root - Groups all parts of the combobox\nfunction Combobox({ ...props }: React.ComponentProps<typeof ComboboxPrimitive.Root>) {\n  return <ComboboxPrimitive.Root data-slot=\"combobox\" {...props} />;\n}\n\n// Input and Clear controls\nfunction ComboboxControl({ className, ...props }: React.ComponentProps<'div'>) {\n  return <span data-slot=\"combobox-control\" className={cn('relative', className)} {...props} />;\n}\n\n// Value - Displays the selected value\nfunction ComboboxValue({ ...props }: React.ComponentProps<typeof ComboboxPrimitive.Value>) {\n  return <ComboboxPrimitive.Value data-slot=\"combobox-value\" {...props} />;\n}\n\n// Input - The input element for typing\nfunction ComboboxInput({\n  className,\n  variant = 'md',\n  ...props\n}: React.ComponentProps<typeof ComboboxPrimitive.Input> & VariantProps<typeof inputVariants>) {\n  return (\n    <ComboboxPrimitive.Input\n      data-slot=\"combobox-input\"\n      data-variant={variant}\n      className={cn(inputVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\n// Status - Displays the status of the combobox\nfunction ComboboxStatus({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Status>) {\n  return (\n    <ComboboxPrimitive.Status\n      data-slot=\"combobox-status\"\n      className={cn('text-muted-foreground text-sm', className)}\n      {...props}\n    />\n  );\n}\n\n// Portal - A portal element that moves the popup to a different part of the DOM\nfunction ComboboxPortal({ ...props }: React.ComponentProps<typeof ComboboxPrimitive.Portal>) {\n  return <ComboboxPrimitive.Portal data-slot=\"combobox-portal\" {...props} />;\n}\n\n// Backdrop - An overlay displayed beneath the combobox popup\nfunction ComboboxBackdrop({ ...props }: React.ComponentProps<typeof ComboboxPrimitive.Backdrop>) {\n  return <ComboboxPrimitive.Backdrop data-slot=\"combobox-backdrop\" {...props} />;\n}\n\nfunction ComboboxContent({\n  className,\n  children,\n  showBackdrop = false,\n  align = 'start',\n  sideOffset = 4,\n  alignOffset = 0,\n  side = 'bottom',\n  anchor,\n  ...props\n}: React.ComponentProps<typeof ComboboxPrimitive.Popup> & {\n  align?: ComboboxPrimitive.Positioner.Props['align'];\n  sideOffset?: ComboboxPrimitive.Positioner.Props['sideOffset'];\n  alignOffset?: ComboboxPrimitive.Positioner.Props['alignOffset'];\n  anchor?: ComboboxPrimitive.Positioner.Props['anchor'];\n  side?: ComboboxPrimitive.Positioner.Props['side'];\n  showBackdrop?: boolean;\n}) {\n  return (\n    <ComboboxPortal>\n      {showBackdrop && <ComboboxBackdrop />}\n      <ComboboxPositioner align={align} sideOffset={sideOffset} alignOffset={alignOffset} side={side} anchor={anchor}>\n        <ComboboxPopup className={className} {...props}>\n          {children}\n        </ComboboxPopup>\n      </ComboboxPositioner>\n    </ComboboxPortal>\n  );\n}\n\n// Positioner - Positions the combobox popup against the input\nfunction ComboboxPositioner({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Positioner>) {\n  return (\n    <ComboboxPrimitive.Positioner\n      data-slot=\"combobox-positioner\"\n      className={cn('z-50 outline-none', className)}\n      {...props}\n    />\n  );\n}\n\n// Popup - A container for the combobox options\nfunction ComboboxPopup({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Popup>) {\n  return (\n    <ComboboxPrimitive.Popup\n      data-slot=\"combobox-popup\"\n      className={cn(\n        'py-1 w-[var(--anchor-width)] max-h-[min(var(--available-height),23rem)] max-w-[var(--available-width)]',\n        'overflow-y-auto scroll-pt-2 scroll-pb-2 overscroll-contain bg-[canvas]',\n        'rounded-md border border-border bg-popover text-popover-foreground shadow-md shadow-black/5',\n        'origin-[var(--transform-origin)] transition-[transform,scale,opacity] data-[ending-style]:scale-90',\n        'data-[ending-style]:opacity-0 data-[starting-style]:scale-90 data-[starting-style]:opacity-0',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\n// List - A container for the combobox options\nfunction ComboboxList({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.List>) {\n  return <ComboboxPrimitive.List data-slot=\"combobox-list\" className={cn('space-y-0.5', className)} {...props} />;\n}\n\n// Collection - A collection of combobox items\nfunction ComboboxCollection({ ...props }: React.ComponentProps<typeof ComboboxPrimitive.Collection>) {\n  return <ComboboxPrimitive.Collection data-slot=\"combobox-collection\" {...props} />;\n}\n\n// Row - A row container for combobox items\nfunction ComboboxRow({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Row>) {\n  return (\n    <ComboboxPrimitive.Row data-slot=\"combobox-row\" className={cn('flex items-center gap-2', className)} {...props} />\n  );\n}\n\n// Item - An individual selectable option in the combobox\nfunction ComboboxItem({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Item>) {\n  return (\n    <ComboboxPrimitive.Item\n      data-slot=\"combobox-item\"\n      className={cn(\n        'relative cursor-default flex items-center',\n        'text-foreground relative select-none items-center gap-2 rounded-md ps-7 pe-2 py-1.5 text-sm outline-hidden transition-colors data-disabled:pointer-events-none data-disabled:opacity-50',\n        '[&_svg]:pointer-events-none [&_svg:not([role=img]):not([class*=text-])]:opacity-60 [&_svg:not([class*=size-])]:size-4 [&_svg]:shrink-0',\n        'data-[highlighted]:relative data-[highlighted]:z-0 data-[highlighted]:text-foreground data-[highlighted]:before:absolute data-[highlighted]:before:inset-x-1 data-[highlighted]:before:inset-y-0 data-[highlighted]:before:z-[-1] data-[highlighted]:before:rounded-sm data-[highlighted]:before:bg-accent',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\n// ItemIndicator - An indicator for selected items\nfunction ComboboxItemIndicator({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.ItemIndicator>) {\n  return (\n    <ComboboxPrimitive.ItemIndicator\n      data-slot=\"combobox-item-indicator\"\n      className={cn('absolute flex top-1/2 -translate-y-1/2 items-center justify-center start-2.5', className)}\n      {...props}\n    >\n      <Check className=\"h-4 w-4 text-primary\" />\n    </ComboboxPrimitive.ItemIndicator>\n  );\n}\n\n// Group - Groups related combobox items with the corresponding label\nfunction ComboboxGroup({ ...props }: React.ComponentProps<typeof ComboboxPrimitive.Group>) {\n  return <ComboboxPrimitive.Group data-slot=\"combobox-group\" {...props} />;\n}\n\n// GroupLabel - An accessible label that is automatically associated with its parent group\nfunction ComboboxGroupLabel({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.GroupLabel>) {\n  return (\n    <ComboboxPrimitive.GroupLabel\n      data-slot=\"combobox-group-label\"\n      className={cn('px-2 py-1.5 text-xs text-muted-foreground font-medium', className)}\n      {...props}\n    />\n  );\n}\n\n// Empty - A component to display when no options are available\nfunction ComboboxEmpty({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Empty>) {\n  return (\n    <ComboboxPrimitive.Empty\n      data-slot=\"combobox-empty\"\n      className={cn('px-2 py-1.5 text-sm text-muted-foreground empty:m-0 empty:p-0', className)}\n      {...props}\n    />\n  );\n}\n\n// Clear - A button to clear the input value\nfunction ComboboxClear({ className, children, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Clear>) {\n  return (\n    <ComboboxPrimitive.Clear\n      data-slot=\"combobox-clear\"\n      className={cn(\n        'absolute cursor-pointer end-6 top-1/2 -translate-y-1/2 rounded-sm opacity-70 ring-offset-background',\n        'transition-opacity opacity-60 hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none',\n        'data-[disabled]:pointer-events-none',\n        className,\n      )}\n      {...props}\n    >\n      {children ? children : <X className=\"size-3.5 opacity-100\" />}\n    </ComboboxPrimitive.Clear>\n  );\n}\n\n// Icon - An icon element for the combobox\nfunction ComboboxIcon({ className, children, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Icon>) {\n  return (\n    <ComboboxPrimitive.Icon\n      data-slot=\"combobox-icon\"\n      className={cn(\n        'absolute cursor-pointer end-2 top-1/2 -translate-y-1/2 rounded-sm opacity-70 ring-offset-background transition-opacity',\n        'opacity-60 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none',\n        'data-[disabled]:pointer-events-none',\n        className,\n      )}\n      {...props}\n    >\n      {children ? children : <ChevronDown className=\"size-3.5 opacity-100\" />}\n    </ComboboxPrimitive.Icon>\n  );\n}\n\n// Arrow - Displays an element positioned against the combobox anchor\nfunction ComboboxArrow({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Arrow>) {\n  return <ComboboxPrimitive.Arrow data-slot=\"combobox-arrow\" className={cn('', className)} {...props} />;\n}\n\n// Trigger - A button that opens the combobox\nfunction ComboboxTrigger({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Trigger>) {\n  return <ComboboxPrimitive.Trigger data-slot=\"combobox-trigger\" className={cn('relative', className)} {...props} />;\n}\n\n// Chips - A container for selected items as chips (for multi-select)\nfunction ComboboxChips({\n  className,\n  variant = 'md',\n  ...props\n}: React.ComponentProps<typeof ComboboxPrimitive.Chips> & VariantProps<typeof inputVariants>) {\n  return (\n    <ComboboxPrimitive.Chips\n      data-slot=\"combobox-chips\"\n      className={cn(inputVariants({ variant }), chipsVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\n// Chip - An individual chip representing a selected item\nfunction ComboboxChip({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Chip>) {\n  return (\n    <ComboboxPrimitive.Chip\n      data-slot=\"combobox-chip\"\n      className={cn(\n        'inline-flex items-center gap-1 rounded-md bg-muted px-2 py-1 text-xs font-medium text-foreground',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\n// ChipRemove - A button to remove a chip\nfunction ComboboxChipRemove({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ComboboxPrimitive.ChipRemove>) {\n  return (\n    <ComboboxPrimitive.ChipRemove\n      data-slot=\"combobox-chip-remove\"\n      className={cn(\n        'cursor-pointer ms-1 rounded-sm [&_svg]:opacity-60 hover:bg-muted-foreground/20 hover:[&_svg]:opacity-100',\n        className,\n      )}\n      {...props}\n    >\n      {children ? children : <X className=\"size-3.5\" />}\n    </ComboboxPrimitive.ChipRemove>\n  );\n}\n\n// Separator - A separator element accessible to screen readers\nfunction ComboboxSeparator({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Separator>) {\n  return (\n    <ComboboxPrimitive.Separator\n      data-slot=\"combobox-separator\"\n      className={cn('my-1.5 h-px bg-muted', className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Combobox,\n  ComboboxContent,\n  ComboboxControl,\n  ComboboxValue,\n  ComboboxInput,\n  ComboboxTrigger,\n  ComboboxIcon,\n  ComboboxStatus,\n  ComboboxPortal,\n  ComboboxBackdrop,\n  ComboboxPositioner,\n  ComboboxPopup,\n  ComboboxList,\n  ComboboxCollection,\n  ComboboxRow,\n  ComboboxItem,\n  ComboboxItemIndicator,\n  ComboboxGroup,\n  ComboboxGroupLabel,\n  ComboboxEmpty,\n  ComboboxClear,\n  ComboboxArrow,\n  ComboboxChips,\n  ComboboxChip,\n  ComboboxChipRemove,\n  ComboboxSeparator,\n};\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}