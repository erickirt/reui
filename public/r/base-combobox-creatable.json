{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "base-combobox-creatable",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "tailwind-merge",
    "@base-ui-components/react",
    "class-variance-authority",
    "lucide-react"
  ],
  "registryDependencies": [
    "https://reui.io/r/base-button.json",
    "https://reui.io/r/base-combobox.json",
    "https://reui.io/r/base-dialog.json",
    "https://reui.io/r/base-input.json",
    "https://reui.io/r/base-label.json"
  ],
  "files": [
    {
      "path": "registry/default/components/base-combobox/creatable.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { Button } from '@/registry/default/ui/base-button';\nimport {\n  Combobox,\n  ComboboxChip,\n  ComboboxChipRemove,\n  ComboboxChips,\n  ComboboxContent,\n  ComboboxEmpty,\n  ComboboxInput,\n  ComboboxItem,\n  ComboboxItemIndicator,\n  ComboboxList,\n  ComboboxValue,\n} from '@/registry/default/ui/base-combobox';\nimport { Dialog, DialogClose, DialogContent, DialogDescription, DialogTitle } from '@/registry/default/ui/base-dialog';\nimport { Input } from '@/registry/default/ui/base-input';\nimport { Label } from '@/registry/default/ui/base-label';\nimport { PlusIcon } from 'lucide-react';\n\nexport default function ComboboxCreatableDemo() {\n  const id = React.useId();\n\n  const [labels, setLabels] = React.useState<LabelItem[]>(initialLabels);\n  const [selected, setSelected] = React.useState<LabelItem[]>([]);\n  const [query, setQuery] = React.useState('');\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\n  const createInputRef = React.useRef<HTMLInputElement | null>(null);\n  const comboboxInputRef = React.useRef<HTMLInputElement | null>(null);\n  const pendingQueryRef = React.useRef('');\n\n  function handleCreate() {\n    const input = createInputRef.current || comboboxInputRef.current;\n    const value = input ? input.value.trim() : '';\n    if (!value) {\n      return;\n    }\n\n    const normalized = value.toLocaleLowerCase();\n    const baseId = normalized.replace(/\\s+/g, '-');\n    const existing = labels.find((l) => l.value.trim().toLocaleLowerCase() === normalized);\n\n    if (existing) {\n      setSelected((prev) => (prev.some((i) => i.id === existing.id) ? prev : [...prev, existing]));\n      setOpenDialog(false);\n      setQuery('');\n      return;\n    }\n\n    const existingIds = new Set(labels.map((l) => l.id));\n    let uniqueId = baseId;\n    if (existingIds.has(uniqueId)) {\n      let i = 2;\n      while (existingIds.has(`${baseId}-${i}`)) {\n        i += 1;\n      }\n      uniqueId = `${baseId}-${i}`;\n    }\n\n    const newItem: LabelItem = { id: uniqueId, value };\n\n    if (!selected.find((item) => item.id === newItem.id)) {\n      setLabels((prev) => [...prev, newItem]);\n      setSelected((prev) => [...prev, newItem]);\n    }\n\n    setOpenDialog(false);\n    setQuery('');\n  }\n\n  function handleCreateSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    handleCreate();\n  }\n\n  const trimmed = query.trim();\n  const lowered = trimmed.toLocaleLowerCase();\n  const exactExists = labels.some((l) => l.value.trim().toLocaleLowerCase() === lowered);\n  const itemsForView: Array<LabelItem> =\n    trimmed !== '' && !exactExists\n      ? [\n          ...labels,\n          {\n            creatable: trimmed,\n            id: `create:${lowered}`,\n            value: `Create \"${trimmed}\"`,\n          },\n        ]\n      : labels;\n\n  return (\n    <React.Fragment>\n      <Combobox\n        items={itemsForView}\n        multiple\n        onValueChange={(items) => {\n          const selectedItems = items as LabelItem[];\n          const last = selectedItems[selectedItems.length - 1];\n          if (last && last.creatable) {\n            pendingQueryRef.current = last.creatable;\n            setOpenDialog(true);\n            return;\n          }\n          const clean = selectedItems.filter((i) => !i.creatable);\n          setSelected(clean);\n          setQuery('');\n        }}\n        value={selected}\n        inputValue={query}\n        onInputValueChange={setQuery}\n        onOpenChange={(_open, details) => {\n          if ('key' in details.event && details.event.key === 'Enter') {\n            if (trimmed === '') {\n              return;\n            }\n\n            const existing = labels.find((l) => l.value.trim().toLocaleLowerCase() === lowered);\n\n            if (existing) {\n              setSelected((prev) => (prev.some((i) => i.id === existing.id) ? prev : [...prev, existing]));\n              setQuery('');\n              return;\n            }\n\n            pendingQueryRef.current = trimmed;\n            setOpenDialog(true);\n          }\n        }}\n      >\n        <div className=\"max-w-xs w-full flex flex-col gap-1\">\n          <Label htmlFor={id}>Labels</Label>\n          <ComboboxChips className=\"w-full\" ref={containerRef}>\n            <ComboboxValue>\n              {(value: LabelItem[]) => (\n                <React.Fragment>\n                  {value.map((label) => (\n                    <ComboboxChip key={label.id} aria-label={label.value}>\n                      {label.value}\n                      <ComboboxChipRemove />\n                    </ComboboxChip>\n                  ))}\n                  <ComboboxInput ref={comboboxInputRef} id={id} placeholder={value.length > 0 ? '' : 'e.g. bug'} />\n                </React.Fragment>\n              )}\n            </ComboboxValue>\n          </ComboboxChips>\n        </div>\n\n        <ComboboxContent anchor={containerRef}>\n          <ComboboxEmpty>No labels found.</ComboboxEmpty>\n          <ComboboxList>\n            {(item: LabelItem) =>\n              item.creatable ? (\n                <ComboboxItem key={item.id} value={item}>\n                  <span className=\"col-start-1\">\n                    <PlusIcon className=\"size-3\" />\n                  </span>\n                  <div className=\"col-start-2\">Create &quot;{item.creatable}&quot;</div>\n                </ComboboxItem>\n              ) : (\n                <ComboboxItem key={item.id} value={item}>\n                  <ComboboxItemIndicator />\n                  <div className=\"col-start-2\">{item.value}</div>\n                </ComboboxItem>\n              )\n            }\n          </ComboboxList>\n        </ComboboxContent>\n      </Combobox>\n\n      <Dialog open={openDialog} onOpenChange={setOpenDialog}>\n        <DialogContent initialFocus={createInputRef} className=\"sm:max-w-md\">\n          <DialogTitle>Create new label</DialogTitle>\n          <DialogDescription>Add a new label to select.</DialogDescription>\n          <form onSubmit={handleCreateSubmit}>\n            <Input ref={createInputRef} placeholder=\"Label name\" defaultValue={pendingQueryRef.current} />\n            <div className=\"mt-4 flex justify-end gap-4\">\n              <DialogClose>Cancel</DialogClose>\n              <Button type=\"submit\">Create</Button>\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\ninterface LabelItem {\n  creatable?: string;\n  id: string;\n  value: string;\n}\n\nconst initialLabels: LabelItem[] = [\n  { id: 'bug', value: 'bug' },\n  { id: 'docs', value: 'documentation' },\n  { id: 'enhancement', value: 'enhancement' },\n  { id: 'help-wanted', value: 'help wanted' },\n  { id: 'good-first-issue', value: 'good first issue' },\n];\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/ui/base-button.tsx",
      "content": "import * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { mergeProps } from '@base-ui-components/react/merge-props';\nimport { useRender } from '@base-ui-components/react/use-render';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { ChevronDown, LucideIcon } from 'lucide-react';\n\nconst buttonVariants = cva(\n  'cursor-pointer group whitespace-nowrap focus-visible:outline-hidden inline-flex items-center justify-center has-data-[arrow=true]:justify-between whitespace-nowrap text-sm font-medium ring-offset-background transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-60 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        primary: 'bg-primary text-primary-foreground hover:bg-primary/90 data-[state=open]:bg-primary/90',\n        mono: 'bg-zinc-950 text-white dark:bg-zinc-300 dark:text-black hover:bg-zinc-950/90 dark:hover:bg-zinc-300/90 data-[state=open]:bg-zinc-950/90 dark:data-[state=open]:bg-zinc-300/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90 data-[state=open]:bg-destructive/90',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/90 data-[state=open]:bg-secondary/90',\n        outline: 'bg-background text-accent-foreground border border-input hover:bg-accent data-[state=open]:bg-accent',\n        dashed:\n          'text-accent-foreground border border-input border-dashed bg-background hover:bg-accent hover:text-accent-foreground data-[state=open]:text-accent-foreground',\n        ghost:\n          'text-accent-foreground hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\n        dim: 'text-muted-foreground hover:text-foreground data-[state=open]:text-foreground',\n        foreground: '',\n        inverse: '',\n      },\n      appearance: {\n        default: '',\n        ghost: '',\n      },\n      underline: {\n        solid: '',\n        dashed: '',\n      },\n      underlined: {\n        solid: '',\n        dashed: '',\n      },\n      size: {\n        lg: 'h-10 px-4 text-sm gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-9 px-3 gap-1.5 text-sm [&_svg:not([class*=size-])]:size-4',\n        sm: 'h-8 px-2.5 gap-1.25 text-xs [&_svg:not([class*=size-])]:size-3.5',\n        xs: 'h-7 px-2 gap-1 text-xs [&_svg:not([class*=size-])]:size-3.5',\n        icon: 'size-9 [&_svg:not([class*=size-])]:size-4 shrink-0',\n      },\n      autoHeight: {\n        true: '',\n        false: '',\n      },\n      radius: {\n        md: 'rounded-md',\n        full: 'rounded-full',\n      },\n      mode: {\n        default: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        icon: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        link: 'text-primary h-auto p-0 bg-transparent rounded-none hover:bg-transparent data-[state=open]:bg-transparent',\n        input: `\n            justify-start font-normal hover:bg-background [&_svg]:transition-colors [&_svg]:hover:text-foreground data-[state=open]:bg-background \n            focus-visible:border-ring focus-visible:outline-hidden focus-visible:ring-[3px] focus-visible:ring-ring/30 \n            [[data-state=open]>&]:border-ring [[data-state=open]>&]:outline-hidden [[data-state=open]>&]:ring-[3px] \n            [[data-state=open]>&]:ring-ring/30 \n            aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n            in-data-[invalid=true]:border-destructive/60 in-data-[invalid=true]:ring-destructive/10  dark:in-data-[invalid=true]:border-destructive dark:in-data-[invalid=true]:ring-destructive/20\n          `,\n      },\n      placeholder: {\n        true: 'text-muted-foreground',\n        false: '',\n      },\n    },\n    compoundVariants: [\n      // Icons opacity for default mode\n      {\n        variant: 'ghost',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Icons opacity for default mode\n      {\n        variant: 'outline',\n        mode: 'input',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        className: '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n      },\n\n      // Auto height\n      {\n        size: 'xs',\n        autoHeight: true,\n        className: 'h-auto min-h-7',\n      },\n      {\n        size: 'md',\n        autoHeight: true,\n        className: 'h-auto min-h-9',\n      },\n      {\n        size: 'sm',\n        autoHeight: true,\n        className: 'h-auto min-h-8',\n      },\n      {\n        size: 'lg',\n        autoHeight: true,\n        className: 'h-auto min-h-10',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Link\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      // Ghost\n      {\n        variant: 'primary',\n        appearance: 'ghost',\n        className: 'bg-transparent text-primary/90 hover:bg-primary/5 data-[state=open]:bg-primary/5',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'ghost',\n        className: 'bg-transparent text-destructive/90 hover:bg-destructive/5 data-[state=open]:bg-destructive/5',\n      },\n      {\n        variant: 'ghost',\n        mode: 'icon',\n        className: 'text-muted-foreground',\n      },\n\n      // Size\n      {\n        size: 'sm',\n        mode: 'icon',\n        className: 'w-7 h-7 p-0 [[&_svg:not([class*=size-])]:size-3.5',\n      },\n      {\n        size: 'md',\n        mode: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'lg',\n        mode: 'icon',\n        className: 'w-10 h-10 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n\n      // Input mode\n      {\n        mode: 'input',\n        placeholder: true,\n        variant: 'outline',\n        className: 'font-normal text-muted-foreground',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'sm',\n        className: 'gap-1.25',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'md',\n        className: 'gap-1.5',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'lg',\n        className: 'gap-1.5',\n      },\n    ],\n    defaultVariants: {\n      variant: 'primary',\n      mode: 'default',\n      size: 'md',\n      radius: 'md',\n      appearance: 'default',\n    },\n  },\n);\n\nexport interface ButtonProps extends useRender.ComponentProps<'button'>, VariantProps<typeof buttonVariants> {\n  selected?: boolean;\n  asChild?: boolean;\n}\n\nfunction Button({\n  render,\n  asChild = false,\n  children,\n  className,\n  selected,\n  variant,\n  radius,\n  appearance,\n  mode,\n  size,\n  autoHeight,\n  underlined,\n  underline,\n  placeholder = false,\n  ...props\n}: ButtonProps) {\n  const defaultProps = {\n    'data-slot': 'button',\n    className: cn(\n      buttonVariants({\n        variant,\n        size,\n        radius,\n        appearance,\n        mode,\n        autoHeight,\n        placeholder,\n        underlined,\n        underline,\n        className,\n      }),\n      asChild && props.disabled && 'pointer-events-none opacity-50',\n    ),\n    ...(selected && { 'data-state': 'open' as const }),\n  };\n\n  // Determine render element based on asChild prop\n  const renderElement =\n    asChild && React.isValidElement(children)\n      ? (children as React.ReactElement<Record<string, unknown>, string | React.JSXElementConstructor<unknown>>)\n      : render || <button />;\n\n  // When using asChild, children becomes the element props, otherwise use children normally\n  const finalProps =\n    asChild && React.isValidElement(children)\n      ? mergeProps(defaultProps, props)\n      : mergeProps(defaultProps, { ...props, children });\n\n  const element = useRender({\n    render: renderElement,\n    props: finalProps,\n  });\n\n  return element;\n}\n\ninterface ButtonArrowProps extends React.SVGProps<SVGSVGElement> {\n  icon?: LucideIcon;\n}\n\nfunction ButtonArrow({ icon: Icon = ChevronDown, className, ...props }: ButtonArrowProps) {\n  return <Icon data-slot=\"button-arrow\" className={cn('ms-auto -me-1', className)} {...props} />;\n}\n\nexport { Button, ButtonArrow, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/base-combobox.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Combobox as ComboboxPrimitive } from '@base-ui-components/react/combobox';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { Check, ChevronDown, X } from 'lucide-react';\n\n// Define input size variants (without file: part)\nconst inputVariants = cva(\n  `\n    flex w-full bg-background border border-input shadow-xs shadow-black/5 transition-[color,box-shadow] text-foreground placeholder:text-muted-foreground/80 \n    focus-visible:ring-ring/30 focus-visible:border-ring focus-visible:outline-none focus-visible:ring-[3px]     \n    has-[[data-slot=combobox-input]:focus-visible]:ring-ring/30 \n    has-[[data-slot=combobox-input]:focus-visible]:border-ring\n    has-[[data-slot=combobox-input]:focus-visible]:outline-none\n    has-[[data-slot=combobox-input]:focus-visible]:ring-[3px]\n    [&_[data-slot=combobox-input]]:grow\n    disabled:cursor-not-allowed disabled:opacity-60 \n    [&[readonly]]:bg-muted/80 [&[readonly]]:cursor-not-allowed\n    aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n  `,\n  {\n    variants: {\n      variant: {\n        lg: 'py-1 min-h-10 px-4 text-sm rounded-md [&~[data-slot=combobox-icon]]:end-2.5 [&~[data-slot=combobox-clear]]:end-7',\n        md: 'py-1 min-h-9 px-3 text-sm rounded-md [&~[data-slot=combobox-icon]]:end-2 [&~[data-slot=combobox-clear]]:end-6',\n        sm: 'py-0.5 min-h-8 px-2.5 text-xs rounded-md [&~[data-slot=combobox-icon]]:end-1.75 [&~[data-slot=combobox-clear]]:end-5.75',\n      },\n    },\n    defaultVariants: {\n      variant: 'md',\n    },\n  },\n);\n\nconst chipsVariants = cva(\n  [\n    'flex items-center flex-wrap gap-1',\n    '[&_[data-slot=combobox-input]]:py-0 [&_[data-slot=combobox-input]]:px-1.5 has-[[data-slot=combobox-chip]]:[&_[data-slot=combobox-input]]:px-0',\n    '[&_[data-slot=combobox-input]]:min-h-0 [&_[data-slot=combobox-input]]:flex-1',\n    '[&_[data-slot=combobox-input]]:border-0 [&_[data-slot=combobox-input]]:shadow-none [&_[data-slot=combobox-input]]:rounded-none',\n    '[&_[data-slot=combobox-input]]:outline-none [&_[data-slot=combobox-input]]:ring-0',\n  ],\n  {\n    variants: {\n      variant: {\n        sm: 'px-0.75',\n        md: 'px-1',\n        lg: 'px-1.5',\n      },\n    },\n  },\n);\n\n// Root - Groups all parts of the combobox\nfunction Combobox({ ...props }: React.ComponentProps<typeof ComboboxPrimitive.Root>) {\n  return <ComboboxPrimitive.Root data-slot=\"combobox\" {...props} />;\n}\n\n// Input and Clear controls\nfunction ComboboxControl({ className, ...props }: React.ComponentProps<'div'>) {\n  return <span data-slot=\"combobox-control\" className={cn('relative', className)} {...props} />;\n}\n\n// Value - Displays the selected value\nfunction ComboboxValue({ ...props }: React.ComponentProps<typeof ComboboxPrimitive.Value>) {\n  return <ComboboxPrimitive.Value data-slot=\"combobox-value\" {...props} />;\n}\n\n// Input - The input element for typing\nfunction ComboboxInput({\n  className,\n  variant = 'md',\n  ...props\n}: React.ComponentProps<typeof ComboboxPrimitive.Input> & VariantProps<typeof inputVariants>) {\n  return (\n    <ComboboxPrimitive.Input\n      data-slot=\"combobox-input\"\n      data-variant={variant}\n      className={cn(inputVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\n// Status - Displays the status of the combobox\nfunction ComboboxStatus({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Status>) {\n  return (\n    <ComboboxPrimitive.Status\n      data-slot=\"combobox-status\"\n      className={cn('text-muted-foreground text-sm', className)}\n      {...props}\n    />\n  );\n}\n\n// Portal - A portal element that moves the popup to a different part of the DOM\nfunction ComboboxPortal({ ...props }: React.ComponentProps<typeof ComboboxPrimitive.Portal>) {\n  return <ComboboxPrimitive.Portal data-slot=\"combobox-portal\" {...props} />;\n}\n\n// Backdrop - An overlay displayed beneath the combobox popup\nfunction ComboboxBackdrop({ ...props }: React.ComponentProps<typeof ComboboxPrimitive.Backdrop>) {\n  return <ComboboxPrimitive.Backdrop data-slot=\"combobox-backdrop\" {...props} />;\n}\n\nfunction ComboboxContent({\n  className,\n  children,\n  showBackdrop = false,\n  align = 'start',\n  sideOffset = 4,\n  alignOffset = 0,\n  side = 'bottom',\n  anchor,\n  ...props\n}: React.ComponentProps<typeof ComboboxPrimitive.Popup> & {\n  align?: ComboboxPrimitive.Positioner.Props['align'];\n  sideOffset?: ComboboxPrimitive.Positioner.Props['sideOffset'];\n  alignOffset?: ComboboxPrimitive.Positioner.Props['alignOffset'];\n  anchor?: ComboboxPrimitive.Positioner.Props['anchor'];\n  side?: ComboboxPrimitive.Positioner.Props['side'];\n  showBackdrop?: boolean;\n}) {\n  return (\n    <ComboboxPortal>\n      {showBackdrop && <ComboboxBackdrop />}\n      <ComboboxPositioner align={align} sideOffset={sideOffset} alignOffset={alignOffset} side={side} anchor={anchor}>\n        <ComboboxPopup className={className} {...props}>\n          {children}\n        </ComboboxPopup>\n      </ComboboxPositioner>\n    </ComboboxPortal>\n  );\n}\n\n// Positioner - Positions the combobox popup against the input\nfunction ComboboxPositioner({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Positioner>) {\n  return (\n    <ComboboxPrimitive.Positioner\n      data-slot=\"combobox-positioner\"\n      className={cn('z-50 outline-none', className)}\n      {...props}\n    />\n  );\n}\n\n// Popup - A container for the combobox options\nfunction ComboboxPopup({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Popup>) {\n  return (\n    <ComboboxPrimitive.Popup\n      data-slot=\"combobox-popup\"\n      className={cn(\n        'py-1 w-[var(--anchor-width)] max-h-[min(var(--available-height),23rem)] max-w-[var(--available-width)]',\n        'overflow-y-auto scroll-pt-2 scroll-pb-2 overscroll-contain bg-[canvas]',\n        'rounded-md border border-border bg-popover text-popover-foreground shadow-md shadow-black/5',\n        'origin-[var(--transform-origin)] transition-[transform,scale,opacity] data-[ending-style]:scale-90',\n        'data-[ending-style]:opacity-0 data-[starting-style]:scale-90 data-[starting-style]:opacity-0',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\n// List - A container for the combobox options\nfunction ComboboxList({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.List>) {\n  return <ComboboxPrimitive.List data-slot=\"combobox-list\" className={cn('space-y-0.5', className)} {...props} />;\n}\n\n// Collection - A collection of combobox items\nfunction ComboboxCollection({ ...props }: React.ComponentProps<typeof ComboboxPrimitive.Collection>) {\n  return <ComboboxPrimitive.Collection data-slot=\"combobox-collection\" {...props} />;\n}\n\n// Row - A row container for combobox items\nfunction ComboboxRow({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Row>) {\n  return (\n    <ComboboxPrimitive.Row data-slot=\"combobox-row\" className={cn('flex items-center gap-2', className)} {...props} />\n  );\n}\n\n// Item - An individual selectable option in the combobox\nfunction ComboboxItem({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Item>) {\n  return (\n    <ComboboxPrimitive.Item\n      data-slot=\"combobox-item\"\n      className={cn(\n        'relative cursor-default flex items-center',\n        'text-foreground relative select-none items-center gap-2 rounded-md ps-7 pe-2 py-1.5 text-sm outline-hidden transition-colors data-disabled:pointer-events-none data-disabled:opacity-50',\n        '[&_svg]:pointer-events-none [&_svg:not([role=img]):not([class*=text-])]:opacity-60 [&_svg:not([class*=size-])]:size-4 [&_svg]:shrink-0',\n        'data-[highlighted]:relative data-[highlighted]:z-0 data-[highlighted]:text-foreground data-[highlighted]:before:absolute data-[highlighted]:before:inset-x-1 data-[highlighted]:before:inset-y-0 data-[highlighted]:before:z-[-1] data-[highlighted]:before:rounded-sm data-[highlighted]:before:bg-accent',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\n// ItemIndicator - An indicator for selected items\nfunction ComboboxItemIndicator({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.ItemIndicator>) {\n  return (\n    <ComboboxPrimitive.ItemIndicator\n      data-slot=\"combobox-item-indicator\"\n      className={cn('absolute flex top-1/2 -translate-y-1/2 items-center justify-center start-2.5', className)}\n      {...props}\n    >\n      <Check className=\"h-4 w-4 text-primary\" />\n    </ComboboxPrimitive.ItemIndicator>\n  );\n}\n\n// Group - Groups related combobox items with the corresponding label\nfunction ComboboxGroup({ ...props }: React.ComponentProps<typeof ComboboxPrimitive.Group>) {\n  return <ComboboxPrimitive.Group data-slot=\"combobox-group\" {...props} />;\n}\n\n// GroupLabel - An accessible label that is automatically associated with its parent group\nfunction ComboboxGroupLabel({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.GroupLabel>) {\n  return (\n    <ComboboxPrimitive.GroupLabel\n      data-slot=\"combobox-group-label\"\n      className={cn('px-2 py-1.5 text-xs text-muted-foreground font-medium', className)}\n      {...props}\n    />\n  );\n}\n\n// Empty - A component to display when no options are available\nfunction ComboboxEmpty({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Empty>) {\n  return (\n    <ComboboxPrimitive.Empty\n      data-slot=\"combobox-empty\"\n      className={cn('px-2 py-1.5 text-sm text-muted-foreground empty:m-0 empty:p-0', className)}\n      {...props}\n    />\n  );\n}\n\n// Clear - A button to clear the input value\nfunction ComboboxClear({ className, children, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Clear>) {\n  return (\n    <ComboboxPrimitive.Clear\n      data-slot=\"combobox-clear\"\n      className={cn(\n        'absolute cursor-pointer end-6 top-1/2 -translate-y-1/2 rounded-sm opacity-70 ring-offset-background',\n        'transition-opacity opacity-60 hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none',\n        'data-[disabled]:pointer-events-none',\n        className,\n      )}\n      {...props}\n    >\n      {children ? children : <X className=\"size-3.5 opacity-100\" />}\n    </ComboboxPrimitive.Clear>\n  );\n}\n\n// Icon - An icon element for the combobox\nfunction ComboboxIcon({ className, children, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Icon>) {\n  return (\n    <ComboboxPrimitive.Icon\n      data-slot=\"combobox-icon\"\n      className={cn(\n        'absolute cursor-pointer end-2 top-1/2 -translate-y-1/2 rounded-sm opacity-70 ring-offset-background transition-opacity',\n        'opacity-60 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none',\n        'data-[disabled]:pointer-events-none',\n        className,\n      )}\n      {...props}\n    >\n      {children ? children : <ChevronDown className=\"size-3.5 opacity-100\" />}\n    </ComboboxPrimitive.Icon>\n  );\n}\n\n// Arrow - Displays an element positioned against the combobox anchor\nfunction ComboboxArrow({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Arrow>) {\n  return <ComboboxPrimitive.Arrow data-slot=\"combobox-arrow\" className={cn('', className)} {...props} />;\n}\n\n// Trigger - A button that opens the combobox\nfunction ComboboxTrigger({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Trigger>) {\n  return <ComboboxPrimitive.Trigger data-slot=\"combobox-trigger\" className={cn('relative', className)} {...props} />;\n}\n\n// Chips - A container for selected items as chips (for multi-select)\nfunction ComboboxChips({\n  className,\n  variant = 'md',\n  ...props\n}: React.ComponentProps<typeof ComboboxPrimitive.Chips> & VariantProps<typeof inputVariants>) {\n  return (\n    <ComboboxPrimitive.Chips\n      data-slot=\"combobox-chips\"\n      className={cn(inputVariants({ variant }), chipsVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\n// Chip - An individual chip representing a selected item\nfunction ComboboxChip({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Chip>) {\n  return (\n    <ComboboxPrimitive.Chip\n      data-slot=\"combobox-chip\"\n      className={cn(\n        'inline-flex items-center gap-1 rounded-md bg-muted px-2 py-1 text-xs font-medium text-foreground',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\n// ChipRemove - A button to remove a chip\nfunction ComboboxChipRemove({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ComboboxPrimitive.ChipRemove>) {\n  return (\n    <ComboboxPrimitive.ChipRemove\n      data-slot=\"combobox-chip-remove\"\n      className={cn(\n        'cursor-pointer ms-1 rounded-sm [&_svg]:opacity-60 hover:bg-muted-foreground/20 hover:[&_svg]:opacity-100',\n        className,\n      )}\n      {...props}\n    >\n      {children ? children : <X className=\"size-3.5\" />}\n    </ComboboxPrimitive.ChipRemove>\n  );\n}\n\n// Separator - A separator element accessible to screen readers\nfunction ComboboxSeparator({ className, ...props }: React.ComponentProps<typeof ComboboxPrimitive.Separator>) {\n  return (\n    <ComboboxPrimitive.Separator\n      data-slot=\"combobox-separator\"\n      className={cn('my-1.5 h-px bg-muted', className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Combobox,\n  ComboboxContent,\n  ComboboxControl,\n  ComboboxValue,\n  ComboboxInput,\n  ComboboxTrigger,\n  ComboboxIcon,\n  ComboboxStatus,\n  ComboboxPortal,\n  ComboboxBackdrop,\n  ComboboxPositioner,\n  ComboboxPopup,\n  ComboboxList,\n  ComboboxCollection,\n  ComboboxRow,\n  ComboboxItem,\n  ComboboxItemIndicator,\n  ComboboxGroup,\n  ComboboxGroupLabel,\n  ComboboxEmpty,\n  ComboboxClear,\n  ComboboxArrow,\n  ComboboxChips,\n  ComboboxChip,\n  ComboboxChipRemove,\n  ComboboxSeparator,\n};\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/base-dialog.tsx",
      "content": "import * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { buttonVariants } from '@/registry/default/ui/base-button';\nimport { Dialog as DialogPrimitive } from '@base-ui-components/react/dialog';\nimport { X } from 'lucide-react';\n\nfunction Dialog({ ...props }: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\n}\n\nfunction DialogTrigger(props: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\n}\n\nfunction DialogPortal({ ...props }: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\n}\n\nfunction DialogAction({ className, ...props }: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return (\n    <DialogPrimitive.Close\n      data-slot=\"dialog-action\"\n      className={cn(!props.render && buttonVariants(), className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogClose({ className, ...props }: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return (\n    <DialogPrimitive.Close\n      data-slot=\"dialog-close\"\n      className={cn(!props.render && buttonVariants({ variant: 'outline' }), className)}\n      {...props}\n    />\n  );\n}\n\n// Base UI Dialog Backdrop\nfunction DialogBackdrop({ className, ...props }: React.ComponentProps<typeof DialogPrimitive.Backdrop>) {\n  return (\n    <DialogPrimitive.Backdrop\n      data-slot=\"dialog-backdrop\"\n      className={cn(\n        'fixed inset-0 z-50 bg-black/30 [backdrop-filter:blur(4px)] transition-all duration-150 data-[ending-style]:opacity-0 data-[starting-style]:opacity-0',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DialogPopup({\n  className,\n  fullscreen = false,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Popup> & { fullscreen?: boolean }) {\n  return (\n    <DialogPrimitive.Popup\n      data-slot=\"dialog-popup\"\n      className={cn(\n        `\n          fixed z-50 grid\n          gap-4 border bg-background p-6 shadow-lg shadow-black/5 \n          transition-all duration-150 \n          data-[ending-style]:scale-90 data-[ending-style]:opacity-0 \n          data-[starting-style]:scale-90 data-[starting-style]:opacity-0 \n          sm:rounded-lg\n        `,\n        fullscreen\n          ? 'inset-5'\n          : 'left-[50%] top-[50%] w-full max-w-[calc(100%-2rem)] sm:max-w-lg translate-x-[-50%] translate-y-[-50%]',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport interface DialogContentProps extends React.ComponentProps<typeof DialogPrimitive.Popup> {\n  showDismissButton?: boolean;\n  showBackdrop?: boolean;\n  fullscreen?: boolean;\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showBackdrop = true,\n  showDismissButton = true,\n  fullscreen = false,\n  ...props\n}: DialogContentProps) {\n  return (\n    <DialogPortal>\n      {showBackdrop && <DialogBackdrop />}\n      <DialogPopup fullscreen={fullscreen} {...props} className={className}>\n        {children}\n        {showDismissButton && (\n          <DialogPrimitive.Close\n            data-slot=\"alert-dialog-dismiss\"\n            className={cn(buttonVariants({ variant: 'dim', size: 'sm' }), 'absolute top-2.5 end-2.5', className)}\n          >\n            <X />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPopup>\n    </DialogPortal>\n  );\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn('flex flex-col gap-2 text-center sm:text-left', className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogBody({ className, ...props }: React.ComponentProps<'div'>) {\n  return <div data-slot=\"sheet-body\" className={cn('px-4 py-2.5', className)} {...props} />;\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2.5', className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogTitle({ className, ...props }: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn('text-lg leading-none font-semibold', className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogDescription({ className, ...props }: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn('text-muted-foreground text-sm', className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogAction,\n  DialogContent,\n  DialogDescription,\n  DialogBody,\n  DialogFooter,\n  DialogHeader,\n  DialogBackdrop,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/base-input.tsx",
      "content": "import * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Input as BaseInput } from '@base-ui-components/react/input';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\n// Define input size variants\nconst inputVariants = cva(\n  `\n    flex w-full bg-background border border-input shadow-xs shadow-black/5 transition-[color,box-shadow] text-foreground placeholder:text-muted-foreground/80 \n    focus-visible:ring-ring/30  focus-visible:border-ring focus-visible:outline-none focus-visible:ring-[3px]     \n    disabled:cursor-not-allowed disabled:opacity-60 \n    [&[readonly]]:bg-muted/80 [&[readonly]]:cursor-not-allowed\n    file:h-full [&[type=file]]:py-0 file:border-solid file:border-input file:bg-transparent \n    file:font-medium file:not-italic file:text-foreground file:p-0 file:border-0 file:border-e\n    aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n  `,\n  {\n    variants: {\n      variant: {\n        lg: 'h-10 px-4 text-sm rounded-md file:pe-4 file:me-4',\n        md: 'h-9 px-3 text-sm rounded-md file:pe-3 file:me-3',\n        sm: 'h-8 px-2.5 text-xs rounded-md file:pe-2.5 file:me-2.5',\n      },\n    },\n    defaultVariants: {\n      variant: 'md',\n    },\n  },\n);\n\nconst inputAddonVariants = cva(\n  'flex items-center shrink-0 justify-center bg-muted border border-input shadow-xs shadow-[rgba(0,0,0,0.05)] text-secondary-foreground [&_svg]:text-secondary-foreground/60',\n  {\n    variants: {\n      variant: {\n        lg: 'rounded-md h-10 min-w-10 px-4 text-sm [&_svg:not([class*=size-])]:size-4.5',\n        md: 'rounded-md h-9 min-w-9 px-3 text-sm [&_svg:not([class*=size-])]:size-4.5',\n        sm: 'rounded-md h-8 min-w-7 text-xs px-2.5 [&_svg:not([class*=size-])]:size-3.5',\n      },\n      mode: {\n        default: '',\n        icon: 'px-0 justify-center',\n      },\n    },\n    defaultVariants: {\n      variant: 'md',\n      mode: 'default',\n    },\n  },\n);\n\nconst inputGroupVariants = cva(\n  `\n    flex items-stretch\n    [&_[data-slot=input]]:grow\n    [&_[data-slot=input-addon]:has(+[data-slot=input])]:rounded-e-none [&_[data-slot=input-addon]:has(+[data-slot=input])]:border-e-0\n    [&_[data-slot=input-addon]:has(+[data-slot=datefield])]:rounded-e-none [&_[data-slot=input-addon]:has(+[data-slot=datefield])]:border-e-0 \n    [&_[data-slot=input]+[data-slot=input-addon]]:rounded-s-none [&_[data-slot=input]+[data-slot=input-addon]]:border-s-0\n    [&_[data-slot=input-addon]:has(+[data-slot=button])]:rounded-e-none\n    [&_[data-slot=input]+[data-slot=button]]:rounded-s-none\n    [&_[data-slot=button]+[data-slot=input]]:rounded-s-none\n    [&_[data-slot=input-addon]+[data-slot=input]]:rounded-s-none\n    [&_[data-slot=input-addon]+[data-slot=datefield]]:[&_[data-slot=input]]:rounded-s-none\n    [&_[data-slot=input]:has(+[data-slot=button])]:rounded-e-none\n    [&_[data-slot=input]:has(+[data-slot=input-addon])]:rounded-e-none\n    [&_[data-slot=datefield]]:grow\n    [&_[data-slot=datefield]+[data-slot=input-addon]]:rounded-s-none \n    [&_[data-slot=datefield]+[data-slot=input-addon]]:border-s-0\n    [&_[data-slot=datefield]:has(~[data-slot=input-addon])]:[&_[data-slot=input]]:rounded-e-none\n    [&_[data-slot=datefield]~[data-slot=input-addon]]:rounded-s-none\n  `,\n  {\n    variants: {},\n    defaultVariants: {},\n  },\n);\n\nconst inputWrapperVariants = cva(\n  `\n    flex items-center gap-1.5\n    has-[:focus-visible]:ring-ring/30 \n    has-[:focus-visible]:border-ring\n    has-[:focus-visible]:outline-none \n    has-[:focus-visible]:ring-[3px]\n\n    [&_[data-slot=datefield]]:grow \n    [&_[data-slot=input]]:data-focus-within:ring-transparent  \n    [&_[data-slot=input]]:data-focus-within:ring-0 \n    [&_[data-slot=input]]:data-focus-within:border-0 \n    [&_[data-slot=input]]:flex \n    [&_[data-slot=input]]:w-full \n    [&_[data-slot=input]]:outline-none \n    [&_[data-slot=input]]:transition-colors \n    [&_[data-slot=input]]:text-foreground\n    [&_[data-slot=input]]:placeholder:text-muted-foreground \n    [&_[data-slot=input]]:border-0 \n    [&_[data-slot=input]]:bg-transparent \n    [&_[data-slot=input]]:p-0\n    [&_[data-slot=input]]:shadow-none \n    [&_[data-slot=input]]:focus-visible:ring-0 \n    [&_[data-slot=input]]:h-auto \n    [&_[data-slot=input]]:disabled:cursor-not-allowed\n    [&_[data-slot=input]]:disabled:opacity-50    \n\n    [&_svg]:text-muted-foreground \n\n    has-[[aria-invalid=true]]:border-destructive/60 \n    has-[[aria-invalid=true]]:ring-destructive/10 \n    dark:has-[[aria-invalid=true]]:border-destructive \n    dark:has-[[aria-invalid=true]]:ring-destructive/20    \n  `,\n  {\n    variants: {\n      variant: {\n        sm: 'gap-1.25 [&_svg:not([class*=size-])]:size-3.5',\n        md: 'gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        lg: 'gap-1.5 [&_svg:not([class*=size-])]:size-4',\n      },\n    },\n    defaultVariants: {\n      variant: 'md',\n    },\n  },\n);\n\nfunction Input({\n  className,\n  type,\n  variant,\n  ...props\n}: React.ComponentProps<typeof BaseInput> & VariantProps<typeof inputVariants>) {\n  return <input data-slot=\"input\" type={type} className={cn(inputVariants({ variant }), className)} {...props} />;\n}\n\nfunction InputAddon({\n  className,\n  variant,\n  mode,\n  ...props\n}: React.ComponentProps<'div'> & VariantProps<typeof inputAddonVariants>) {\n  return <div data-slot=\"input-addon\" className={cn(inputAddonVariants({ variant, mode }), className)} {...props} />;\n}\n\nfunction InputGroup({ className, ...props }: React.ComponentProps<'div'> & VariantProps<typeof inputGroupVariants>) {\n  return <div data-slot=\"input-group\" className={cn(inputGroupVariants(), className)} {...props} />;\n}\n\nfunction InputWrapper({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<'div'> & VariantProps<typeof inputWrapperVariants>) {\n  return (\n    <div\n      data-slot=\"input-wrapper\"\n      className={cn(inputVariants({ variant }), inputWrapperVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nexport { Input, InputAddon, InputGroup, InputWrapper, inputVariants, inputAddonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/base-label.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nconst labelVariants = cva(\n  'text-sm leading-none text-foreground peer-disabled:cursor-not-allowed peer-disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        primary: 'font-medium',\n        secondary: 'font-normal',\n      },\n    },\n    defaultVariants: {\n      variant: 'primary',\n    },\n  },\n);\n\nfunction Label({ className, variant, ...props }: React.ComponentProps<'label'> & VariantProps<typeof labelVariants>) {\n  return <label data-slot=\"label\" className={cn(labelVariants({ variant }), className)} {...props} />;\n}\n\nexport { Label };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}