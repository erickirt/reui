{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "base-toggle-group-size",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "tailwind-merge",
    "@base-ui-components/react",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "https://reui.io/r/base-toggle-group.json"
  ],
  "files": [
    {
      "path": "registry/default/components/base-toggle-group/size.tsx",
      "content": "import { ToggleGroup, ToggleGroupItem } from '@/registry/default/ui/base-toggle-group';\n\nexport default function TabsDemo() {\n  return (\n    <div className=\"flex flex-col items-center gap-5\">\n      <ToggleGroup toggleMultiple variant=\"outline\" size=\"sm\" defaultValue={['1W', '1M']}>\n        <ToggleGroupItem value=\"1D\">1D</ToggleGroupItem>\n        <ToggleGroupItem value=\"1W\">1W</ToggleGroupItem>\n        <ToggleGroupItem value=\"1M\">1M</ToggleGroupItem>\n        <ToggleGroupItem value=\"6M\">6M</ToggleGroupItem>\n        <ToggleGroupItem value=\"1Y\">1Y</ToggleGroupItem>\n      </ToggleGroup>\n      <ToggleGroup toggleMultiple variant=\"outline\" defaultValue={['1W', '1M']}>\n        <ToggleGroupItem value=\"1D\">1D</ToggleGroupItem>\n        <ToggleGroupItem value=\"1W\">1W</ToggleGroupItem>\n        <ToggleGroupItem value=\"1M\">1M</ToggleGroupItem>\n        <ToggleGroupItem value=\"6M\">6M</ToggleGroupItem>\n        <ToggleGroupItem value=\"1Y\">1Y</ToggleGroupItem>\n      </ToggleGroup>\n      <ToggleGroup toggleMultiple variant=\"outline\" size=\"lg\" defaultValue={['1W', '1M']}>\n        <ToggleGroupItem value=\"1D\">1D</ToggleGroupItem>\n        <ToggleGroupItem value=\"1W\">1W</ToggleGroupItem>\n        <ToggleGroupItem value=\"1M\">1M</ToggleGroupItem>\n        <ToggleGroupItem value=\"6M\">6M</ToggleGroupItem>\n        <ToggleGroupItem value=\"1Y\">1Y</ToggleGroupItem>\n      </ToggleGroup>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/ui/base-toggle-group.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { toggleVariants } from '@/registry/default/ui/base-toggle';\nimport { Toggle as TogglePrimitive } from '@base-ui-components/react/toggle';\nimport { ToggleGroup as ToggleGroupPrimitive } from '@base-ui-components/react/toggle-group';\nimport { type VariantProps } from 'class-variance-authority';\n\nconst ToggleGroupContext = React.createContext<VariantProps<typeof toggleVariants>>({\n  size: 'md',\n  variant: 'default',\n});\n\nfunction ToggleGroup({\n  className,\n  variant,\n  size,\n  children,\n  ...props\n}: React.ComponentProps<typeof ToggleGroupPrimitive> & VariantProps<typeof toggleVariants>) {\n  return (\n    <ToggleGroupPrimitive\n      data-slot=\"toggle-group\"\n      data-variant={variant}\n      data-size={size}\n      className={cn(\n        'group/toggle-group flex items-center rounded-md gap-1 data-[variant=outline]:gap-0 data-[variant=outline]:shadow-xs',\n        className,\n      )}\n      {...props}\n    >\n      <ToggleGroupContext.Provider value={{ variant, size }}>{children}</ToggleGroupContext.Provider>\n    </ToggleGroupPrimitive>\n  );\n}\n\nfunction ToggleGroupItem({\n  className,\n  children,\n  variant,\n  size,\n  value,\n  ...props\n}: React.ComponentProps<'button'> & VariantProps<typeof toggleVariants> & { value: string }) {\n  const context = React.useContext(ToggleGroupContext);\n\n  return (\n    <TogglePrimitive\n      data-slot=\"toggle-group-item\"\n      data-variant={context.variant || variant}\n      data-size={context.size || size}\n      value={value}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        'shrink-0 shadow-none data-[variant=outline]:rounded-none data-[variant=outline]:first:rounded-s-md data-[variant=outline]:last:rounded-e-md focus:z-10 focus-visible:z-10 data-[variant=outline]:border-s-0 data-[variant=outline]:first:border-s',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n    </TogglePrimitive>\n  );\n}\n\nexport { ToggleGroup as ToggleGroup, ToggleGroupItem };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "registry/default/ui/base-toggle.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Toggle as TogglePrimitive } from '@base-ui-components/react/toggle';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nconst toggleVariants = cva(\n  'cursor-pointer inline-flex items-center justify-center rounded-md shrink-0 font-medium ring-offset-background transition-colors hover:bg-muted hover:text-foreground focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[pressed]:bg-accent data-[pressed]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'bg-transparent',\n        outline: 'border border-input bg-transparent hover:bg-accent hover:text-accent-foreground',\n      },\n      size: {\n        lg: 'h-10 min-w-10 rounded-md px-2.5 text-sm gap-1.5 [&_svg]:size-4',\n        md: 'h-8.5 min-w-8.5 rounded-md px-2 text-[0.8125rem] leading-(--text-sm--line-height) gap-1 [&_svg]:size-4',\n        sm: 'h-7 min-w-7 rounded-md px-1.25 text-xs gap-1 [&_svg]:size-3.5',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'md',\n    },\n  },\n);\n\nfunction Toggle({\n  className,\n  variant,\n  size,\n  ...props\n}: React.ComponentProps<typeof TogglePrimitive> & VariantProps<typeof toggleVariants>) {\n  return <TogglePrimitive data-slot=\"toggle\" className={cn(toggleVariants({ variant, size, className }))} {...props} />;\n}\n\nexport { Toggle, toggleVariants };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}