{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "base-context-menu-default",
  "type": "registry:component",
  "dependencies": [
    "@base-ui-components/react",
    "lucide-react"
  ],
  "registryDependencies": [
    "https://reui.io/r/base-context-menu.json"
  ],
  "files": [
    {
      "path": "registry/default/components/base-context-menu/default.tsx",
      "content": "import {\n  ContextMenu,\n  ContextMenuCheckboxItem,\n  ContextMenuContent,\n  ContextMenuGroup,\n  ContextMenuGroupLabel,\n  ContextMenuItem,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuTrigger,\n} from '@/registry/default/ui/base-context-menu';\n\nexport default function ContextMenuDemo() {\n  return (\n    <ContextMenu>\n      <ContextMenuTrigger className=\"flex h-[150px] w-[300px] items-center justify-center rounded-md border border-dashed text-sm\">\n        Right click here\n      </ContextMenuTrigger>\n      <ContextMenuContent className=\"w-56\">\n        <ContextMenuItem inset>\n          New File\n          <ContextMenuShortcut>⌘N</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuItem inset>\n          Open File\n          <ContextMenuShortcut>⌘O</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuItem inset disabled>\n          Save\n          <ContextMenuShortcut>⌘S</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuSub>\n          <ContextMenuSubTrigger inset>Edit</ContextMenuSubTrigger>\n          <ContextMenuSubContent className=\"w-48\" sideOffset={6}>\n            <ContextMenuItem>Cut</ContextMenuItem>\n            <ContextMenuItem>Copy</ContextMenuItem>\n            <ContextMenuItem>Paste</ContextMenuItem>\n            <ContextMenuSeparator />\n            <ContextMenuItem>Find & Replace</ContextMenuItem>\n            <ContextMenuSeparator />\n            <ContextMenuItem variant=\"destructive\">Clear All</ContextMenuItem>\n          </ContextMenuSubContent>\n        </ContextMenuSub>\n        <ContextMenuSeparator />\n        <ContextMenuCheckboxItem defaultChecked>Show Line Numbers</ContextMenuCheckboxItem>\n        <ContextMenuCheckboxItem>Word Wrap</ContextMenuCheckboxItem>\n        <ContextMenuSeparator />\n        <ContextMenuGroup>\n          <ContextMenuRadioGroup defaultValue=\"dark\">\n            <ContextMenuGroupLabel inset>Themes</ContextMenuGroupLabel>\n            <ContextMenuRadioItem value=\"light\">Light Theme</ContextMenuRadioItem>\n            <ContextMenuRadioItem value=\"dark\">Dark Theme</ContextMenuRadioItem>\n            <ContextMenuRadioItem value=\"auto\">Auto Theme</ContextMenuRadioItem>\n          </ContextMenuRadioGroup>\n        </ContextMenuGroup>\n      </ContextMenuContent>\n    </ContextMenu>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/ui/base-context-menu.tsx",
      "content": "import * as React from 'react';\nimport { ContextMenu as ContextMenuPrimitive } from '@base-ui-components/react/context-menu';\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nfunction ContextMenu({ ...props }: React.ComponentProps<typeof ContextMenuPrimitive.Root>) {\n  return <ContextMenuPrimitive.Root data-slot=\"context-menu\" {...props} />;\n}\n\nfunction ContextMenuTrigger({ ...props }: React.ComponentProps<typeof ContextMenuPrimitive.Trigger>) {\n  return <ContextMenuPrimitive.Trigger data-slot=\"context-menu-trigger\" {...props} />;\n}\n\nfunction ContextMenuGroup({ ...props }: React.ComponentProps<typeof ContextMenuPrimitive.Group>) {\n  return <ContextMenuPrimitive.Group data-slot=\"context-menu-group\" {...props} />;\n}\n\nfunction ContextMenuSub({ ...props }: React.ComponentProps<typeof ContextMenuPrimitive.SubmenuRoot>) {\n  return <ContextMenuPrimitive.SubmenuRoot data-slot=\"context-menu-sub\" {...props} />;\n}\n\nfunction ContextMenuRadioGroup({ ...props }: React.ComponentProps<typeof ContextMenuPrimitive.RadioGroup>) {\n  return <ContextMenuPrimitive.RadioGroup data-slot=\"context-menu-radio-group\" {...props} />;\n}\n\nfunction ContextMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.SubmenuTrigger> & {\n  inset?: boolean;\n}) {\n  return (\n    <ContextMenuPrimitive.SubmenuTrigger\n      data-slot=\"context-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:ps-7 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-3.5\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ms-auto opacity-60\" />\n    </ContextMenuPrimitive.SubmenuTrigger>\n  );\n}\n\nfunction ContextMenuSubPopup({ className, ...props }: React.ComponentProps<typeof ContextMenuPrimitive.Popup>) {\n  return (\n    <ContextMenuPrimitive.Popup\n      data-slot=\"context-menu-sub-popup\"\n      className={cn(\n        'bg-popover outline-none text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-context-menu-content-available-height) min-w-[8rem] origin-(--radix-context-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction ContextMenuSubContent({\n  className,\n  align,\n  sideOffset = 4,\n  alignOffset = 0,\n  side,\n  anchor,\n  children,\n}: React.ComponentProps<typeof ContextMenuPrimitive.Popup> & {\n  align?: ContextMenuPrimitive.Positioner.Props['align'];\n  sideOffset?: ContextMenuPrimitive.Positioner.Props['sideOffset'];\n  alignOffset?: ContextMenuPrimitive.Positioner.Props['alignOffset'];\n  side?: ContextMenuPrimitive.Positioner.Props['side'];\n  anchor?: ContextMenuPrimitive.Positioner.Props['anchor'];\n}) {\n  return (\n    <ContextMenuPortal>\n      <ContextMenuPositioner\n        align={align}\n        sideOffset={sideOffset}\n        alignOffset={alignOffset}\n        side={side}\n        anchor={anchor}\n      >\n        <ContextMenuSubPopup className={className}>{children}</ContextMenuSubPopup>\n      </ContextMenuPositioner>\n    </ContextMenuPortal>\n  );\n}\n\nfunction ContextMenuPopup({ className, ...props }: React.ComponentProps<typeof ContextMenuPrimitive.Popup>) {\n  return (\n    <ContextMenuPrimitive.Popup\n      data-slot=\"context-menu-content\"\n      className={cn(\n        'bg-popover outline-none text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-context-menu-content-available-height) min-w-[8rem] origin-(--radix-context-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction ContextMenuContent({\n  className,\n  align = 'start',\n  sideOffset = 4,\n  alignOffset = 0,\n  side = 'bottom',\n  anchor,\n  children,\n}: React.ComponentProps<typeof ContextMenuPrimitive.Popup> & {\n  align?: ContextMenuPrimitive.Positioner.Props['align'];\n  sideOffset?: ContextMenuPrimitive.Positioner.Props['sideOffset'];\n  alignOffset?: ContextMenuPrimitive.Positioner.Props['alignOffset'];\n  side?: ContextMenuPrimitive.Positioner.Props['side'];\n  anchor?: ContextMenuPrimitive.Positioner.Props['anchor'];\n}) {\n  return (\n    <ContextMenuPortal>\n      <ContextMenuPositioner\n        align={align}\n        sideOffset={sideOffset}\n        alignOffset={alignOffset}\n        side={side}\n        anchor={anchor}\n      >\n        <ContextMenuPopup className={className}>{children}</ContextMenuPopup>\n      </ContextMenuPositioner>\n    </ContextMenuPortal>\n  );\n}\n\nfunction ContextMenuItem({\n  className,\n  inset,\n  variant = 'default',\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.Item> & {\n  inset?: boolean;\n  variant?: 'default' | 'destructive';\n}) {\n  return (\n    <ContextMenuPrimitive.Item\n      data-slot=\"context-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:ps-7 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction ContextMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.CheckboxItem>) {\n  return (\n    <ContextMenuPrimitive.CheckboxItem\n      data-slot=\"context-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pe-2 ps-7 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className,\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute start-2 flex size-3.5 items-center justify-center\">\n        <ContextMenuPrimitive.CheckboxItemIndicator>\n          <CheckIcon className=\"size-4 text-primary\" />\n        </ContextMenuPrimitive.CheckboxItemIndicator>\n      </span>\n      {children}\n    </ContextMenuPrimitive.CheckboxItem>\n  );\n}\n\nfunction ContextMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.RadioItem>) {\n  return (\n    <ContextMenuPrimitive.RadioItem\n      data-slot=\"context-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 ps-7 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className,\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute start-2 flex size-3.5 items-center justify-center\">\n        <ContextMenuPrimitive.RadioItemIndicator>\n          <CircleIcon className=\"size-1.5 fill-primary\" />\n        </ContextMenuPrimitive.RadioItemIndicator>\n      </span>\n      {children}\n    </ContextMenuPrimitive.RadioItem>\n  );\n}\n\nfunction ContextMenuGroupLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof ContextMenuPrimitive.GroupLabel> & {\n  inset?: boolean;\n}) {\n  return (\n    <ContextMenuPrimitive.GroupLabel\n      data-slot=\"context-menu-group-label\"\n      data-inset={inset}\n      className={cn('text-muted-foreground px-2 py-1.5 text-xs font-medium data-[inset]:ps-7', className)}\n      {...props}\n    />\n  );\n}\n\nfunction ContextMenuSeparator({ className, ...props }: React.ComponentProps<typeof ContextMenuPrimitive.Separator>) {\n  return (\n    <ContextMenuPrimitive.Separator\n      data-slot=\"context-menu-separator\"\n      className={cn('bg-border -mx-1 my-1 h-px', className)}\n      {...props}\n    />\n  );\n}\n\nfunction ContextMenuShortcut({ className, ...props }: React.ComponentProps<'span'>) {\n  return (\n    <span\n      data-slot=\"context-menu-shortcut\"\n      className={cn('text-muted-foreground ms-auto text-xs tracking-widest', className)}\n      {...props}\n    />\n  );\n}\n\nfunction ContextMenuPositioner({ ...props }: React.ComponentProps<typeof ContextMenuPrimitive.Positioner>) {\n  return (\n    <ContextMenuPrimitive.Positioner data-slot=\"context-menu-positioner\" className=\"z-50 outline-none\" {...props} />\n  );\n}\n\nfunction ContextMenuPortal({ ...props }: React.ComponentProps<typeof ContextMenuPrimitive.Positioner>) {\n  return <ContextMenuPrimitive.Portal data-slot=\"context-menu-portal\" {...props} />;\n}\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuGroupLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubPopup,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n  ContextMenuPositioner,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}