{
  "base-slider": {
    "code": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/lib/utils';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\nimport { Slider as SliderPrimitive } from '@base-ui-components/react/slider';\n\nfunction Slider({\n  className,\n  defaultValue,\n  value,\n  min = 0,\n  max = 100,\n  showTooltip = false,\n  tooltipVariant = 'dark',\n  tooltipContent,\n  onValueChange,\n  children,\n  ...props\n}: React.ComponentProps<typeof SliderPrimitive.Root> & {\n  showTooltip?: boolean;\n  tooltipContent?: (value: number) => React.ReactNode;\n  tooltipVariant?: 'dark' | 'light';\n}) {\n  const [internalValues, setInternalValues] = React.useState<number[]>(\n    Array.isArray(value) ? value : Array.isArray(defaultValue) ? defaultValue : [min, max],\n  );\n\n  React.useEffect(() => {\n    if (value !== undefined) {\n      setInternalValues(Array.isArray(value) ? value : [value]);\n    }\n  }, [value]);\n\n  const handleValueChange = (\n    newValue: number | readonly number[],\n    eventDetails: {\n      reason: 'none';\n      event: Event;\n      cancel: () => void;\n      allowPropagation: () => void;\n      isCanceled: boolean;\n      isPropagationAllowed: boolean;\n    },\n    activeThumbIndex: number,\n  ) => {\n    const values = Array.isArray(newValue) ? [...newValue] : [newValue];\n    setInternalValues(values);\n    if (onValueChange) {\n      onValueChange(values, eventDetails, activeThumbIndex);\n    }\n  };\n\n  const [showTooltipState, setShowTooltipState] = React.useState(false);\n\n  const handlePointerDown = () => {\n    if (showTooltip) {\n      setShowTooltipState(true);\n    }\n  };\n\n  const handlePointerUp = React.useCallback(() => {\n    if (showTooltip) {\n      setShowTooltipState(false);\n    }\n  }, [showTooltip]);\n\n  React.useEffect(() => {\n    if (showTooltip) {\n      document.addEventListener('pointerup', handlePointerUp);\n      return () => {\n        document.removeEventListener('pointerup', handlePointerUp);\n      };\n    }\n  }, [showTooltip, handlePointerUp]);\n\n  const renderThumb = (thumbValue: number, index: number) => {\n    const thumb = (\n      <SliderPrimitive.Thumb\n        key={index}\n        data-slot=\"slider-thumb\"\n        className={cn(\n          'border-primary bg-background ring-ring/20 block size-4 shrink-0 rounded-full border shadow-sm transition-[color,box-shadow] outline-none hover:ring-4 data-[focused]:ring-4 data-[touched]:ring-4 data-[dragging]:ring-4 disabled:pointer-events-none disabled:opacity-50',\n        )}\n        onPointerDown={handlePointerDown}\n      />\n    );\n\n    if (!showTooltip) return thumb;\n\n    return (\n      <TooltipProvider key={index}>\n        <Tooltip open={showTooltipState}>\n          <TooltipTrigger asChild>{thumb}</TooltipTrigger>\n          <TooltipContent\n            className=\"px-2 py-1 text-xs\"\n            sideOffset={8}\n            side={props.orientation === 'vertical' ? 'right' : 'top'}\n            variant={tooltipVariant}\n          >\n            <p>{tooltipContent ? tooltipContent(thumbValue) : thumbValue}</p>\n          </TooltipContent>\n        </Tooltip>\n      </TooltipProvider>\n    );\n  };\n\n  return (\n    <SliderPrimitive.Root\n      data-slot=\"slider\"\n      defaultValue={defaultValue}\n      value={value}\n      min={min}\n      max={max}\n      className={cn(\n        'relative flex w-full touch-none select-none items-center data-[disabled]:opacity-50 data-[orientation=vertical]:h-full data-[orientation=vertical]:min-h-44 data-[orientation=vertical]:w-auto data-[orientation=vertical]:flex-col',\n        className,\n      )}\n      onValueChange={handleValueChange}\n      {...props}\n    >\n      <SliderPrimitive.Control className=\"relative flex h-4 w-full touch-none select-none items-center data-[orientation=vertical]:h-full data-[orientation=vertical]:w-auto data-[orientation=vertical]:flex-col\">\n        <SliderPrimitive.Track className=\"relative h-1.5 w-full overflow-hidden rounded-full bg-accent data-[orientation=horizontal]:h-1.5 data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-1.5\">\n          <SliderPrimitive.Indicator className=\"absolute h-full bg-primary data-[orientation=horizontal]:h-full data-[orientation=vertical]:w-full\" />\n        </SliderPrimitive.Track>\n        {showTooltip ? internalValues.map((thumbValue, index) => renderThumb(thumbValue, index)) : children}\n      </SliderPrimitive.Control>\n    </SliderPrimitive.Root>\n  );\n}\n\nfunction SliderThumb({ className, ...props }: React.ComponentProps<typeof SliderPrimitive.Thumb>) {\n  return (\n    <SliderPrimitive.Thumb\n      data-slot=\"slider-thumb\"\n      className={cn(\n        'border-primary bg-background ring-ring/20 block size-4 shrink-0 rounded-full border shadow-sm transition-[color,box-shadow] outline-none hover:ring-4 data-[focused]:ring-4 data-[touched]:ring-4 data-[dragging]:ring-4 disabled:pointer-events-none disabled:opacity-50',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Slider, SliderThumb };\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#79C0FF\"> *</span><span style=\"color:#FF7B72\"> as</span><span style=\"color:#E6EDF3\"> React </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/tooltip'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Slider </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#E6EDF3\"> SliderPrimitive } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@base-ui-components/react/slider'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> Slider</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  defaultValue</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  value</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  min</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  max</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 100</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  showTooltip</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  tooltipVariant</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'dark'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  tooltipContent</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onValueChange</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> SliderPrimitive.Root> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  showTooltip</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  tooltipContent</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  tooltipVariant</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#A5D6FF\"> 'dark'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'light'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">internalValues</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setInternalValues</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useState</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">number</span><span style=\"color:#E6EDF3\">[]>(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    Array.</span><span style=\"color:#D2A8FF\">isArray</span><span style=\"color:#E6EDF3\">(value) </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> value </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> Array.</span><span style=\"color:#D2A8FF\">isArray</span><span style=\"color:#E6EDF3\">(defaultValue) </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> defaultValue </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> [min, max],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  React.</span><span style=\"color:#D2A8FF\">useEffect</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (value </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setInternalValues</span><span style=\"color:#E6EDF3\">(Array.</span><span style=\"color:#D2A8FF\">isArray</span><span style=\"color:#E6EDF3\">(value) </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> value </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> [value]);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [value]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> handleValueChange</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    newValue</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#FF7B72\"> readonly</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">[],</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    eventDetails</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">      reason</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#A5D6FF\"> 'none'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">      event</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Event</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      cancel</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      allowPropagation</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">      isCanceled</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">      isPropagationAllowed</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    activeThumbIndex</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  ) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> values</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> Array.</span><span style=\"color:#D2A8FF\">isArray</span><span style=\"color:#E6EDF3\">(newValue) </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">newValue] </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> [newValue];</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    setInternalValues</span><span style=\"color:#E6EDF3\">(values);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (onValueChange) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      onValueChange</span><span style=\"color:#E6EDF3\">(values, eventDetails, activeThumbIndex);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">showTooltipState</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setShowTooltipState</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> handlePointerDown</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (showTooltip) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setShowTooltipState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> handlePointerUp</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useCallback</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (showTooltip) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setShowTooltipState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [showTooltip]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  React.</span><span style=\"color:#D2A8FF\">useEffect</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (showTooltip) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      document.</span><span style=\"color:#D2A8FF\">addEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'pointerup'</span><span style=\"color:#E6EDF3\">, handlePointerUp);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        document.</span><span style=\"color:#D2A8FF\">removeEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'pointerup'</span><span style=\"color:#E6EDF3\">, handlePointerUp);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      };</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [showTooltip, handlePointerUp]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> renderThumb</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">thumbValue</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#D2A8FF\"> thumb</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">SliderPrimitive.Thumb</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"slider-thumb\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'border-primary bg-background ring-ring/20 block size-4 shrink-0 rounded-full border shadow-sm transition-[color,box-shadow] outline-none hover:ring-4 data-[focused]:ring-4 data-[touched]:ring-4 data-[dragging]:ring-4 disabled:pointer-events-none disabled:opacity-50'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        onPointerDown</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handlePointerDown</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">showTooltip) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\"> thumb;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">TooltipProvider</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">Tooltip</span><span style=\"color:#79C0FF\"> open</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">showTooltipState</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">TooltipTrigger</span><span style=\"color:#79C0FF\"> asChild</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">thumb</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">TooltipTrigger</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">TooltipContent</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"px-2 py-1 text-xs\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            sideOffset</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#79C0FF\">8</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            side</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">props.orientation </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'vertical'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#A5D6FF\"> 'right'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'top'</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            variant</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">tooltipVariant</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">p</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">tooltipContent </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#D2A8FF\"> tooltipContent</span><span style=\"color:#E6EDF3\">(thumbValue) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> thumbValue</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">p</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">TooltipContent</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">Tooltip</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">TooltipProvider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">SliderPrimitive.Root</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"slider\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      defaultValue</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">defaultValue</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">value</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      min</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">min</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      max</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">max</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'relative flex w-full touch-none select-none items-center data-[disabled]:opacity-50 data-[orientation=vertical]:h-full data-[orientation=vertical]:min-h-44 data-[orientation=vertical]:w-auto data-[orientation=vertical]:flex-col'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      onValueChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handleValueChange</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">SliderPrimitive.Control</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"relative flex h-4 w-full touch-none select-none items-center data-[orientation=vertical]:h-full data-[orientation=vertical]:w-auto data-[orientation=vertical]:flex-col\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">SliderPrimitive.Track</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"relative h-1.5 w-full overflow-hidden rounded-full bg-accent data-[orientation=horizontal]:h-1.5 data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-1.5\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">SliderPrimitive.Indicator</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"absolute h-full bg-primary data-[orientation=horizontal]:h-full data-[orientation=vertical]:w-full\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">SliderPrimitive.Track</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">showTooltip </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> internalValues.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">thumbValue</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> renderThumb</span><span style=\"color:#E6EDF3\">(thumbValue, index)) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">SliderPrimitive.Control</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">SliderPrimitive.Root</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> SliderThumb</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> SliderPrimitive.Thumb>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">SliderPrimitive.Thumb</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"slider-thumb\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'border-primary bg-background ring-ring/20 block size-4 shrink-0 rounded-full border shadow-sm transition-[color,box-shadow] outline-none hover:ring-4 data-[focused]:ring-4 data-[touched]:ring-4 data-[dragging]:ring-4 disabled:pointer-events-none disabled:opacity-50'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> { Slider, SliderThumb };</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/base-slider.tsx",
    "timestamp": "2025-09-23T10:26:35.067Z"
  }
}