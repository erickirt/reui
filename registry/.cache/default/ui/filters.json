{
  "filters": {
    "code": "'use client';\n\nimport type React from 'react';\nimport { createContext, useCallback, useContext, useMemo, useState } from 'react';\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n} from '@/components/ui/command';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Switch } from '@/components/ui/switch';\nimport { Tooltip, TooltipContent, TooltipTrigger } from '@/components/ui/tooltip';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { AlertCircle, Check, Plus, X } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\n// i18n Configuration Interface\nexport interface FilterI18nConfig {\n  // UI Labels\n  addFilter: string;\n  searchFields: string;\n  noFieldsFound: string;\n  noResultsFound: string;\n  select: string;\n  true: string;\n  false: string;\n  min: string;\n  max: string;\n  to: string;\n  typeAndPressEnter: string;\n  selected: string;\n  selectedCount: string;\n  percent: string;\n  defaultCurrency: string;\n  defaultColor: string;\n  addFilterTitle: string;\n\n  // Operators\n  operators: {\n    is: string;\n    isNot: string;\n    isAnyOf: string;\n    isNotAnyOf: string;\n    includesAll: string;\n    excludesAll: string;\n    before: string;\n    after: string;\n    between: string;\n    notBetween: string;\n    contains: string;\n    notContains: string;\n    startsWith: string;\n    endsWith: string;\n    isExactly: string;\n    equals: string;\n    notEquals: string;\n    greaterThan: string;\n    lessThan: string;\n    overlaps: string;\n    includes: string;\n    excludes: string;\n    includesAllOf: string;\n    includesAnyOf: string;\n    empty: string;\n    notEmpty: string;\n  };\n\n  // Placeholders\n  placeholders: {\n    enterField: (fieldType: string) => string;\n    selectField: string;\n    searchField: (fieldName: string) => string;\n    enterKey: string;\n    enterValue: string;\n  };\n\n  // Helper functions\n  helpers: {\n    formatOperator: (operator: string) => string;\n  };\n\n  // Validation\n  validation: {\n    invalidEmail: string;\n    invalidUrl: string;\n    invalidTel: string;\n    invalid: string;\n  };\n}\n\n// Default English i18n configuration\nexport const DEFAULT_I18N: FilterI18nConfig = {\n  // UI Labels\n  addFilter: 'Add filter',\n  searchFields: 'Search fields...',\n  noFieldsFound: 'No fields found.',\n  noResultsFound: 'No results found.',\n  select: 'Select...',\n  true: 'True',\n  false: 'False',\n  min: 'Min',\n  max: 'Max',\n  to: 'to',\n  typeAndPressEnter: 'Type and press Enter to add tag',\n  selected: 'selected',\n  selectedCount: 'selected',\n  percent: '%',\n  defaultCurrency: '$',\n  defaultColor: '#000000',\n  addFilterTitle: 'Add filter',\n\n  // Operators\n  operators: {\n    is: 'is',\n    isNot: 'is not',\n    isAnyOf: 'is any of',\n    isNotAnyOf: 'is not any of',\n    includesAll: 'includes all',\n    excludesAll: 'excludes all',\n    before: 'before',\n    after: 'after',\n    between: 'between',\n    notBetween: 'not between',\n    contains: 'contains',\n    notContains: 'does not contain',\n    startsWith: 'starts with',\n    endsWith: 'ends with',\n    isExactly: 'is exactly',\n    equals: 'equals',\n    notEquals: 'not equals',\n    greaterThan: 'greater than',\n    lessThan: 'less than',\n    overlaps: 'overlaps',\n    includes: 'includes',\n    excludes: 'excludes',\n    includesAllOf: 'includes all of',\n    includesAnyOf: 'includes any of',\n    empty: 'is empty',\n    notEmpty: 'is not empty',\n  },\n\n  // Placeholders\n  placeholders: {\n    enterField: (fieldType: string) => `Enter ${fieldType}...`,\n    selectField: 'Select...',\n    searchField: (fieldName: string) => `Search ${fieldName.toLowerCase()}...`,\n    enterKey: 'Enter key...',\n    enterValue: 'Enter value...',\n  },\n\n  // Helper functions\n  helpers: {\n    formatOperator: (operator: string) => operator.replace(/_/g, ' '),\n  },\n\n  // Validation\n  validation: {\n    invalidEmail: 'Invalid email format',\n    invalidUrl: 'Invalid URL format',\n    invalidTel: 'Invalid phone format',\n    invalid: 'Invalid input format',\n  },\n};\n\n// Context for all Filter component props\ninterface FilterContextValue {\n  variant: 'solid' | 'outline';\n  size: 'sm' | 'md' | 'lg';\n  radius: 'md' | 'full';\n  i18n: FilterI18nConfig;\n  cursorPointer: boolean;\n  className?: string;\n  showAddButton?: boolean;\n  addButtonText?: string;\n  addButtonIcon?: React.ReactNode;\n  addButtonClassName?: string;\n  addButton?: React.ReactNode;\n  showSearchInput?: boolean;\n  trigger?: React.ReactNode;\n  allowMultiple?: boolean;\n}\n\nconst FilterContext = createContext<FilterContextValue>({\n  variant: 'outline',\n  size: 'md',\n  radius: 'md',\n  i18n: DEFAULT_I18N,\n  cursorPointer: true,\n  className: undefined,\n  showAddButton: true,\n  addButtonText: undefined,\n  addButtonIcon: undefined,\n  addButtonClassName: undefined,\n  addButton: undefined,\n  showSearchInput: true,\n  trigger: undefined,\n  allowMultiple: true,\n});\n\nconst useFilterContext = () => useContext(FilterContext);\n\n// Reusable input variant component for consistent styling\nconst filterInputVariants = cva(\n  [\n    'transition shrink-0 outline-none text-foreground relative flex items-center',\n    'has-[[data-slot=filters-input]:focus-visible]:ring-ring/30',\n    'has-[[data-slot=filters-input]:focus-visible]:border-ring',\n    'has-[[data-slot=filters-input]:focus-visible]:outline-none',\n    'has-[[data-slot=filters-input]:focus-visible]:ring-[3px]',\n    'has-[[data-slot=filters-input]:focus-visible]:z-1',\n    'has-[[data-slot=filters-input]:aria-invalid]:border',\n    'has-[[data-slot=filters-input]:aria-invalid]:border-solid',\n    'has-[[data-slot=filters-input]:aria-invalid]:border-destructive/60',\n    'has-[[data-slot=filters-input]:aria-invalid]:ring-destructive/10',\n    'dark:has-[[data-slot=filters-input]:aria-invalid]:border-destructive',\n    'dark:has-[[data-slot=filters-input]:aria-invalid]:ring-destructive/20',\n  ],\n  {\n    variants: {\n      variant: {\n        solid: 'border-0 bg-secondary',\n        outline: 'bg-background border border-border',\n      },\n      size: {\n        lg: 'h-10 text-sm px-2.5 has-[[data-slot=filters-prefix]]:ps-0 has-[[data-slot=filters-suffix]]:pe-0',\n        md: 'h-9 text-sm px-2 has-[[data-slot=filters-prefix]]:ps-0 has-[[data-slot=filters-suffix]]:pe-0',\n        sm: 'h-8 text-xs px-1.5 has-[[data-slot=filters-prefix]]:ps-0 has-[[data-slot=filters-suffix]]:pe-0',\n      },\n      cursorPointer: {\n        true: 'cursor-pointer',\n        false: '',\n      },\n    },\n    defaultVariants: {\n      variant: 'outline',\n      size: 'md',\n      cursorPointer: true,\n    },\n  },\n);\n\n// Reusable remove button variant component\nconst filterRemoveButtonVariants = cva(\n  ['inline-flex items-center shrink-0 justify-center transition shrink-0 text-muted-foreground hover:text-foreground'],\n  {\n    variants: {\n      variant: {\n        solid: 'bg-secondary',\n        outline: 'border border-border border-s-0 hover:bg-secondary',\n      },\n      size: {\n        lg: 'h-10 w-10 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-9 w-9 [&_svg:not([class*=size-])]:size-3.5',\n        sm: 'h-8 w-8 [&_svg:not([class*=size-])]:size-3',\n      },\n      cursorPointer: {\n        true: 'cursor-pointer',\n        false: '',\n      },\n      radius: {\n        md: 'rounded-e-md',\n        full: 'rounded-e-full',\n      },\n    },\n    defaultVariants: {\n      variant: 'outline',\n      size: 'md',\n      radius: 'md',\n      cursorPointer: true,\n    },\n  },\n);\n\nconst filterAddButtonVariants = cva(\n  [\n    'inline-flex items-center shrink-0 justify-center transition shrink-0 text-foreground shadow-xs shadow-black/5',\n    '[&_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60',\n  ],\n  {\n    variants: {\n      variant: {\n        solid: 'border border-input hover:bg-secondary/60',\n        outline: 'border border-border hover:bg-secondary',\n      },\n      size: {\n        lg: 'h-10 px-4 text-sm gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-9 px-3 gap-1.5 text-sm [&_svg:not([class*=size-])]:size-4',\n        sm: 'h-8 px-2.5 gap-1.25 text-xs [&_svg:not([class*=size-])]:size-3.5',\n      },\n      radius: {\n        md: 'rounded-md',\n        full: 'rounded-full',\n      },\n      cursorPointer: {\n        true: 'cursor-pointer',\n        false: '',\n      },\n    },\n    defaultVariants: {\n      variant: 'outline',\n      size: 'md',\n      cursorPointer: true,\n    },\n  },\n);\n\nconst filterOperatorVariants = cva(\n  [\n    'transition text-muted-foreground hover:text-foreground data-[state=open]:text-foreground shrink-0 flex items-center relative focus-visible:z-1',\n  ],\n  {\n    variants: {\n      variant: {\n        solid: 'bg-secondary',\n        outline:\n          'bg-background border border-border border-e-0 hover:bg-secondary data-[state=open]:bg-secondary [&+[data-slot=filters-remove]]:border-s',\n      },\n      size: {\n        lg: 'h-10 px-4 text-sm gap-1.5',\n        md: 'h-9 px-3 text-sm gap-1.25',\n        sm: 'h-8 px-2.5 text-xs gap-1',\n      },\n      cursorPointer: {\n        true: 'cursor-pointer',\n        false: '',\n      },\n    },\n    defaultVariants: {\n      variant: 'outline',\n      size: 'md',\n      cursorPointer: true,\n    },\n  },\n);\n\nconst filterFieldLabelVariants = cva(\n  [\n    'flex gap-1.5 shrink-0 px-1.5 py-1 items-center text-foreground',\n    '[&_svg:not([class*=size-])]:size-3.5 [&_svg:not([class*=opacity-])]:opacity-60',\n  ],\n  {\n    variants: {\n      variant: {\n        solid: 'bg-secondary',\n        outline: 'border border-border border-e-0',\n      },\n      size: {\n        lg: 'h-10 px-4 text-sm gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-9 px-3 gap-1.5 text-sm [&_svg:not([class*=size-])]:size-4',\n        sm: 'h-8 px-2.5 gap-1.25 text-xs [&_svg:not([class*=size-])]:size-3.5',\n      },\n      radius: {\n        md: 'rounded-s-md',\n        full: 'rounded-s-full',\n      },\n    },\n    defaultVariants: {\n      variant: 'outline',\n      size: 'md',\n    },\n  },\n);\n\nconst filterFieldValueVariants = cva(\n  'text-foreground transition shrink-0 flex items-center gap-1 relative focus-visible:z-1',\n  {\n    variants: {\n      variant: {\n        solid: 'bg-secondary',\n        outline: 'bg-background border border-border hover:bg-secondary has-[[data-slot=switch]]:hover:bg-transparent',\n      },\n      size: {\n        lg: 'h-10 px-4 text-sm gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-9 px-3 gap-1.5 text-sm [&_svg:not([class*=size-])]:size-4',\n        sm: 'h-8 px-2.5 gap-1.25 text-xs [&_svg:not([class*=size-])]:size-3.5',\n      },\n      cursorPointer: {\n        true: 'cursor-pointer has-[[data-slot=switch]]:cursor-default',\n        false: '',\n      },\n    },\n    defaultVariants: {\n      variant: 'outline',\n      size: 'md',\n      cursorPointer: true,\n    },\n  },\n);\n\nconst filterFieldAddonVariants = cva('text-foreground shrink-0 flex items-center justify-center', {\n  variants: {\n    variant: {\n      solid: '',\n      outline: '',\n    },\n    size: {\n      lg: 'h-10 px-4 text-sm',\n      md: 'h-9 px-3 text-sm',\n      sm: 'h-8 px-2.5 text-xs',\n    },\n  },\n  defaultVariants: {\n    variant: 'outline',\n    size: 'md',\n  },\n});\n\nconst filterFieldBetweenVariants = cva('text-muted-foreground shrink-0 flex items-center', {\n  variants: {\n    variant: {\n      solid: 'bg-secondary',\n      outline: 'bg-background border border-border border-x-0',\n    },\n    size: {\n      lg: 'h-10 px-4 text-sm',\n      md: 'h-9 px-3 text-sm',\n      sm: 'h-8 px-2.5 text-xs',\n    },\n  },\n  defaultVariants: {\n    variant: 'outline',\n    size: 'md',\n  },\n});\n\nconst filtersContainerVariants = cva('flex flex-wrap items-center', {\n  variants: {\n    variant: {\n      solid: 'gap-2',\n      outline: '',\n    },\n    size: {\n      sm: 'gap-1.5',\n      md: 'gap-2.5',\n      lg: 'gap-3.5',\n    },\n  },\n  defaultVariants: {\n    variant: 'outline',\n    size: 'md',\n  },\n});\n\nconst filterItemVariants = cva('flex items-center shadow-xs shadow-black/5', {\n  variants: {\n    variant: {\n      solid: 'gap-px',\n      outline: '',\n    },\n  },\n  defaultVariants: {\n    variant: 'outline',\n  },\n});\n\nfunction FilterInput<T = unknown>({\n  field,\n  onChange,\n  onBlur,\n  onKeyDown,\n  className,\n  ...props\n}: React.InputHTMLAttributes<HTMLInputElement> & { className?: string; field?: FilterFieldConfig<T> }) {\n  const context = useFilterContext();\n  const [isValid, setIsValid] = useState(true);\n  const [validationMessage, setValidationMessage] = useState('');\n\n  // Validation function to check if input matches pattern\n  const validateInput = (value: string, pattern?: string): boolean => {\n    if (!pattern || !value) return true;\n    const regex = new RegExp(pattern);\n    return regex.test(value);\n  };\n\n  // Get validation message for field type\n  const getValidationMessage = (fieldType: string, hasCustomPattern: boolean = false): string => {\n    // If it's a text or number field with a custom pattern, use the generic invalid message\n    if ((fieldType === 'text' || fieldType === 'number') && hasCustomPattern) {\n      return context.i18n.validation.invalid;\n    }\n\n    switch (fieldType) {\n      case 'email':\n        return context.i18n.validation.invalidEmail;\n      case 'url':\n        return context.i18n.validation.invalidUrl;\n      case 'tel':\n        return context.i18n.validation.invalidTel;\n      default:\n        return context.i18n.validation.invalid;\n    }\n  };\n\n  // Handle input change - allow typing without validation\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // Always allow typing, just call the original onChange\n    onChange?.(e);\n  };\n\n  // Handle blur event - validate when user leaves input\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    const pattern = field?.pattern || props.pattern;\n\n    // Only validate if there's a value and pattern\n    if (value && pattern) {\n      let valid = true;\n\n      // If there's a custom validation function, use it\n      if (field?.validation) {\n        valid = field.validation(value);\n      } else {\n        // Use pattern validation\n        valid = validateInput(value, pattern);\n      }\n\n      setIsValid(valid);\n      const hasCustomPattern = !!(field?.pattern || props.pattern);\n      setValidationMessage(valid ? '' : getValidationMessage(field?.type || '', hasCustomPattern));\n    } else {\n      // Reset validation state for empty values or no pattern\n      setIsValid(true);\n      setValidationMessage('');\n    }\n\n    // Call the original onBlur if provided\n    onBlur?.(e);\n  };\n\n  // Handle keydown event - hide validation error when user starts typing\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    // Hide validation error when user starts typing (any key except special keys)\n    if (!isValid && !['Tab', 'Escape', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\n      setIsValid(true);\n      setValidationMessage('');\n    }\n\n    // Call the original onKeyDown if provided\n    onKeyDown?.(e);\n  };\n\n  return (\n    <div\n      className={cn('w-36', filterInputVariants({ variant: context.variant, size: context.size }), className)}\n      data-slot=\"filters-input-wrapper\"\n    >\n      {field?.prefix && (\n        <div\n          data-slot=\"filters-prefix\"\n          className={filterFieldAddonVariants({ variant: context.variant, size: context.size })}\n        >\n          {field.prefix}\n        </div>\n      )}\n\n      <div className=\"w-full flex items-stretch\">\n        <input\n          className=\"w-full outline-none\"\n          aria-invalid={!isValid}\n          aria-describedby={!isValid && validationMessage ? `${field?.key || 'input'}-error` : undefined}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          data-slot=\"filters-input\"\n          {...props}\n        />\n        {!isValid && validationMessage && (\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <div className=\"absolute right-2 top-1/2 -translate-y-1/2 flex items-center\">\n                <AlertCircle className=\"size-3.5 text-destructive\" />\n              </div>\n            </TooltipTrigger>\n            <TooltipContent>\n              <p className=\"text-sm\">{validationMessage}</p>\n            </TooltipContent>\n          </Tooltip>\n        )}\n      </div>\n\n      {field?.suffix && (\n        <div\n          data-slot=\"filters-suffix\"\n          className={cn(filterFieldAddonVariants({ variant: context.variant, size: context.size }))}\n        >\n          {field.suffix}\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface FilterRemoveButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof filterRemoveButtonVariants> {\n  icon?: React.ReactNode;\n}\n\nfunction FilterRemoveButton({ className, icon = <X />, ...props }: FilterRemoveButtonProps) {\n  const context = useFilterContext();\n\n  return (\n    <button\n      data-slot=\"filters-remove\"\n      className={cn(\n        filterRemoveButtonVariants({\n          variant: context.variant,\n          size: context.size,\n          cursorPointer: context.cursorPointer,\n          radius: context.radius,\n        }),\n        className,\n      )}\n      {...props}\n    >\n      {icon}\n    </button>\n  );\n}\n\n// Generic types for flexible filter system\nexport interface FilterOption<T = unknown> {\n  value: T;\n  label: string;\n  icon?: React.ReactNode;\n  metadata?: Record<string, unknown>;\n}\n\nexport interface FilterOperator {\n  value: string;\n  label: string;\n  supportsMultiple?: boolean;\n}\n\n// Custom renderer props interface\nexport interface CustomRendererProps<T = unknown> {\n  field: FilterFieldConfig<T>;\n  values: T[];\n  onChange: (values: T[]) => void;\n  operator: string;\n}\n\n// Grouped field configuration interface\nexport interface FilterFieldGroup<T = unknown> {\n  group?: string;\n  fields: FilterFieldConfig<T>[];\n}\n\n// Union type for both flat and grouped field configurations\nexport type FilterFieldsConfig<T = unknown> = FilterFieldConfig<T>[] | FilterFieldGroup<T>[];\n\nexport interface FilterFieldConfig<T = unknown> {\n  key?: string;\n  label?: string;\n  icon?: React.ReactNode;\n  type?:\n    | 'select'\n    | 'multiselect'\n    | 'date'\n    | 'daterange'\n    | 'text'\n    | 'number'\n    | 'numberrange'\n    | 'boolean'\n    | 'email'\n    | 'url'\n    | 'tel'\n    | 'time'\n    | 'datetime'\n    | 'custom'\n    | 'separator';\n  // Group-level configuration\n  group?: string;\n  fields?: FilterFieldConfig<T>[];\n  // Field-specific options\n  options?: FilterOption<T>[];\n  operators?: FilterOperator[];\n  customRenderer?: (props: CustomRendererProps<T>) => React.ReactNode;\n  customValueRenderer?: (values: T[], options: FilterOption<T>[]) => React.ReactNode;\n  placeholder?: string;\n  searchable?: boolean;\n  maxSelections?: number;\n  min?: number;\n  max?: number;\n  step?: number;\n  prefix?: string | React.ReactNode;\n  suffix?: string | React.ReactNode;\n  pattern?: string;\n  validation?: (value: unknown) => boolean;\n  allowCustomValues?: boolean;\n  className?: string;\n  popoverContentClassName?: string;\n  selectedOptionsClassName?: string;\n  // Grouping options (legacy support)\n  groupLabel?: string;\n  // Boolean field options\n  onLabel?: string;\n  offLabel?: string;\n}\n\n// Helper functions to handle both flat and grouped field configurations\nconst isFieldGroup = <T = unknown,>(item: FilterFieldConfig<T> | FilterFieldGroup<T>): item is FilterFieldGroup<T> => {\n  return 'fields' in item && Array.isArray(item.fields);\n};\n\n// Helper function to check if a FilterFieldConfig is a group-level configuration\nconst isGroupLevelField = <T = unknown,>(field: FilterFieldConfig<T>): boolean => {\n  return Boolean(field.group && field.fields);\n};\n\nconst flattenFields = <T = unknown,>(fields: FilterFieldsConfig<T>): FilterFieldConfig<T>[] => {\n  return fields.reduce<FilterFieldConfig<T>[]>((acc, item) => {\n    if (isFieldGroup(item)) {\n      return [...acc, ...item.fields];\n    }\n    // Handle group-level fields (new structure)\n    if (isGroupLevelField(item)) {\n      return [...acc, ...item.fields!];\n    }\n    return [...acc, item];\n  }, []);\n};\n\nconst getFieldsMap = <T = unknown,>(fields: FilterFieldsConfig<T>): Record<string, FilterFieldConfig<T>> => {\n  const flatFields = flattenFields(fields);\n  return flatFields.reduce(\n    (acc, field) => {\n      // Only add fields that have a key (skip group-level configurations)\n      if (field.key) {\n        acc[field.key] = field;\n      }\n      return acc;\n    },\n    {} as Record<string, FilterFieldConfig<T>>,\n  );\n};\n\n// Helper function to create operators from i18n config\nconst createOperatorsFromI18n = (i18n: FilterI18nConfig): Record<string, FilterOperator[]> => ({\n  select: [\n    { value: 'is', label: i18n.operators.is },\n    { value: 'is_not', label: i18n.operators.isNot },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n  multiselect: [\n    { value: 'is_any_of', label: i18n.operators.isAnyOf },\n    { value: 'is_not_any_of', label: i18n.operators.isNotAnyOf },\n    { value: 'includes_all', label: i18n.operators.includesAll },\n    { value: 'excludes_all', label: i18n.operators.excludesAll },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n  date: [\n    { value: 'before', label: i18n.operators.before },\n    { value: 'after', label: i18n.operators.after },\n    { value: 'is', label: i18n.operators.is },\n    { value: 'is_not', label: i18n.operators.isNot },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n  daterange: [\n    { value: 'between', label: i18n.operators.between },\n    { value: 'not_between', label: i18n.operators.notBetween },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n  text: [\n    { value: 'contains', label: i18n.operators.contains },\n    { value: 'not_contains', label: i18n.operators.notContains },\n    { value: 'starts_with', label: i18n.operators.startsWith },\n    { value: 'ends_with', label: i18n.operators.endsWith },\n    { value: 'is', label: i18n.operators.isExactly },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n  number: [\n    { value: 'equals', label: i18n.operators.equals },\n    { value: 'not_equals', label: i18n.operators.notEquals },\n    { value: 'greater_than', label: i18n.operators.greaterThan },\n    { value: 'less_than', label: i18n.operators.lessThan },\n    { value: 'between', label: i18n.operators.between },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n  numberrange: [\n    { value: 'between', label: i18n.operators.between },\n    { value: 'overlaps', label: i18n.operators.overlaps },\n    { value: 'contains', label: i18n.operators.contains },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n  boolean: [\n    { value: 'is', label: i18n.operators.is },\n    { value: 'is_not', label: i18n.operators.isNot },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n  email: [\n    { value: 'contains', label: i18n.operators.contains },\n    { value: 'not_contains', label: i18n.operators.notContains },\n    { value: 'starts_with', label: i18n.operators.startsWith },\n    { value: 'ends_with', label: i18n.operators.endsWith },\n    { value: 'is', label: i18n.operators.isExactly },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n  url: [\n    { value: 'contains', label: i18n.operators.contains },\n    { value: 'not_contains', label: i18n.operators.notContains },\n    { value: 'starts_with', label: i18n.operators.startsWith },\n    { value: 'ends_with', label: i18n.operators.endsWith },\n    { value: 'is', label: i18n.operators.isExactly },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n  tel: [\n    { value: 'contains', label: i18n.operators.contains },\n    { value: 'not_contains', label: i18n.operators.notContains },\n    { value: 'starts_with', label: i18n.operators.startsWith },\n    { value: 'ends_with', label: i18n.operators.endsWith },\n    { value: 'is', label: i18n.operators.isExactly },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n  time: [\n    { value: 'before', label: i18n.operators.before },\n    { value: 'after', label: i18n.operators.after },\n    { value: 'is', label: i18n.operators.is },\n    { value: 'between', label: i18n.operators.between },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n  datetime: [\n    { value: 'before', label: i18n.operators.before },\n    { value: 'after', label: i18n.operators.after },\n    { value: 'is', label: i18n.operators.is },\n    { value: 'between', label: i18n.operators.between },\n    { value: 'empty', label: i18n.operators.empty },\n    { value: 'not_empty', label: i18n.operators.notEmpty },\n  ],\n});\n\n// Default operators for different field types (using default i18n)\nexport const DEFAULT_OPERATORS: Record<string, FilterOperator[]> = createOperatorsFromI18n(DEFAULT_I18N);\n\n// Helper function to get operators for a field\nconst getOperatorsForField = <T = unknown,>(\n  field: FilterFieldConfig<T>,\n  values: T[],\n  i18n: FilterI18nConfig,\n): FilterOperator[] => {\n  if (field.operators) return field.operators;\n\n  const operators = createOperatorsFromI18n(i18n);\n  const defaultOps = operators[field.type || 'select'] || operators.select;\n\n  // Dynamic operator selection based on values\n  if (field.type === 'select' && values.length > 1) {\n    return operators.multiselect;\n  }\n\n  return defaultOps;\n};\n\ninterface FilterOperatorDropdownProps<T = unknown> {\n  field: FilterFieldConfig<T>;\n  operator: string;\n  values: T[];\n  onChange: (operator: string) => void;\n}\n\nfunction FilterOperatorDropdown<T = unknown>({ field, operator, values, onChange }: FilterOperatorDropdownProps<T>) {\n  const context = useFilterContext();\n  const operators = getOperatorsForField(field, values, context.i18n);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger className={filterOperatorVariants({ variant: context.variant, size: context.size })}>\n        {operators.find((op) => op.value === operator)?.label || operator}\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"start\" className=\"w-fit min-w-fit\">\n        {operators.map((op) => (\n          <DropdownMenuItem\n            key={op.value}\n            onClick={() => onChange(op.value)}\n            className=\"flex items-center justify-between\"\n          >\n            <span>{op.label}</span>\n            <Check className={`text-primary ms-auto ${op.value === operator ? 'opacity-100' : 'opacity-0'}`} />\n          </DropdownMenuItem>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\ninterface FilterValueSelectorProps<T = unknown> {\n  field: FilterFieldConfig<T>;\n  values: T[];\n  onChange: (values: T[]) => void;\n  operator: string;\n}\n\ninterface SelectOptionsPopoverProps<T = unknown> {\n  field: FilterFieldConfig<T>;\n  values: T[];\n  onChange: (values: T[]) => void;\n  onClose?: () => void;\n  showBackButton?: boolean;\n  onBack?: () => void;\n  inline?: boolean;\n}\n\nfunction SelectOptionsPopover<T = unknown>({\n  field,\n  values,\n  onChange,\n  onClose,\n  inline = false,\n}: SelectOptionsPopoverProps<T>) {\n  const [open, setOpen] = useState(false);\n  const [searchInput, setSearchInput] = useState('');\n  const context = useFilterContext();\n\n  const isMultiSelect = field.type === 'multiselect' || values.length > 1;\n  const selectedOptions = field.options?.filter((opt) => values.includes(opt.value)) || [];\n  const unselectedOptions = field.options?.filter((opt) => !values.includes(opt.value)) || [];\n\n  const handleClose = () => {\n    setOpen(false);\n    onClose?.();\n  };\n\n  // If inline mode, render the content directly without popover\n  if (inline) {\n    return (\n      <div className=\"w-full\">\n        <Command>\n          {field.searchable !== false && (\n            <CommandInput\n              placeholder={context.i18n.placeholders.searchField(field.label || '')}\n              className=\"h-8.5 text-sm\"\n              value={searchInput}\n              onValueChange={setSearchInput}\n            />\n          )}\n          <CommandList>\n            <CommandEmpty>{context.i18n.noResultsFound}</CommandEmpty>\n\n            {/* Selected items */}\n            {selectedOptions.length > 0 && (\n              <CommandGroup heading={field.label || 'Selected'}>\n                {selectedOptions.map((option) => (\n                  <CommandItem\n                    key={String(option.value)}\n                    className=\"group flex gap-2 items-center\"\n                    onSelect={() => {\n                      if (isMultiSelect) {\n                        onChange(values.filter((v) => v !== option.value) as T[]);\n                      } else {\n                        onChange([] as T[]);\n                      }\n                    }}\n                  >\n                    {option.icon && option.icon}\n                    <span className=\"text-accent-foreground truncate\">{option.label}</span>\n                    <Check className=\"text-primary ms-auto\" />\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            )}\n\n            {/* Available items */}\n            {unselectedOptions.length > 0 && (\n              <>\n                {selectedOptions.length > 0 && <CommandSeparator />}\n                <CommandGroup>\n                  {unselectedOptions.map((option) => (\n                    <CommandItem\n                      key={String(option.value)}\n                      className=\"group flex gap-2 items-center\"\n                      value={option.label}\n                      onSelect={() => {\n                        if (isMultiSelect) {\n                          const newValues = [...values, option.value] as T[];\n                          if (field.maxSelections && newValues.length > field.maxSelections) {\n                            return; // Don't exceed max selections\n                          }\n                          onChange(newValues);\n                          // For multiselect, don't close the popover to allow multiple selections\n                        } else {\n                          onChange([option.value] as T[]);\n                          onClose?.();\n                        }\n                      }}\n                    >\n                      {option.icon && option.icon}\n                      <span className=\"text-accent-foreground truncate\">{option.label}</span>\n                      <Check className=\"text-primary ms-auto opacity-0\" />\n                    </CommandItem>\n                  ))}\n                </CommandGroup>\n              </>\n            )}\n          </CommandList>\n        </Command>\n      </div>\n    );\n  }\n\n  return (\n    <Popover\n      open={open}\n      onOpenChange={(open) => {\n        setOpen(open);\n        if (!open) {\n          setTimeout(() => setSearchInput(''), 200);\n        }\n      }}\n    >\n      <PopoverTrigger\n        className={filterFieldValueVariants({\n          variant: context.variant,\n          size: context.size,\n          cursorPointer: context.cursorPointer,\n        })}\n      >\n        <div className=\"flex gap-1.5 items-center\">\n          {field.customValueRenderer ? (\n            field.customValueRenderer(values, field.options || [])\n          ) : (\n            <>\n              {selectedOptions.length > 0 && (\n                <div className={cn('-space-x-1.5 flex items-center', field.selectedOptionsClassName)}>\n                  {selectedOptions.slice(0, 3).map((option) => (\n                    <div key={String(option.value)}>{option.icon}</div>\n                  ))}\n                </div>\n              )}\n              {selectedOptions.length === 1\n                ? selectedOptions[0].label\n                : selectedOptions.length > 1\n                  ? `${selectedOptions.length} ${context.i18n.selectedCount}`\n                  : context.i18n.select}\n            </>\n          )}\n        </div>\n      </PopoverTrigger>\n      <PopoverContent align=\"start\" className={cn('w-[200px] p-0', field.className)}>\n        <Command>\n          {field.searchable !== false && (\n            <CommandInput\n              placeholder={context.i18n.placeholders.searchField(field.label || '')}\n              className=\"h-9 text-sm\"\n              value={searchInput}\n              onValueChange={setSearchInput}\n            />\n          )}\n          <CommandList>\n            <CommandEmpty>{context.i18n.noResultsFound}</CommandEmpty>\n\n            {/* Selected items */}\n            {selectedOptions.length > 0 && (\n              <CommandGroup>\n                {selectedOptions.map((option) => (\n                  <CommandItem\n                    key={String(option.value)}\n                    className=\"group flex gap-2 items-center\"\n                    onSelect={() => {\n                      if (isMultiSelect) {\n                        onChange(values.filter((v) => v !== option.value) as T[]);\n                      } else {\n                        onChange([] as T[]);\n                      }\n                      if (!isMultiSelect) {\n                        setOpen(false);\n                        handleClose();\n                      }\n                    }}\n                  >\n                    {option.icon && option.icon}\n                    <span className=\"text-accent-foreground truncate\">{option.label}</span>\n                    <Check className=\"text-primary ms-auto\" />\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            )}\n\n            {/* Available items */}\n            {unselectedOptions.length > 0 && (\n              <>\n                {selectedOptions.length > 0 && <CommandSeparator />}\n                <CommandGroup>\n                  {unselectedOptions.map((option) => (\n                    <CommandItem\n                      key={String(option.value)}\n                      className=\"group flex gap-2 items-center\"\n                      value={option.label}\n                      onSelect={() => {\n                        if (isMultiSelect) {\n                          const newValues = [...values, option.value] as T[];\n                          if (field.maxSelections && newValues.length > field.maxSelections) {\n                            return; // Don't exceed max selections\n                          }\n                          onChange(newValues);\n                        } else {\n                          onChange([option.value] as T[]);\n                          setOpen(false);\n                          handleClose();\n                        }\n                      }}\n                    >\n                      {option.icon && option.icon}\n                      <span className=\"text-accent-foreground truncate\">{option.label}</span>\n                      <Check className=\"text-primary ms-auto opacity-0\" />\n                    </CommandItem>\n                  ))}\n                </CommandGroup>\n              </>\n            )}\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nfunction FilterValueSelector<T = unknown>({ field, values, onChange, operator }: FilterValueSelectorProps<T>) {\n  const [open, setOpen] = useState(false);\n  const [searchInput, setSearchInput] = useState('');\n  const context = useFilterContext();\n\n  // Hide value input for empty/not empty operators\n  if (operator === 'empty' || operator === 'not_empty') {\n    return null;\n  }\n\n  // Use custom renderer if provided\n  if (field.customRenderer) {\n    return (\n      <div\n        className={filterFieldValueVariants({\n          variant: context.variant,\n          size: context.size,\n          cursorPointer: context.cursorPointer,\n        })}\n      >\n        {field.customRenderer({ field, values, onChange, operator })}\n      </div>\n    );\n  }\n\n  if (field.type === 'boolean') {\n    const isChecked = values[0] === true;\n\n    // Use custom labels if provided, otherwise fall back to i18n defaults\n    const onLabel = field.onLabel || context.i18n.true;\n    const offLabel = field.offLabel || context.i18n.false;\n\n    return (\n      <div\n        className={filterFieldValueVariants({\n          variant: context.variant,\n          size: context.size,\n          cursorPointer: context.cursorPointer,\n        })}\n      >\n        <div className=\"flex items-center gap-2\">\n          <Switch checked={isChecked} onCheckedChange={(checked) => onChange([checked as T])} size=\"sm\" />\n          {field.onLabel && field.offLabel && (\n            <span className=\"text-xs text-muted-foreground\">{isChecked ? onLabel : offLabel}</span>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  if (field.type === 'time') {\n    if (operator === 'between') {\n      const startTime = (values[0] as string) || '';\n      const endTime = (values[1] as string) || '';\n\n      return (\n        <div className=\"flex items-center\" data-slot=\"filters-item\">\n          <FilterInput\n            type=\"time\"\n            value={startTime}\n            onChange={(e) => onChange([e.target.value, endTime] as T[])}\n            className={field.className}\n            field={field}\n          />\n          <div\n            data-slot=\"filters-between\"\n            className={filterFieldBetweenVariants({ variant: context.variant, size: context.size })}\n          >\n            {context.i18n.to}\n          </div>\n          <FilterInput\n            type=\"time\"\n            value={endTime}\n            onChange={(e) => onChange([startTime, e.target.value] as T[])}\n            className={field.className}\n            field={field}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FilterInput\n        type=\"time\"\n        value={(values[0] as string) || ''}\n        onChange={(e) => onChange([e.target.value] as T[])}\n        field={field}\n        className={field.className}\n      />\n    );\n  }\n\n  if (field.type === 'datetime') {\n    if (operator === 'between') {\n      const startDateTime = (values[0] as string) || '';\n      const endDateTime = (values[1] as string) || '';\n\n      return (\n        <div className=\"flex items-center\" data-slot=\"filters-item\">\n          <FilterInput\n            type=\"datetime-local\"\n            value={startDateTime}\n            onChange={(e) => onChange([e.target.value, endDateTime] as T[])}\n            className={cn('w-36', field.className)}\n            field={field}\n          />\n          <div\n            data-slot=\"filters-between\"\n            className={filterFieldBetweenVariants({ variant: context.variant, size: context.size })}\n          >\n            {context.i18n.to}\n          </div>\n          <FilterInput\n            type=\"datetime-local\"\n            value={endDateTime}\n            onChange={(e) => onChange([startDateTime, e.target.value] as T[])}\n            className={cn('w-36', field.className)}\n            field={field}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FilterInput\n        type=\"datetime-local\"\n        value={(values[0] as string) || ''}\n        onChange={(e) => onChange([e.target.value] as T[])}\n        className={cn('w-36', field.className)}\n        field={field}\n      />\n    );\n  }\n\n  if (['email', 'url', 'tel'].includes(field.type || '')) {\n    const getInputType = () => {\n      switch (field.type) {\n        case 'email':\n          return 'email';\n        case 'url':\n          return 'url';\n        case 'tel':\n          return 'tel';\n        default:\n          return 'text';\n      }\n    };\n\n    const getPattern = () => {\n      switch (field.type) {\n        case 'email':\n          return '^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$';\n        case 'url':\n          return '^https?:\\\\/\\\\/(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{1,256}\\\\.[a-zA-Z0-9()]{1,6}\\\\b([-a-zA-Z0-9()@:%_\\\\+.~#?&//=]*)$';\n        case 'tel':\n          return '^[\\\\+]?[1-9][\\\\d]{0,15}$';\n        default:\n          return undefined;\n      }\n    };\n\n    return (\n      <FilterInput\n        type={getInputType()}\n        value={(values[0] as string) || ''}\n        onChange={(e) => onChange([e.target.value] as T[])}\n        placeholder={field.placeholder || context.i18n.placeholders.enterField(field.type || 'text')}\n        pattern={field.pattern || getPattern()}\n        className={field.className}\n        field={field}\n      />\n    );\n  }\n\n  if (field.type === 'daterange') {\n    const startDate = (values[0] as string) || '';\n    const endDate = (values[1] as string) || '';\n\n    return (\n      <div\n        className={filterFieldValueVariants({\n          variant: context.variant,\n          size: context.size,\n          cursorPointer: context.cursorPointer,\n        })}\n      >\n        <FilterInput\n          type=\"date\"\n          value={startDate}\n          onChange={(e) => onChange([e.target.value, endDate] as T[])}\n          className={cn('w-24', field.className)}\n          field={field}\n        />\n        <div\n          data-slot=\"filters-between\"\n          className={filterFieldBetweenVariants({ variant: context.variant, size: context.size })}\n        >\n          {context.i18n.to}\n        </div>\n        <FilterInput\n          type=\"date\"\n          value={endDate}\n          onChange={(e) => onChange([startDate, e.target.value] as T[])}\n          className={cn('w-24', field.className)}\n          field={field}\n        />\n      </div>\n    );\n  }\n\n  // Handle different field types\n  if (field.type === 'text' || field.type === 'number') {\n    if (field.type === 'number' && operator === 'between') {\n      const minVal = (values[0] as string) || '';\n      const maxVal = (values[1] as string) || '';\n\n      return (\n        <div className=\"flex items-center\" data-slot=\"filters-item\">\n          <FilterInput\n            type=\"number\"\n            value={minVal}\n            onChange={(e) => onChange([e.target.value, maxVal] as T[])}\n            placeholder={context.i18n.min}\n            className={cn('w-16', field.className)}\n            min={field.min}\n            max={field.max}\n            step={field.step}\n            pattern={field.pattern}\n            field={field}\n          />\n          <div\n            data-slot=\"filters-between\"\n            className={filterFieldBetweenVariants({ variant: context.variant, size: context.size })}\n          >\n            {context.i18n.to}\n          </div>\n          <FilterInput\n            type=\"number\"\n            value={maxVal}\n            onChange={(e) => onChange([minVal, e.target.value] as T[])}\n            placeholder={context.i18n.max}\n            className={cn('w-16', field.className)}\n            min={field.min}\n            max={field.max}\n            step={field.step}\n            pattern={field.pattern}\n            field={field}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center\" data-slot=\"filters-item\">\n        <FilterInput\n          type={field.type === 'number' ? 'number' : 'text'}\n          value={(values[0] as string) || ''}\n          onChange={(e) => onChange([e.target.value] as T[])}\n          placeholder={field.placeholder}\n          min={field.type === 'number' ? field.min : undefined}\n          max={field.type === 'number' ? field.max : undefined}\n          step={field.type === 'number' ? field.step : undefined}\n          pattern={field.pattern}\n          field={field}\n          className={cn('w-36', field.className)}\n        />\n      </div>\n    );\n  }\n\n  if (field.type === 'date') {\n    return (\n      <FilterInput\n        type=\"date\"\n        value={(values[0] as string) || ''}\n        onChange={(e) => onChange([e.target.value] as T[])}\n        field={field}\n        className={cn('w-16', field.className)}\n      />\n    );\n  }\n\n  // For select and multiselect types, use the SelectOptionsPopover component\n  if (field.type === 'select' || field.type === 'multiselect') {\n    return <SelectOptionsPopover field={field} values={values} onChange={onChange} />;\n  }\n\n  const isMultiSelect = values.length > 1;\n  const selectedOptions = field.options?.filter((opt) => values.includes(opt.value)) || [];\n  const unselectedOptions = field.options?.filter((opt) => !values.includes(opt.value)) || [];\n\n  return (\n    <Popover\n      open={open}\n      onOpenChange={(open) => {\n        setOpen(open);\n        if (!open) {\n          setTimeout(() => setSearchInput(''), 200);\n        }\n      }}\n    >\n      <PopoverTrigger\n        className={filterFieldValueVariants({\n          variant: context.variant,\n          size: context.size,\n          cursorPointer: context.cursorPointer,\n        })}\n      >\n        <div className=\"flex gap-1.5 items-center\">\n          {field.customValueRenderer ? (\n            field.customValueRenderer(values, field.options || [])\n          ) : (\n            <>\n              {selectedOptions.length > 0 && (\n                <div className=\"flex items-center -space-x-1.5\">\n                  {selectedOptions.slice(0, 3).map((option) => (\n                    <div key={String(option.value)}>{option.icon}</div>\n                  ))}\n                </div>\n              )}\n              {selectedOptions.length === 1\n                ? selectedOptions[0].label\n                : selectedOptions.length > 1\n                  ? `${selectedOptions.length} ${context.i18n.selectedCount}`\n                  : context.i18n.select}\n            </>\n          )}\n        </div>\n      </PopoverTrigger>\n      <PopoverContent className={cn('w-36 p-0', field.popoverContentClassName)}>\n        <Command>\n          {field.searchable !== false && (\n            <CommandInput\n              placeholder={context.i18n.placeholders.searchField(field.label || '')}\n              className=\"h-9 text-sm\"\n              value={searchInput}\n              onValueChange={setSearchInput}\n            />\n          )}\n          <CommandList>\n            <CommandEmpty>{context.i18n.noResultsFound}</CommandEmpty>\n\n            {/* Selected items */}\n            {selectedOptions.length > 0 && (\n              <CommandGroup>\n                {selectedOptions.map((option) => (\n                  <CommandItem\n                    key={String(option.value)}\n                    className=\"group flex gap-2 items-center\"\n                    onSelect={() => {\n                      if (isMultiSelect) {\n                        onChange(values.filter((v) => v !== option.value) as T[]);\n                      } else {\n                        onChange([] as T[]);\n                      }\n                      if (!isMultiSelect) setOpen(false);\n                    }}\n                  >\n                    {option.icon && option.icon}\n                    <span className=\"text-accent-foreground truncate\">{option.label}</span>\n                    <Check className=\"text-primary ms-auto\" />\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            )}\n\n            {/* Available items */}\n            {unselectedOptions.length > 0 && (\n              <>\n                {selectedOptions.length > 0 && <CommandSeparator />}\n                <CommandGroup>\n                  {unselectedOptions.map((option) => (\n                    <CommandItem\n                      key={String(option.value)}\n                      className=\"group flex gap-2 items-center\"\n                      value={option.label}\n                      onSelect={() => {\n                        if (isMultiSelect) {\n                          const newValues = [...values, option.value] as T[];\n                          if (field.maxSelections && newValues.length > field.maxSelections) {\n                            return; // Don't exceed max selections\n                          }\n                          onChange(newValues);\n                        } else {\n                          onChange([option.value] as T[]);\n                          setOpen(false);\n                        }\n                      }}\n                    >\n                      {option.icon && option.icon}\n                      <span className=\"text-accent-foreground truncate\">{option.label}</span>\n                      <Check className=\"text-primary ms-auto opacity-0\" />\n                    </CommandItem>\n                  ))}\n                </CommandGroup>\n              </>\n            )}\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nexport interface Filter<T = unknown> {\n  id: string;\n  field: string;\n  operator: string;\n  values: T[];\n}\n\nexport interface FilterGroup<T = unknown> {\n  id: string;\n  label?: string;\n  filters: Filter<T>[];\n  fields: FilterFieldConfig<T>[];\n}\n\n// FiltersContent component for the filter panel content\ninterface FiltersContentProps<T = unknown> {\n  filters: Filter<T>[];\n  fields: FilterFieldsConfig<T>;\n  onChange: (filters: Filter<T>[]) => void;\n}\n\nexport const FiltersContent = <T = unknown,>({ filters, fields, onChange }: FiltersContentProps<T>) => {\n  const context = useFilterContext();\n  const fieldsMap = useMemo(() => getFieldsMap(fields), [fields]);\n\n  const updateFilter = useCallback(\n    (filterId: string, updates: Partial<Filter<T>>) => {\n      onChange(\n        filters.map((filter) => {\n          if (filter.id === filterId) {\n            const updatedFilter = { ...filter, ...updates };\n            // Clear values for empty/not empty operators\n            if (updates.operator === 'empty' || updates.operator === 'not_empty') {\n              updatedFilter.values = [] as T[];\n            }\n            return updatedFilter;\n          }\n          return filter;\n        }),\n      );\n    },\n    [filters, onChange],\n  );\n\n  const removeFilter = useCallback(\n    (filterId: string) => {\n      onChange(filters.filter((filter) => filter.id !== filterId));\n    },\n    [filters, onChange],\n  );\n\n  return (\n    <div className={cn(filtersContainerVariants({ variant: context.variant, size: context.size }), context.className)}>\n      {filters.map((filter) => {\n        const field = fieldsMap[filter.field];\n        if (!field) return null;\n\n        return (\n          <div key={filter.id} className={filterItemVariants({ variant: context.variant })} data-slot=\"filter-item\">\n            {/* Field Label */}\n            <div\n              className={filterFieldLabelVariants({\n                variant: context.variant,\n                size: context.size,\n                radius: context.radius,\n              })}\n            >\n              {field.icon}\n              {field.label}\n            </div>\n\n            {/* Operator Dropdown */}\n            <FilterOperatorDropdown<T>\n              field={field}\n              operator={filter.operator}\n              values={filter.values}\n              onChange={(operator) => updateFilter(filter.id, { operator })}\n            />\n\n            {/* Value Selector */}\n            <FilterValueSelector<T>\n              field={field}\n              values={filter.values}\n              onChange={(values) => updateFilter(filter.id, { values })}\n              operator={filter.operator}\n            />\n\n            {/* Remove Button */}\n            <FilterRemoveButton onClick={() => removeFilter(filter.id)} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\ninterface FiltersProps<T = unknown> {\n  filters: Filter<T>[];\n  fields: FilterFieldsConfig<T>;\n  onChange: (filters: Filter<T>[]) => void;\n  className?: string;\n  showAddButton?: boolean;\n  addButtonText?: string;\n  addButtonIcon?: React.ReactNode;\n  addButtonClassName?: string;\n  addButton?: React.ReactNode;\n  variant?: 'solid' | 'outline';\n  size?: 'sm' | 'md' | 'lg';\n  radius?: 'md' | 'full';\n  i18n?: Partial<FilterI18nConfig>;\n  showSearchInput?: boolean;\n  cursorPointer?: boolean;\n  trigger?: React.ReactNode;\n  allowMultiple?: boolean;\n  popoverContentClassName?: string;\n}\n\nexport function Filters<T = unknown>({\n  filters,\n  fields,\n  onChange,\n  className,\n  showAddButton = true,\n  addButtonText,\n  addButtonIcon,\n  addButtonClassName,\n  addButton,\n  variant = 'outline',\n  size = 'md',\n  radius = 'md',\n  i18n,\n  showSearchInput = true,\n  cursorPointer = true,\n  trigger,\n  allowMultiple = true,\n  popoverContentClassName,\n}: FiltersProps<T>) {\n  const [addFilterOpen, setAddFilterOpen] = useState(false);\n  const [selectedFieldForOptions, setSelectedFieldForOptions] = useState<FilterFieldConfig<T> | null>(null);\n  const [tempSelectedValues, setTempSelectedValues] = useState<unknown[]>([]);\n\n  // Merge provided i18n with defaults\n  const mergedI18n: FilterI18nConfig = {\n    ...DEFAULT_I18N,\n    ...i18n,\n    operators: {\n      ...DEFAULT_I18N.operators,\n      ...i18n?.operators,\n    },\n    placeholders: {\n      ...DEFAULT_I18N.placeholders,\n      ...i18n?.placeholders,\n    },\n    validation: {\n      ...DEFAULT_I18N.validation,\n      ...i18n?.validation,\n    },\n  };\n\n  const fieldsMap = useMemo(() => getFieldsMap(fields), [fields]);\n\n  const updateFilter = useCallback(\n    (filterId: string, updates: Partial<Filter<T>>) => {\n      onChange(\n        filters.map((filter) => {\n          if (filter.id === filterId) {\n            const updatedFilter = { ...filter, ...updates };\n            // Clear values for empty/not empty operators\n            if (updates.operator === 'empty' || updates.operator === 'not_empty') {\n              updatedFilter.values = [] as T[];\n            }\n            return updatedFilter;\n          }\n          return filter;\n        }),\n      );\n    },\n    [filters, onChange],\n  );\n\n  const removeFilter = useCallback(\n    (filterId: string) => {\n      onChange(filters.filter((filter) => filter.id !== filterId));\n    },\n    [filters, onChange],\n  );\n\n  const addFilter = useCallback(\n    (fieldKey: string) => {\n      const field = fieldsMap[fieldKey];\n      if (field && field.key) {\n        // For select and multiselect types, show options directly\n        if (field.type === 'select' || field.type === 'multiselect') {\n          setSelectedFieldForOptions(field);\n          // For multiselect, check if there's already a filter and use its values\n          const existingFilter = filters.find((f) => f.field === fieldKey);\n          const initialValues = field.type === 'multiselect' && existingFilter ? existingFilter.values : [];\n          setTempSelectedValues(initialValues);\n          return;\n        }\n\n        // For other types, add filter directly\n        const defaultOperator =\n          field.type === 'daterange'\n            ? 'between'\n            : field.type === 'numberrange'\n              ? 'between'\n              : field.type === 'boolean'\n                ? 'is'\n                : 'is';\n        let defaultValues: unknown[] = [];\n\n        if (['text', 'number', 'date', 'email', 'url', 'tel', 'time', 'datetime'].includes(field.type || '')) {\n          defaultValues = [''] as unknown[];\n        } else if (field.type === 'daterange') {\n          defaultValues = ['', ''] as unknown[];\n        } else if (field.type === 'numberrange') {\n          defaultValues = [field.min || 0, field.max || 100] as unknown[];\n        } else if (field.type === 'boolean') {\n          defaultValues = [false] as unknown[];\n        } else if (field.type === 'time') {\n          defaultValues = [''] as unknown[];\n        } else if (field.type === 'datetime') {\n          defaultValues = [''] as unknown[];\n        }\n\n        const newFilter = createFilter<T>(fieldKey, defaultOperator, defaultValues as T[]);\n        const newFilters = [...filters, newFilter];\n        onChange(newFilters);\n        setAddFilterOpen(false);\n      }\n    },\n    [fieldsMap, filters, onChange],\n  );\n\n  const addFilterWithOption = useCallback(\n    (field: FilterFieldConfig<T>, values: unknown[], closePopover: boolean = true) => {\n      if (!field.key) return;\n\n      const defaultOperator = field.type === 'multiselect' ? 'is_any_of' : 'is';\n\n      // If allowMultiple is true, always create a new filter\n      if (allowMultiple) {\n        const newFilter = createFilter<T>(field.key, defaultOperator, values as T[]);\n        const newFilters = [...filters, newFilter];\n        onChange(newFilters);\n      } else {\n        // Check if there's already a filter for this field\n        const existingFilterIndex = filters.findIndex((f) => f.field === field.key);\n\n        if (existingFilterIndex >= 0 && field.type === 'multiselect') {\n          // Update existing multiselect filter\n          const updatedFilters = [...filters];\n          updatedFilters[existingFilterIndex] = {\n            ...updatedFilters[existingFilterIndex],\n            values: values as T[],\n          };\n          onChange(updatedFilters);\n        } else {\n          // Create new filter\n          const newFilter = createFilter<T>(field.key, defaultOperator, values as T[]);\n          const newFilters = [...filters, newFilter];\n          onChange(newFilters);\n        }\n      }\n\n      if (closePopover) {\n        setAddFilterOpen(false);\n        setSelectedFieldForOptions(null);\n        setTempSelectedValues([]);\n      } else {\n        // For multiselect, keep popover open but update temp values\n        setTempSelectedValues(values as unknown[]);\n      }\n    },\n    [filters, onChange, allowMultiple],\n  );\n\n  const selectableFields = useMemo(() => {\n    const flatFields = flattenFields(fields);\n    return flatFields.filter((field) => {\n      // Only include actual filterable fields (must have key and type)\n      if (!field.key || field.type === 'separator') {\n        return false;\n      }\n      // If allowMultiple is true, don't filter out fields that already have filters\n      if (allowMultiple) {\n        return true;\n      }\n      // Filter out fields that already have filters (default behavior)\n      return !filters.some((filter) => filter.field === field.key);\n    });\n  }, [fields, filters, allowMultiple]);\n\n  return (\n    <FilterContext.Provider\n      value={{\n        variant,\n        size,\n        radius,\n        i18n: mergedI18n,\n        cursorPointer,\n        className,\n        showAddButton,\n        addButtonText,\n        addButtonIcon,\n        addButtonClassName,\n        addButton,\n        showSearchInput,\n        trigger,\n        allowMultiple,\n      }}\n    >\n      <div className={cn(filtersContainerVariants({ variant, size }), className)}>\n        {showAddButton && selectableFields.length > 0 && (\n          <Popover\n            open={addFilterOpen}\n            onOpenChange={(open) => {\n              setAddFilterOpen(open);\n              if (!open) {\n                setSelectedFieldForOptions(null);\n                setTempSelectedValues([]);\n              }\n            }}\n          >\n            <PopoverTrigger asChild>\n              {addButton ? (\n                addButton\n              ) : (\n                <button\n                  className={cn(\n                    filterAddButtonVariants({\n                      variant: variant,\n                      size: size,\n                      cursorPointer: cursorPointer,\n                      radius: radius,\n                    }),\n                    addButtonClassName,\n                  )}\n                  title={mergedI18n.addFilterTitle}\n                >\n                  {addButtonIcon || <Plus />}\n                  {addButtonText || mergedI18n.addFilter}\n                </button>\n              )}\n            </PopoverTrigger>\n            <PopoverContent className={cn('w-[200px] p-0', popoverContentClassName)} align=\"start\">\n              <Command>\n                {selectedFieldForOptions ? (\n                  // Show original select/multiselect rendering without back button\n                  <SelectOptionsPopover<T>\n                    field={selectedFieldForOptions}\n                    values={tempSelectedValues as T[]}\n                    onChange={(values) => {\n                      // For multiselect, create filter immediately but keep popover open\n                      // For single select, create filter and close popover\n                      const shouldClosePopover = selectedFieldForOptions.type === 'select';\n                      addFilterWithOption(selectedFieldForOptions, values as unknown[], shouldClosePopover);\n                    }}\n                    onClose={() => setAddFilterOpen(false)}\n                    inline={true}\n                  />\n                ) : (\n                  // Show field selection\n                  <>\n                    {showSearchInput && <CommandInput placeholder={mergedI18n.searchFields} className=\"h-9\" />}\n                    <CommandList>\n                      <CommandEmpty>{mergedI18n.noFieldsFound}</CommandEmpty>\n                      {fields.map((item, index) => {\n                        // Handle grouped fields (FilterFieldGroup structure)\n                        if (isFieldGroup(item)) {\n                          const groupFields = item.fields.filter((field) => {\n                            // Include separators and labels for display\n                            if (field.type === 'separator') {\n                              return true;\n                            }\n                            // If allowMultiple is true, don't filter out fields that already have filters\n                            if (allowMultiple) {\n                              return true;\n                            }\n                            // Filter out fields that already have filters (default behavior)\n                            return !filters.some((filter) => filter.field === field.key);\n                          });\n\n                          if (groupFields.length === 0) return null;\n\n                          return (\n                            <CommandGroup key={`group-${index}`} heading={item.group || 'Fields'}>\n                              {groupFields.map((field, fieldIndex) => {\n                                // Handle separator\n                                if (field.type === 'separator') {\n                                  return <CommandSeparator key={`separator-${fieldIndex}`} />;\n                                }\n\n                                // Regular field\n                                return (\n                                  <CommandItem key={field.key} onSelect={() => field.key && addFilter(field.key)}>\n                                    {field.icon}\n                                    <span>{field.label}</span>\n                                  </CommandItem>\n                                );\n                              })}\n                            </CommandGroup>\n                          );\n                        }\n\n                        // Handle group-level fields (new FilterFieldConfig structure with group property)\n                        if (isGroupLevelField(item)) {\n                          const groupFields = item.fields!.filter((field) => {\n                            // Include separators and labels for display\n                            if (field.type === 'separator') {\n                              return true;\n                            }\n                            // If allowMultiple is true, don't filter out fields that already have filters\n                            if (allowMultiple) {\n                              return true;\n                            }\n                            // Filter out fields that already have filters (default behavior)\n                            return !filters.some((filter) => filter.field === field.key);\n                          });\n\n                          if (groupFields.length === 0) return null;\n\n                          return (\n                            <CommandGroup key={`group-${index}`} heading={item.group || 'Fields'}>\n                              {groupFields.map((field, fieldIndex) => {\n                                // Handle separator\n                                if (field.type === 'separator') {\n                                  return <CommandSeparator key={`separator-${fieldIndex}`} />;\n                                }\n\n                                // Regular field\n                                return (\n                                  <CommandItem key={field.key} onSelect={() => field.key && addFilter(field.key)}>\n                                    {field.icon}\n                                    <span>{field.label}</span>\n                                  </CommandItem>\n                                );\n                              })}\n                            </CommandGroup>\n                          );\n                        }\n\n                        // Handle flat field configuration (backward compatibility)\n                        const field = item as FilterFieldConfig<T>;\n\n                        // Handle separator\n                        if (field.type === 'separator') {\n                          return <CommandSeparator key={`separator-${index}`} />;\n                        }\n\n                        // Regular field\n                        return (\n                          <CommandItem key={field.key} onSelect={() => field.key && addFilter(field.key)}>\n                            {field.icon}\n                            <span>{field.label}</span>\n                          </CommandItem>\n                        );\n                      })}\n                    </CommandList>\n                  </>\n                )}\n              </Command>\n            </PopoverContent>\n          </Popover>\n        )}\n\n        {filters.map((filter) => {\n          const field = fieldsMap[filter.field];\n          if (!field) return null;\n\n          return (\n            <div key={filter.id} className={filterItemVariants({ variant })} data-slot=\"filter-item\">\n              {/* Field Label */}\n              <div className={filterFieldLabelVariants({ variant: variant, size: size, radius: radius })}>\n                {field.icon}\n                {field.label}\n              </div>\n\n              {/* Operator Dropdown */}\n              <FilterOperatorDropdown<T>\n                field={field}\n                operator={filter.operator}\n                values={filter.values}\n                onChange={(operator) => updateFilter(filter.id, { operator })}\n              />\n\n              {/* Value Selector */}\n              <FilterValueSelector<T>\n                field={field}\n                values={filter.values}\n                onChange={(values) => updateFilter(filter.id, { values })}\n                operator={filter.operator}\n              />\n\n              {/* Remove Button */}\n              <FilterRemoveButton onClick={() => removeFilter(filter.id)} />\n            </div>\n          );\n        })}\n      </div>\n    </FilterContext.Provider>\n  );\n}\n\nexport const createFilter = <T = unknown,>(field: string, operator?: string, values: T[] = []): Filter<T> => ({\n  id: `${Date.now()}-${Math.random().toString(36).substring(2, 11)}`,\n  field,\n  operator: operator || 'is',\n  values,\n});\n\nexport const createFilterGroup = <T = unknown,>(\n  id: string,\n  label: string,\n  fields: FilterFieldConfig<T>[],\n  initialFilters: Filter<T>[] = [],\n): FilterGroup<T> => ({\n  id,\n  label,\n  filters: initialFilters,\n  fields,\n});\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#FF7B72\"> type</span><span style=\"color:#E6EDF3\"> React </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { createContext, useCallback, useContext, useMemo, useState } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  Command,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  CommandEmpty,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  CommandGroup,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  CommandInput,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  CommandItem,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  CommandList,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  CommandSeparator,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">} </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/command'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DropdownMenu,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DropdownMenuContent,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DropdownMenuItem,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  DropdownMenuTrigger,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">} </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/dropdown-menu'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Popover, PopoverContent, PopoverTrigger } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/popover'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Switch } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/switch'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Tooltip, TooltipContent, TooltipTrigger } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/tooltip'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cva, </span><span style=\"color:#FF7B72\">type</span><span style=\"color:#E6EDF3\"> VariantProps } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'class-variance-authority'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { AlertCircle, Check, Plus, X } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'lucide-react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// i18n Configuration Interface</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> FilterI18nConfig</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // UI Labels</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  addFilter</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  searchFields</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  noFieldsFound</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  noResultsFound</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  select</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  true</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  false</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  min</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  max</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  to</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  typeAndPressEnter</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  selected</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  selectedCount</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  percent</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  defaultCurrency</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  defaultColor</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  addFilterTitle</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Operators</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  operators</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    is</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    isNot</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    isAnyOf</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    isNotAnyOf</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    includesAll</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    excludesAll</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    before</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    after</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    between</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    notBetween</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    contains</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    notContains</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    startsWith</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    endsWith</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    isExactly</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    equals</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    notEquals</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    greaterThan</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    lessThan</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    overlaps</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    includes</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    excludes</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    includesAllOf</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    includesAnyOf</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    empty</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    notEmpty</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Placeholders</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  placeholders</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    enterField</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">fieldType</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    selectField</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    searchField</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">fieldName</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    enterKey</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    enterValue</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Helper functions</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  helpers</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    formatOperator</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">operator</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Validation</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  validation</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    invalidEmail</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    invalidUrl</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    invalidTel</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">    invalid</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Default English i18n configuration</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> const</span><span style=\"color:#79C0FF\"> DEFAULT_I18N</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> FilterI18nConfig</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // UI Labels</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addFilter: </span><span style=\"color:#A5D6FF\">'Add filter'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  searchFields: </span><span style=\"color:#A5D6FF\">'Search fields...'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  noFieldsFound: </span><span style=\"color:#A5D6FF\">'No fields found.'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  noResultsFound: </span><span style=\"color:#A5D6FF\">'No results found.'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  select: </span><span style=\"color:#A5D6FF\">'Select...'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  true: </span><span style=\"color:#A5D6FF\">'True'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  false: </span><span style=\"color:#A5D6FF\">'False'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  min: </span><span style=\"color:#A5D6FF\">'Min'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  max: </span><span style=\"color:#A5D6FF\">'Max'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  to: </span><span style=\"color:#A5D6FF\">'to'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  typeAndPressEnter: </span><span style=\"color:#A5D6FF\">'Type and press Enter to add tag'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  selected: </span><span style=\"color:#A5D6FF\">'selected'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  selectedCount: </span><span style=\"color:#A5D6FF\">'selected'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  percent: </span><span style=\"color:#A5D6FF\">'%'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  defaultCurrency: </span><span style=\"color:#A5D6FF\">'$'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  defaultColor: </span><span style=\"color:#A5D6FF\">'#000000'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addFilterTitle: </span><span style=\"color:#A5D6FF\">'Add filter'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Operators</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  operators: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    is: </span><span style=\"color:#A5D6FF\">'is'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    isNot: </span><span style=\"color:#A5D6FF\">'is not'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    isAnyOf: </span><span style=\"color:#A5D6FF\">'is any of'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    isNotAnyOf: </span><span style=\"color:#A5D6FF\">'is not any of'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    includesAll: </span><span style=\"color:#A5D6FF\">'includes all'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    excludesAll: </span><span style=\"color:#A5D6FF\">'excludes all'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    before: </span><span style=\"color:#A5D6FF\">'before'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    after: </span><span style=\"color:#A5D6FF\">'after'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    between: </span><span style=\"color:#A5D6FF\">'between'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    notBetween: </span><span style=\"color:#A5D6FF\">'not between'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    contains: </span><span style=\"color:#A5D6FF\">'contains'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    notContains: </span><span style=\"color:#A5D6FF\">'does not contain'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    startsWith: </span><span style=\"color:#A5D6FF\">'starts with'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    endsWith: </span><span style=\"color:#A5D6FF\">'ends with'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    isExactly: </span><span style=\"color:#A5D6FF\">'is exactly'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    equals: </span><span style=\"color:#A5D6FF\">'equals'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    notEquals: </span><span style=\"color:#A5D6FF\">'not equals'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    greaterThan: </span><span style=\"color:#A5D6FF\">'greater than'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    lessThan: </span><span style=\"color:#A5D6FF\">'less than'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    overlaps: </span><span style=\"color:#A5D6FF\">'overlaps'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    includes: </span><span style=\"color:#A5D6FF\">'includes'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    excludes: </span><span style=\"color:#A5D6FF\">'excludes'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    includesAllOf: </span><span style=\"color:#A5D6FF\">'includes all of'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    includesAnyOf: </span><span style=\"color:#A5D6FF\">'includes any of'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    empty: </span><span style=\"color:#A5D6FF\">'is empty'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    notEmpty: </span><span style=\"color:#A5D6FF\">'is not empty'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Placeholders</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  placeholders: {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    enterField</span><span style=\"color:#E6EDF3\">: (</span><span style=\"color:#FFA657\">fieldType</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#A5D6FF\"> `Enter ${</span><span style=\"color:#E6EDF3\">fieldType</span><span style=\"color:#A5D6FF\">}...`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    selectField: </span><span style=\"color:#A5D6FF\">'Select...'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    searchField</span><span style=\"color:#E6EDF3\">: (</span><span style=\"color:#FFA657\">fieldName</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#A5D6FF\"> `Search ${</span><span style=\"color:#E6EDF3\">fieldName</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#D2A8FF\">toLowerCase</span><span style=\"color:#A5D6FF\">()</span><span style=\"color:#A5D6FF\">}...`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    enterKey: </span><span style=\"color:#A5D6FF\">'Enter key...'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    enterValue: </span><span style=\"color:#A5D6FF\">'Enter value...'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Helper functions</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  helpers: {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    formatOperator</span><span style=\"color:#E6EDF3\">: (</span><span style=\"color:#FFA657\">operator</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> operator.</span><span style=\"color:#D2A8FF\">replace</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">/_/</span><span style=\"color:#FF7B72\">g</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">' '</span><span style=\"color:#E6EDF3\">),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Validation</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  validation: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    invalidEmail: </span><span style=\"color:#A5D6FF\">'Invalid email format'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    invalidUrl: </span><span style=\"color:#A5D6FF\">'Invalid URL format'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    invalidTel: </span><span style=\"color:#A5D6FF\">'Invalid phone format'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    invalid: </span><span style=\"color:#A5D6FF\">'Invalid input format'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Context for all Filter component props</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> FilterContextValue</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  variant</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#A5D6FF\"> 'solid'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'outline'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  size</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#A5D6FF\"> 'sm'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'lg'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  radius</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'full'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  i18n</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> FilterI18nConfig</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  cursorPointer</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  showAddButton</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  addButtonText</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  addButtonIcon</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  addButtonClassName</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  addButton</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  showSearchInput</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  trigger</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  allowMultiple</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> FilterContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> createContext</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">FilterContextValue</span><span style=\"color:#E6EDF3\">>({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  variant: </span><span style=\"color:#A5D6FF\">'outline'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  radius: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  i18n: </span><span style=\"color:#79C0FF\">DEFAULT_I18N</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  cursorPointer: </span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  className: </span><span style=\"color:#79C0FF\">undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  showAddButton: </span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addButtonText: </span><span style=\"color:#79C0FF\">undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addButtonIcon: </span><span style=\"color:#79C0FF\">undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addButtonClassName: </span><span style=\"color:#79C0FF\">undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addButton: </span><span style=\"color:#79C0FF\">undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  showSearchInput: </span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  trigger: </span><span style=\"color:#79C0FF\">undefined</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  allowMultiple: </span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#D2A8FF\"> useFilterContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> useContext</span><span style=\"color:#E6EDF3\">(FilterContext);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Reusable input variant component for consistent styling</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> filterInputVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  [</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'transition shrink-0 outline-none text-foreground relative flex items-center'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'has-[[data-slot=filters-input]:focus-visible]:ring-ring/30'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'has-[[data-slot=filters-input]:focus-visible]:border-ring'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'has-[[data-slot=filters-input]:focus-visible]:outline-none'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'has-[[data-slot=filters-input]:focus-visible]:ring-[3px]'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'has-[[data-slot=filters-input]:focus-visible]:z-1'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'has-[[data-slot=filters-input]:aria-invalid]:border'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'has-[[data-slot=filters-input]:aria-invalid]:border-solid'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'has-[[data-slot=filters-input]:aria-invalid]:border-destructive/60'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'has-[[data-slot=filters-input]:aria-invalid]:ring-destructive/10'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'dark:has-[[data-slot=filters-input]:aria-invalid]:border-destructive'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'dark:has-[[data-slot=filters-input]:aria-invalid]:ring-destructive/20'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        solid: </span><span style=\"color:#A5D6FF\">'border-0 bg-secondary'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        outline: </span><span style=\"color:#A5D6FF\">'bg-background border border-border'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        lg: </span><span style=\"color:#A5D6FF\">'h-10 text-sm px-2.5 has-[[data-slot=filters-prefix]]:ps-0 has-[[data-slot=filters-suffix]]:pe-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        md: </span><span style=\"color:#A5D6FF\">'h-9 text-sm px-2 has-[[data-slot=filters-prefix]]:ps-0 has-[[data-slot=filters-suffix]]:pe-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        sm: </span><span style=\"color:#A5D6FF\">'h-8 text-xs px-1.5 has-[[data-slot=filters-prefix]]:ps-0 has-[[data-slot=filters-suffix]]:pe-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      cursorPointer: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        true: </span><span style=\"color:#A5D6FF\">'cursor-pointer'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        false: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: </span><span style=\"color:#A5D6FF\">'outline'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      cursorPointer: </span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Reusable remove button variant component</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> filterRemoveButtonVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  [</span><span style=\"color:#A5D6FF\">'inline-flex items-center shrink-0 justify-center transition shrink-0 text-muted-foreground hover:text-foreground'</span><span style=\"color:#E6EDF3\">],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        solid: </span><span style=\"color:#A5D6FF\">'bg-secondary'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        outline: </span><span style=\"color:#A5D6FF\">'border border-border border-s-0 hover:bg-secondary'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        lg: </span><span style=\"color:#A5D6FF\">'h-10 w-10 [&#x26;_svg:not([class*=size-])]:size-4'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        md: </span><span style=\"color:#A5D6FF\">'h-9 w-9 [&#x26;_svg:not([class*=size-])]:size-3.5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        sm: </span><span style=\"color:#A5D6FF\">'h-8 w-8 [&#x26;_svg:not([class*=size-])]:size-3'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      cursorPointer: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        true: </span><span style=\"color:#A5D6FF\">'cursor-pointer'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        false: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      radius: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        md: </span><span style=\"color:#A5D6FF\">'rounded-e-md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        full: </span><span style=\"color:#A5D6FF\">'rounded-e-full'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: </span><span style=\"color:#A5D6FF\">'outline'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      radius: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      cursorPointer: </span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> filterAddButtonVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  [</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'inline-flex items-center shrink-0 justify-center transition shrink-0 text-foreground shadow-xs shadow-black/5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    '[&#x26;_svg:not([role=img]):not([class*=text-]):not([class*=opacity-])]:opacity-60'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        solid: </span><span style=\"color:#A5D6FF\">'border border-input hover:bg-secondary/60'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        outline: </span><span style=\"color:#A5D6FF\">'border border-border hover:bg-secondary'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        lg: </span><span style=\"color:#A5D6FF\">'h-10 px-4 text-sm gap-1.5 [&#x26;_svg:not([class*=size-])]:size-4'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        md: </span><span style=\"color:#A5D6FF\">'h-9 px-3 gap-1.5 text-sm [&#x26;_svg:not([class*=size-])]:size-4'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        sm: </span><span style=\"color:#A5D6FF\">'h-8 px-2.5 gap-1.25 text-xs [&#x26;_svg:not([class*=size-])]:size-3.5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      radius: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        md: </span><span style=\"color:#A5D6FF\">'rounded-md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        full: </span><span style=\"color:#A5D6FF\">'rounded-full'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      cursorPointer: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        true: </span><span style=\"color:#A5D6FF\">'cursor-pointer'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        false: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: </span><span style=\"color:#A5D6FF\">'outline'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      cursorPointer: </span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> filterOperatorVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  [</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'transition text-muted-foreground hover:text-foreground data-[state=open]:text-foreground shrink-0 flex items-center relative focus-visible:z-1'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        solid: </span><span style=\"color:#A5D6FF\">'bg-secondary'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        outline:</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'bg-background border border-border border-e-0 hover:bg-secondary data-[state=open]:bg-secondary [&#x26;+[data-slot=filters-remove]]:border-s'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        lg: </span><span style=\"color:#A5D6FF\">'h-10 px-4 text-sm gap-1.5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        md: </span><span style=\"color:#A5D6FF\">'h-9 px-3 text-sm gap-1.25'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        sm: </span><span style=\"color:#A5D6FF\">'h-8 px-2.5 text-xs gap-1'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      cursorPointer: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        true: </span><span style=\"color:#A5D6FF\">'cursor-pointer'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        false: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: </span><span style=\"color:#A5D6FF\">'outline'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      cursorPointer: </span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> filterFieldLabelVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  [</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    'flex gap-1.5 shrink-0 px-1.5 py-1 items-center text-foreground'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    '[&#x26;_svg:not([class*=size-])]:size-3.5 [&#x26;_svg:not([class*=opacity-])]:opacity-60'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        solid: </span><span style=\"color:#A5D6FF\">'bg-secondary'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        outline: </span><span style=\"color:#A5D6FF\">'border border-border border-e-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        lg: </span><span style=\"color:#A5D6FF\">'h-10 px-4 text-sm gap-1.5 [&#x26;_svg:not([class*=size-])]:size-4'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        md: </span><span style=\"color:#A5D6FF\">'h-9 px-3 gap-1.5 text-sm [&#x26;_svg:not([class*=size-])]:size-4'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        sm: </span><span style=\"color:#A5D6FF\">'h-8 px-2.5 gap-1.25 text-xs [&#x26;_svg:not([class*=size-])]:size-3.5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      radius: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        md: </span><span style=\"color:#A5D6FF\">'rounded-s-md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        full: </span><span style=\"color:#A5D6FF\">'rounded-s-full'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: </span><span style=\"color:#A5D6FF\">'outline'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> filterFieldValueVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">  'text-foreground transition shrink-0 flex items-center gap-1 relative focus-visible:z-1'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        solid: </span><span style=\"color:#A5D6FF\">'bg-secondary'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        outline: </span><span style=\"color:#A5D6FF\">'bg-background border border-border hover:bg-secondary has-[[data-slot=switch]]:hover:bg-transparent'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        lg: </span><span style=\"color:#A5D6FF\">'h-10 px-4 text-sm gap-1.5 [&#x26;_svg:not([class*=size-])]:size-4'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        md: </span><span style=\"color:#A5D6FF\">'h-9 px-3 gap-1.5 text-sm [&#x26;_svg:not([class*=size-])]:size-4'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        sm: </span><span style=\"color:#A5D6FF\">'h-8 px-2.5 gap-1.25 text-xs [&#x26;_svg:not([class*=size-])]:size-3.5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      cursorPointer: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        true: </span><span style=\"color:#A5D6FF\">'cursor-pointer has-[[data-slot=switch]]:cursor-default'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        false: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      variant: </span><span style=\"color:#A5D6FF\">'outline'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      cursorPointer: </span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> filterFieldAddonVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'text-foreground shrink-0 flex items-center justify-center'</span><span style=\"color:#E6EDF3\">, {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      solid: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      outline: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      lg: </span><span style=\"color:#A5D6FF\">'h-10 px-4 text-sm'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      md: </span><span style=\"color:#A5D6FF\">'h-9 px-3 text-sm'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      sm: </span><span style=\"color:#A5D6FF\">'h-8 px-2.5 text-xs'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variant: </span><span style=\"color:#A5D6FF\">'outline'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> filterFieldBetweenVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'text-muted-foreground shrink-0 flex items-center'</span><span style=\"color:#E6EDF3\">, {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      solid: </span><span style=\"color:#A5D6FF\">'bg-secondary'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      outline: </span><span style=\"color:#A5D6FF\">'bg-background border border-border border-x-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      lg: </span><span style=\"color:#A5D6FF\">'h-10 px-4 text-sm'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      md: </span><span style=\"color:#A5D6FF\">'h-9 px-3 text-sm'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      sm: </span><span style=\"color:#A5D6FF\">'h-8 px-2.5 text-xs'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variant: </span><span style=\"color:#A5D6FF\">'outline'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> filtersContainerVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'flex flex-wrap items-center'</span><span style=\"color:#E6EDF3\">, {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      solid: </span><span style=\"color:#A5D6FF\">'gap-2'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      outline: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      sm: </span><span style=\"color:#A5D6FF\">'gap-1.5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      md: </span><span style=\"color:#A5D6FF\">'gap-2.5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      lg: </span><span style=\"color:#A5D6FF\">'gap-3.5'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variant: </span><span style=\"color:#A5D6FF\">'outline'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> filterItemVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'flex items-center shadow-xs shadow-black/5'</span><span style=\"color:#E6EDF3\">, {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variant: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      solid: </span><span style=\"color:#A5D6FF\">'gap-px'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      outline: </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variant: </span><span style=\"color:#A5D6FF\">'outline'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> FilterInput</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">>({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  field</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onChange</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onBlur</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onKeyDown</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">InputHTMLAttributes</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLInputElement</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">; </span><span style=\"color:#FFA657\">field</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> FilterFieldConfig</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> context</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useFilterContext</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">isValid</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setIsValid</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">validationMessage</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">setValidationMessage</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Validation function to check if input matches pattern</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> validateInput</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">pattern</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#FF7B72\"> =></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">pattern </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">value) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> regex</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#FF7B72\"> new</span><span style=\"color:#D2A8FF\"> RegExp</span><span style=\"color:#E6EDF3\">(pattern);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> regex.</span><span style=\"color:#D2A8FF\">test</span><span style=\"color:#E6EDF3\">(value);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Get validation message for field type</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> getValidationMessage</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">fieldType</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">hasCustomPattern</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> =></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // If it's a text or number field with a custom pattern, use the generic invalid message</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> ((fieldType </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'text'</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> fieldType </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'number'</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> hasCustomPattern) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#E6EDF3\"> context.i18n.validation.invalid;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    switch</span><span style=\"color:#E6EDF3\"> (fieldType) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      case</span><span style=\"color:#A5D6FF\"> 'email'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\"> context.i18n.validation.invalidEmail;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      case</span><span style=\"color:#A5D6FF\"> 'url'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\"> context.i18n.validation.invalidUrl;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      case</span><span style=\"color:#A5D6FF\"> 'tel'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\"> context.i18n.validation.invalidTel;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      default</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\"> context.i18n.validation.invalid;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Handle input change - allow typing without validation</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> handleChange</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">e</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ChangeEvent</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLInputElement</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Always allow typing, just call the original onChange</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    onChange</span><span style=\"color:#E6EDF3\">?.(e);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Handle blur event - validate when user leaves input</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> handleBlur</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">e</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">FocusEvent</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLInputElement</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> e.target.value;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> pattern</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> field?.pattern </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> props.pattern;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Only validate if there's a value and pattern</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (value </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> pattern) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      let</span><span style=\"color:#E6EDF3\"> valid </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // If there's a custom validation function, use it</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (field?.validation) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        valid </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> field.</span><span style=\"color:#D2A8FF\">validation</span><span style=\"color:#E6EDF3\">(value);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">        // Use pattern validation</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        valid </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> validateInput</span><span style=\"color:#E6EDF3\">(value, pattern);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setIsValid</span><span style=\"color:#E6EDF3\">(valid);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> hasCustomPattern</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#FF7B72\"> !!</span><span style=\"color:#E6EDF3\">(field?.pattern </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> props.pattern);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setValidationMessage</span><span style=\"color:#E6EDF3\">(valid </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#D2A8FF\"> getValidationMessage</span><span style=\"color:#E6EDF3\">(field?.type </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">, hasCustomPattern));</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Reset validation state for empty values or no pattern</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setIsValid</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setValidationMessage</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Call the original onBlur if provided</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    onBlur</span><span style=\"color:#E6EDF3\">?.(e);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Handle keydown event - hide validation error when user starts typing</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#D2A8FF\"> handleKeyDown</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">e</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">KeyboardEvent</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLInputElement</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Hide validation error when user starts typing (any key except special keys)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">isValid </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">[</span><span style=\"color:#A5D6FF\">'Tab'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'Escape'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'Enter'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'ArrowUp'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'ArrowDown'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'ArrowLeft'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'ArrowRight'</span><span style=\"color:#E6EDF3\">].</span><span style=\"color:#D2A8FF\">includes</span><span style=\"color:#E6EDF3\">(e.key)) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setIsValid</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">true</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      setValidationMessage</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Call the original onKeyDown if provided</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    onKeyDown</span><span style=\"color:#E6EDF3\">?.(e);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-36'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#D2A8FF\">filterInputVariants</span><span style=\"color:#E6EDF3\">({ variant: context.variant, size: context.size }), className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filters-input-wrapper\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">field?.prefix </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filters-prefix\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">filterFieldAddonVariants</span><span style=\"color:#E6EDF3\">({ variant: context.variant, size: context.size })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">field.prefix</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"w-full flex items-stretch\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">input</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"w-full outline-none\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          aria-invalid</span><span style=\"color:#FF7B72\">={!</span><span style=\"color:#E6EDF3\">isValid</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          aria-describedby</span><span style=\"color:#FF7B72\">={!</span><span style=\"color:#E6EDF3\">isValid </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> validationMessage </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#A5D6FF\">?.</span><span style=\"color:#E6EDF3\">key</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#A5D6FF\"> 'input'}-error`</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handleChange</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          onBlur</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handleBlur</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          onKeyDown</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">handleKeyDown</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filters-input\"</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        /></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {!</span><span style=\"color:#E6EDF3\">isValid </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> validationMessage </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">Tooltip</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">TooltipTrigger</span><span style=\"color:#79C0FF\"> asChild</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"absolute right-2 top-1/2 -translate-y-1/2 flex items-center\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;</span><span style=\"color:#7EE787\">AlertCircle</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"size-3.5 text-destructive\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;/</span><span style=\"color:#7EE787\">TooltipTrigger</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">TooltipContent</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">p</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-sm\"</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">validationMessage</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">p</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;/</span><span style=\"color:#7EE787\">TooltipContent</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">Tooltip</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">field?.suffix </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filters-suffix\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#D2A8FF\">filterFieldAddonVariants</span><span style=\"color:#E6EDF3\">({ variant: context.variant, size: context.size }))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">field.suffix</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> FilterRemoveButtonProps</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  extends</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#79C0FF\">ButtonHTMLAttributes</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLButtonElement</span><span style=\"color:#E6EDF3\">>,</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">    VariantProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> filterRemoveButtonVariants> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  icon</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> FilterRemoveButton</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">icon</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">X</span><span style=\"color:#E6EDF3\"> />, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> FilterRemoveButtonProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> context</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useFilterContext</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">button</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filters-remove\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        filterRemoveButtonVariants</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          variant: context.variant,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          size: context.size,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          cursorPointer: context.cursorPointer,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          radius: context.radius,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">icon</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">button</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Generic types for flexible filter system</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> FilterOption</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  label</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  icon</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  metadata</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> Record</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">unknown</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> FilterOperator</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  label</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  supportsMultiple</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Custom renderer props interface</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> CustomRendererProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  field</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> FilterFieldConfig</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  values</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onChange</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">values</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  operator</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Grouped field configuration interface</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> FilterFieldGroup</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  group</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  fields</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> FilterFieldConfig</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Union type for both flat and grouped field configurations</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> type</span><span style=\"color:#FFA657\"> FilterFieldsConfig</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#FFA657\"> FilterFieldConfig</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>[] </span><span style=\"color:#FF7B72\">|</span><span style=\"color:#FFA657\"> FilterFieldGroup</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>[];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> interface</span><span style=\"color:#FFA657\"> FilterFieldConfig</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  key</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  label</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  icon</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  type</span><span style=\"color:#FF7B72\">?:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'select'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'multiselect'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'date'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'daterange'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'text'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'number'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'numberrange'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'boolean'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'email'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'url'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'tel'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'time'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'datetime'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'custom'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    |</span><span style=\"color:#A5D6FF\"> 'separator'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Group-level configuration</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  group</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  fields</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> FilterFieldConfig</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>[];</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Field-specific options</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  options</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> FilterOption</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>[];</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  operators</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> FilterOperator</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  customRenderer</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">props</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> CustomRendererProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  customValueRenderer</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">values</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[], </span><span style=\"color:#FFA657\">options</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> FilterOption</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>[]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  placeholder</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  searchable</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  maxSelections</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  min</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  max</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  step</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  prefix</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  suffix</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  pattern</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  validation</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">value</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  allowCustomValues</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  popoverContentClassName</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  selectedOptionsClassName</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Grouping options (legacy support)</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  groupLabel</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Boolean field options</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onLabel</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  offLabel</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Helper functions to handle both flat and grouped field configurations</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#D2A8FF\"> isFieldGroup</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> unknown,>(item:</span><span style=\"color:#FFA198;font-style:italic\"> FilterFieldConfig&#x3C;T></span><span style=\"color:#FFA198;font-style:italic\"> |</span><span style=\"color:#FFA198;font-style:italic\"> FilterFieldGroup&#x3C;T>):</span><span style=\"color:#79C0FF\"> item</span><span style=\"color:#79C0FF\"> is</span><span style=\"color:#FFA198;font-style:italic\"> FilterFieldGroup&#x3C;T></span><span style=\"color:#FFA198;font-style:italic\"> =></span><span style=\"color:#FF7B72\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  return </span><span style=\"color:#A5D6FF\">'fields'</span><span style=\"color:#FF7B72\"> in</span><span style=\"color:#E6EDF3\"> item </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> Array.</span><span style=\"color:#D2A8FF\">isArray</span><span style=\"color:#E6EDF3\">(item.fields);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Helper function to check if a FilterFieldConfig is a group-level configuration</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">const</span><span style=\"color:#79C0FF\"> isGroupLevelField</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> &#x3C;T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> unknown,>(field:</span><span style=\"color:#FFA198;font-style:italic\"> FilterFieldConfig&#x3C;T>):</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#FFA198;font-style:italic\"> =></span><span style=\"color:#FF7B72\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  return </span><span style=\"color:#D2A8FF\">Boolean</span><span style=\"color:#E6EDF3\">(field.group </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> field.fields);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">const</span><span style=\"color:#79C0FF\"> flattenFields</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> &#x3C;T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> unknown,>(fields:</span><span style=\"color:#FFA198;font-style:italic\"> FilterFieldsConfig&#x3C;T>):</span><span style=\"color:#FFA198;font-style:italic\"> FilterFieldConfig&#x3C;T>[]</span><span style=\"color:#FFA198;font-style:italic\"> =></span><span style=\"color:#FF7B72\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  return fields.</span><span style=\"color:#D2A8FF\">reduce</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">FilterFieldConfig</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>[]>((</span><span style=\"color:#FFA657\">acc</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">item</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#D2A8FF\">isFieldGroup</span><span style=\"color:#E6EDF3\">(item)) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">acc, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">item.fields];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Handle group-level fields (new structure)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#D2A8FF\">isGroupLevelField</span><span style=\"color:#E6EDF3\">(item)) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">acc, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">item.fields</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">acc, item];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, []);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">const</span><span style=\"color:#79C0FF\"> getFieldsMap</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> &#x3C;T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> unknown,>(fields:</span><span style=\"color:#FFA198;font-style:italic\"> FilterFieldsConfig&#x3C;T>):</span><span style=\"color:#FFA198;font-style:italic\"> Record&#x3C;string,</span><span style=\"color:#FFA198;font-style:italic\"> FilterFieldConfig&#x3C;T>></span><span style=\"color:#FFA198;font-style:italic\"> =></span><span style=\"color:#FF7B72\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const flatFields </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> flattenFields</span><span style=\"color:#E6EDF3\">(fields);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  return flatFields.</span><span style=\"color:#D2A8FF\">reduce</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">acc</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">field</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Only add fields that have a key (skip group-level configurations)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (field.key) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        acc[field.key] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> field;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#E6EDF3\"> acc;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    {} </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> Record</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">FilterFieldConfig</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>>,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Helper function to create operators from i18n config</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">const</span><span style=\"color:#79C0FF\"> createOperatorsFromI18n</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> (i18n:</span><span style=\"color:#FFA198;font-style:italic\"> FilterI18nConfig):</span><span style=\"color:#FFA198;font-style:italic\"> Record&#x3C;string,</span><span style=\"color:#FFA198;font-style:italic\"> FilterOperator[]></span><span style=\"color:#FFA198;font-style:italic\"> =></span><span style=\"color:#FFA198;font-style:italic\"> ({</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  select:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.is </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is_not'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.isNot </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  multiselect:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is_any_of'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.isAnyOf </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is_not_any_of'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.isNotAnyOf </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'includes_all'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.includesAll </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'excludes_all'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.excludesAll </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  date:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'before'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.before </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'after'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.after </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.is </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is_not'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.isNot </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  daterange:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'between'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.between </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_between'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notBetween </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  text:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'contains'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.contains </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_contains'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notContains </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'starts_with'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.startsWith </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'ends_with'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.endsWith </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.isExactly </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  number:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'equals'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.equals </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_equals'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEquals </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'greater_than'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.greaterThan </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'less_than'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.lessThan </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'between'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.between </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  numberrange:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'between'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.between </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'overlaps'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.overlaps </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'contains'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.contains </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  boolean:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.is </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is_not'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.isNot </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  email:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'contains'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.contains </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_contains'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notContains </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'starts_with'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.startsWith </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'ends_with'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.endsWith </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.isExactly </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  url:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'contains'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.contains </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_contains'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notContains </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'starts_with'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.startsWith </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'ends_with'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.endsWith </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.isExactly </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  tel:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'contains'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.contains </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_contains'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notContains </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'starts_with'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.startsWith </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'ends_with'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.endsWith </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.isExactly </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  time:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'before'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.before </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'after'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.after </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.is </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'between'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.between </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  datetime:</span><span style=\"color:#FFA198;font-style:italic\"> [</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'before'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.before </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'after'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.after </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'is'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.is </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'between'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.between </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.empty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    {</span><span style=\"color:#E6EDF3\"> value: </span><span style=\"color:#A5D6FF\">'not_empty'</span><span style=\"color:#E6EDF3\">, label: i18n.operators.notEmpty </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Default operators for different field types (using default i18n)</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">export</span><span style=\"color:#79C0FF\"> const</span><span style=\"color:#FFA198;font-style:italic\"> DEFAULT_OPERATORS:</span><span style=\"color:#FFA198;font-style:italic\"> Record&#x3C;string,</span><span style=\"color:#FFA198;font-style:italic\"> FilterOperator[]></span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> createOperatorsFromI18n(DEFAULT_I18N);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Helper function to get operators for a field</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">const</span><span style=\"color:#79C0FF\"> getOperatorsForField</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> &#x3C;T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> unknown,>(</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  field:</span><span style=\"color:#FFA198;font-style:italic\"> FilterFieldConfig&#x3C;T>,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  values:</span><span style=\"color:#FFA198;font-style:italic\"> T[],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  i18n:</span><span style=\"color:#FFA198;font-style:italic\"> FilterI18nConfig,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">):</span><span style=\"color:#FFA198;font-style:italic\"> FilterOperator[]</span><span style=\"color:#FFA198;font-style:italic\"> =></span><span style=\"color:#FF7B72\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  if</span><span style=\"color:#E6EDF3\"> (field.operators) return field.operators;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const operators </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> createOperatorsFromI18n</span><span style=\"color:#E6EDF3\">(i18n);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const defaultOps </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> operators[field.type </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> 'select'</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> operators.select;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Dynamic operator selection based on values</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'select'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> values.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    return operators.multiselect;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  return defaultOps;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">interface</span><span style=\"color:#FFA198;font-style:italic\"> FilterOperatorDropdownProps&#x3C;T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  field: FilterFieldConfig</span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#79C0FF\">T</span><span style=\"color:#FF7B72\">></span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  operator: string;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  values: </span><span style=\"color:#79C0FF\">T</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  onChange: (</span><span style=\"color:#FFA657\">operator</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#FF7B72\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">function FilterOperatorDropdown&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\"> field, operator, values, onChange </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">: FilterOperatorDropdownProps&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const context </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useFilterContext</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const operators </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> getOperatorsForField</span><span style=\"color:#E6EDF3\">(field, values, context.i18n);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">DropdownMenu</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">DropdownMenuTrigger</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">filterOperatorVariants</span><span style=\"color:#E6EDF3\">({ variant: context.variant, size: context.size })</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">operators.</span><span style=\"color:#D2A8FF\">find</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">op</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> op.value </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> operator)?.label </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> operator</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">DropdownMenuTrigger</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">DropdownMenuContent</span><span style=\"color:#79C0FF\"> align</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"start\"</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"w-fit min-w-fit\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">operators.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">op</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">DropdownMenuItem</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">op.value</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            onClick</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> onChange</span><span style=\"color:#E6EDF3\">(op.value)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex items-center justify-between\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">op.label</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">Check</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#A5D6FF\">`text-primary ms-auto ${</span><span style=\"color:#E6EDF3\">op</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#E6EDF3\">value</span><span style=\"color:#FF7B72\"> ===</span><span style=\"color:#E6EDF3\"> operator</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#A5D6FF\"> 'opacity-100'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'opacity-0'}`</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">DropdownMenuItem</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">DropdownMenuContent</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">DropdownMenu</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">interface FilterValueSelectorProps&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  field: FilterFieldConfig</span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#79C0FF\">T</span><span style=\"color:#FF7B72\">></span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  values: </span><span style=\"color:#79C0FF\">T</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  onChange: (</span><span style=\"color:#FFA657\">values</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#FF7B72\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  operator: string;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">interface SelectOptionsPopoverProps&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  field: FilterFieldConfig</span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#79C0FF\">T</span><span style=\"color:#FF7B72\">></span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  values: </span><span style=\"color:#79C0FF\">T</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  onChange: (</span><span style=\"color:#FFA657\">values</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#FF7B72\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  onClose</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#FF7B72\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  showBackButton</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> boolean;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  onBack</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#FF7B72\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  inline</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> boolean;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">function SelectOptionsPopover&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  field,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  values,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  onChange,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  onClose,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  inline </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">: SelectOptionsPopoverProps&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const [open, setOpen] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const [searchInput, setSearchInput] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const context </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useFilterContext</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const isMultiSelect </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'multiselect'</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> values.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 1</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const selectedOptions </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> field.options?.</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">opt</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> values.</span><span style=\"color:#D2A8FF\">includes</span><span style=\"color:#E6EDF3\">(opt.value)) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> [];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const unselectedOptions </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> field.options?.</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">opt</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">values.</span><span style=\"color:#D2A8FF\">includes</span><span style=\"color:#E6EDF3\">(opt.value)) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> [];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const </span><span style=\"color:#D2A8FF\">handleClose</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    setOpen</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    onClose</span><span style=\"color:#E6EDF3\">?.();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // If inline mode, render the content directly without popover</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  if</span><span style=\"color:#E6EDF3\"> (inline) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#FFA657\">div</span><span style=\"color:#FFA657\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"w-full\"</span><span style=\"color:#FF7B72\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#FFA657\">Command</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          {</span><span style=\"color:#FFA657\">field</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">searchable</span><span style=\"color:#E6EDF3\"> !== </span><span style=\"color:#FFA657\">false</span><span style=\"color:#E6EDF3\"> &#x26;&#x26; (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#FFA657\">CommandInput</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">              placeholder</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{context.i18n.placeholders.searchField(field.label || </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">)}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              className=</span><span style=\"color:#A5D6FF\">\"h-8.5 text-sm\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              value={searchInput}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              onValueChange={setSearchInput}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          )}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;CommandList></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;CommandEmpty>{context.i18n.noResultsFound}&#x3C;/CommandEmpty></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            {</span><span style=\"color:#8B949E\">/* Selected items */</span><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            {selectedOptions.length > 0 &#x26;&#x26; (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;CommandGroup heading={field.label || </span><span style=\"color:#A5D6FF\">'Selected'</span><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                {</span><span style=\"color:#FFA657\">selectedOptions</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">option</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;</span><span style=\"color:#7EE787\">CommandItem</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">String</span><span style=\"color:#E6EDF3\">(option.value)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"group flex gap-2 items-center\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    onSelect</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                      if</span><span style=\"color:#E6EDF3\"> (isMultiSelect) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                        onChange</span><span style=\"color:#E6EDF3\">(values.</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">v</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> v </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#E6EDF3\"> option.value) </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                        onChange</span><span style=\"color:#E6EDF3\">([] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    {</span><span style=\"color:#E6EDF3\">option.icon </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> option.icon</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-accent-foreground truncate\"</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">option.label</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">Check</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-primary ms-auto\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;/</span><span style=\"color:#7EE787\">CommandItem</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                ))}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;/</span><span style=\"color:#FFA657\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            )}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            {</span><span style=\"color:#8B949E\">/* Available items */</span><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            {</span><span style=\"color:#FFA657\">unselectedOptions</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">length</span><span style=\"color:#E6EDF3\"> > 0 &#x26;&#x26; (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                {</span><span style=\"color:#FFA657\">selectedOptions</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">length</span><span style=\"color:#E6EDF3\"> > 0 &#x26;&#x26; &#x3C;</span><span style=\"color:#FFA657\">CommandSeparator</span><span style=\"color:#E6EDF3\"> />}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;</span><span style=\"color:#FFA657\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  {</span><span style=\"color:#FFA657\">unselectedOptions</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">option</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">CommandItem</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                      key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">String</span><span style=\"color:#E6EDF3\">(option.value)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                      className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"group flex gap-2 items-center\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                      value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">option.label</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                      onSelect</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        if</span><span style=\"color:#E6EDF3\"> (isMultiSelect) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          const</span><span style=\"color:#79C0FF\"> newValues</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">values, option.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          if</span><span style=\"color:#E6EDF3\"> (field.maxSelections </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> newValues.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#E6EDF3\"> field.maxSelections) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                            return</span><span style=\"color:#E6EDF3\">; </span><span style=\"color:#8B949E\">// Don't exceed max selections</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          }</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                          onChange</span><span style=\"color:#E6EDF3\">(newValues);</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                          // For multiselect, don't close the popover to allow multiple selections</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                          onChange</span><span style=\"color:#E6EDF3\">([option.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                          onClose</span><span style=\"color:#E6EDF3\">?.();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                      {</span><span style=\"color:#E6EDF3\">option.icon </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> option.icon</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-accent-foreground truncate\"</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">option.label</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">Check</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-primary ms-auto opacity-0\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;/</span><span style=\"color:#7EE787\">CommandItem</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  ))}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;/</span><span style=\"color:#FFA657\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;/></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            )}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#FFA657\">CommandList</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#FFA657\">Command</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#FFA657\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">Popover</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      open</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">open</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      onOpenChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">open</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setOpen</span><span style=\"color:#E6EDF3\">(open);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">open) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">          setTimeout</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> setSearchInput</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">), </span><span style=\"color:#79C0FF\">200</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">PopoverTrigger</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">filterFieldValueVariants</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          variant: context.variant,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          size: context.size,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          cursorPointer: context.cursorPointer,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex gap-1.5 items-center\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">field.customValueRenderer </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            field.</span><span style=\"color:#D2A8FF\">customValueRenderer</span><span style=\"color:#E6EDF3\">(values, field.options </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> [])</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#E6EDF3\">selectedOptions.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'-space-x-1.5 flex items-center'</span><span style=\"color:#E6EDF3\">, field.selectedOptionsClassName)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  {</span><span style=\"color:#E6EDF3\">selectedOptions.</span><span style=\"color:#D2A8FF\">slice</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">3</span><span style=\"color:#E6EDF3\">).</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">option</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">String</span><span style=\"color:#E6EDF3\">(option.value)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">option.icon</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  ))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#E6EDF3\">selectedOptions.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ===</span><span style=\"color:#79C0FF\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                ?</span><span style=\"color:#E6EDF3\"> selectedOptions[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">].label</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                :</span><span style=\"color:#E6EDF3\"> selectedOptions.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  ?</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">selectedOptions</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#A5D6FF\">} ${</span><span style=\"color:#E6EDF3\">context</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#E6EDF3\">i18n</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#E6EDF3\">selectedCount</span><span style=\"color:#A5D6FF\">}`</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  :</span><span style=\"color:#E6EDF3\"> context.i18n.select</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;/></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">PopoverTrigger</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">PopoverContent</span><span style=\"color:#79C0FF\"> align</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"start\"</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-[200px] p-0'</span><span style=\"color:#E6EDF3\">, field.className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">Command</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">field.searchable </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">CommandInput</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              placeholder</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">context.i18n.placeholders.</span><span style=\"color:#D2A8FF\">searchField</span><span style=\"color:#E6EDF3\">(field.label </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"h-9 text-sm\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">searchInput</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              onValueChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">setSearchInput</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">CommandList</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">CommandEmpty</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">context.i18n.noResultsFound</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">CommandEmpty</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#8B949E\">/* Selected items */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">selectedOptions.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                {</span><span style=\"color:#E6EDF3\">selectedOptions.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">option</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;</span><span style=\"color:#7EE787\">CommandItem</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">String</span><span style=\"color:#E6EDF3\">(option.value)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"group flex gap-2 items-center\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    onSelect</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                      if</span><span style=\"color:#E6EDF3\"> (isMultiSelect) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                        onChange</span><span style=\"color:#E6EDF3\">(values.</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">v</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> v </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#E6EDF3\"> option.value) </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                        onChange</span><span style=\"color:#E6EDF3\">([] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">isMultiSelect) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                        setOpen</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                        handleClose</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    {</span><span style=\"color:#E6EDF3\">option.icon </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> option.icon</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-accent-foreground truncate\"</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">option.label</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">Check</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-primary ms-auto\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;/</span><span style=\"color:#7EE787\">CommandItem</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                ))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;/</span><span style=\"color:#7EE787\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#8B949E\">/* Available items */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">unselectedOptions.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                {</span><span style=\"color:#E6EDF3\">selectedOptions.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">CommandSeparator</span><span style=\"color:#E6EDF3\"> /></span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;</span><span style=\"color:#7EE787\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  {</span><span style=\"color:#E6EDF3\">unselectedOptions.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">option</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">CommandItem</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                      key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">String</span><span style=\"color:#E6EDF3\">(option.value)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                      className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"group flex gap-2 items-center\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                      value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">option.label</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                      onSelect</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        if</span><span style=\"color:#E6EDF3\"> (isMultiSelect) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          const</span><span style=\"color:#79C0FF\"> newValues</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">values, option.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          if</span><span style=\"color:#E6EDF3\"> (field.maxSelections </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> newValues.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#E6EDF3\"> field.maxSelections) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                            return</span><span style=\"color:#E6EDF3\">; </span><span style=\"color:#8B949E\">// Don't exceed max selections</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          }</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                          onChange</span><span style=\"color:#E6EDF3\">(newValues);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                          onChange</span><span style=\"color:#E6EDF3\">([option.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                          setOpen</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                          handleClose</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                      {</span><span style=\"color:#E6EDF3\">option.icon </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> option.icon</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-accent-foreground truncate\"</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">option.label</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">Check</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-primary ms-auto opacity-0\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;/</span><span style=\"color:#7EE787\">CommandItem</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  ))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;/</span><span style=\"color:#7EE787\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;/></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">CommandList</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">Command</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">PopoverContent</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">Popover</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">function FilterValueSelector&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\"> field, values, onChange, operator </span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">: FilterValueSelectorProps&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const [open, setOpen] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const [searchInput, setSearchInput] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const context </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useFilterContext</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Hide value input for empty/not empty operators</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  if</span><span style=\"color:#E6EDF3\"> (operator </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'empty'</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> operator </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'not_empty'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    return null;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Use custom renderer if provided</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  if</span><span style=\"color:#E6EDF3\"> (field.customRenderer) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#FFA657\">div</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">        className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{</span><span style=\"color:#D2A8FF\">filterFieldValueVariants</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">          variant</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#FFA657\">context</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">variant</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">          size</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#FFA657\">context</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">size</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">          cursorPointer</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#FFA657\">context</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">cursorPointer</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        })}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        {</span><span style=\"color:#FFA657\">field</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">customRenderer</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">field</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">values</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">onChange</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">operator</span><span style=\"color:#E6EDF3\"> })}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#FFA657\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'boolean'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    const isChecked </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> values[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">    // Use custom labels if provided, otherwise fall back to i18n defaults</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    const onLabel </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> field.onLabel </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> context.i18n.true;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    const offLabel </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> field.offLabel </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> context.i18n.false;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#FFA657\">div</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">        className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{</span><span style=\"color:#D2A8FF\">filterFieldValueVariants</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">          variant</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#FFA657\">context</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">variant</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">          size</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#FFA657\">context</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">size</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">          cursorPointer</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#FFA657\">context</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">cursorPointer</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        })}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#FFA657\">div</span><span style=\"color:#FFA657\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex items-center gap-2\"</span><span style=\"color:#FF7B72\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#FFA657\">Switch</span><span style=\"color:#FFA657\"> checked</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{isChecked} onCheckedChange</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{(checked) => </span><span style=\"color:#D2A8FF\">onChange</span><span style=\"color:#E6EDF3\">([</span><span style=\"color:#FFA657\">checked</span><span style=\"color:#FFA657\"> as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">])} size</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"sm\"</span><span style=\"color:#FF7B72\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          {</span><span style=\"color:#FFA657\">field</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">onLabel</span><span style=\"color:#E6EDF3\"> &#x26;&#x26; </span><span style=\"color:#FFA657\">field</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">offLabel</span><span style=\"color:#E6EDF3\"> &#x26;&#x26; (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#FFA657\">span</span><span style=\"color:#FFA657\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-xs text-muted-foreground\"</span><span style=\"color:#FF7B72\">></span><span style=\"color:#E6EDF3\">{isChecked ? onLabel : offLabel}</span><span style=\"color:#FF7B72\">&#x3C;/</span><span style=\"color:#E6EDF3\">span</span><span style=\"color:#FF7B72\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          )}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#FFA657\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#FFA657\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'time'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">operator</span><span style=\"color:#E6EDF3\"> === </span><span style=\"color:#A5D6FF\">'between'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> startTime</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (values[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> endTime</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (values[</span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex items-center\"</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filters-item\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            type</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"time\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">startTime</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> onChange</span><span style=\"color:#E6EDF3\">([e.target.value, endTime] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[])</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.className</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filters-between\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">filterFieldBetweenVariants</span><span style=\"color:#E6EDF3\">({ variant: context.variant, size: context.size })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">context.i18n.to</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            type</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"time\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">endTime</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> onChange</span><span style=\"color:#E6EDF3\">([startTime, e.target.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[])</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.className</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#FFA657\">FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">        type</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"time\"</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">        value</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{(values[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">] as string) || ''}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        onChange={(e) => onChange([e.target.value] as T[])}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        field={field}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className={field.className}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  if (field.type === 'datetime') {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    if (operator === 'between') {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      const startDateTime = (values[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">] as string) || '';</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      const endDateTime = (values[</span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">] as string) || '';</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      return (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;div className=\"flex items-center\" data-slot=\"filters-item\"></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            type=\"datetime-local\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            value={startDateTime}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            onChange={(e) => onChange([e.target.value, endDateTime] as T[])}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            className={cn('w-36', field.className)}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            field={field}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;div</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            data-slot=\"filters-between\"</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            className={filterFieldBetweenVariants({ variant: context.variant, size: context.size })}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            {context.i18n.to}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          &#x3C;/</span><span style=\"color:#E6EDF3\">div</span><span style=\"color:#FF7B72\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            type</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"datetime-local\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">endDateTime</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> onChange</span><span style=\"color:#E6EDF3\">([startDateTime, e.target.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[])</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-36'</span><span style=\"color:#E6EDF3\">, field.className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          /></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        &#x3C;/</span><span style=\"color:#E6EDF3\">div</span><span style=\"color:#FF7B72\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      );</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    return (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        type</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"datetime-local\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(values[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> onChange</span><span style=\"color:#E6EDF3\">([e.target.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[])</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-36'</span><span style=\"color:#E6EDF3\">, field.className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  if (['email', 'url', 'tel'].includes(field.type || '')) </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    const </span><span style=\"color:#D2A8FF\">getInputType</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      switch</span><span style=\"color:#E6EDF3\"> (field.type) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        case</span><span style=\"color:#A5D6FF\"> 'email'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#A5D6FF\"> 'email'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        case</span><span style=\"color:#A5D6FF\"> 'url'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#A5D6FF\"> 'url'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        case</span><span style=\"color:#A5D6FF\"> 'tel'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#A5D6FF\"> 'tel'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        default</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#A5D6FF\"> 'text'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    const </span><span style=\"color:#D2A8FF\">getPattern</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      switch</span><span style=\"color:#E6EDF3\"> (field.type) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        case</span><span style=\"color:#A5D6FF\"> 'email'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#A5D6FF\"> '^[^@</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">s]+@[^@</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">s]+</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">.[^@</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">s]+$'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        case</span><span style=\"color:#A5D6FF\"> 'url'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#A5D6FF\"> '^https?:</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">/</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">/(www</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">.)?[-a-zA-Z0-9@:%._</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">+~#=]{1,256}</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">.[a-zA-Z0-9()]{1,6}</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">b([-a-zA-Z0-9()@:%_</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">+.~#?&#x26;//=]*)$'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        case</span><span style=\"color:#A5D6FF\"> 'tel'</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#A5D6FF\"> '^[</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">+]?[1-9][</span><span style=\"color:#FF7B72\">\\\\</span><span style=\"color:#A5D6FF\">d]{0,15}$'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        default</span><span style=\"color:#E6EDF3\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        type</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">getInputType</span><span style=\"color:#E6EDF3\">()</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(values[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> onChange</span><span style=\"color:#E6EDF3\">([e.target.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[])</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        placeholder</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.placeholder </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> context.i18n.placeholders.</span><span style=\"color:#D2A8FF\">enterField</span><span style=\"color:#E6EDF3\">(field.type </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> 'text'</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        pattern</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.pattern </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#D2A8FF\"> getPattern</span><span style=\"color:#E6EDF3\">()</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.className</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    );</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  if (field.type === 'daterange') </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    const startDate </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> (values[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    const endDate </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> (values[</span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">filterFieldValueVariants</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          variant: context.variant,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          size: context.size,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          cursorPointer: context.cursorPointer,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          type</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"date\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">startDate</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> onChange</span><span style=\"color:#E6EDF3\">([e.target.value, endDate] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[])</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-24'</span><span style=\"color:#E6EDF3\">, field.className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filters-between\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">filterFieldBetweenVariants</span><span style=\"color:#E6EDF3\">({ variant: context.variant, size: context.size })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">context.i18n.to</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          type</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"date\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">endDate</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> onChange</span><span style=\"color:#E6EDF3\">([startDate, e.target.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[])</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-24'</span><span style=\"color:#E6EDF3\">, field.className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    );</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  // Handle different field types</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  if (field.type === 'text' || field.type === 'number') </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'number'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> operator </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'between'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      const minVal </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> (values[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      const maxVal </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> (values[</span><span style=\"color:#79C0FF\">1</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#FFA657\">div</span><span style=\"color:#FFA657\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex items-center\"</span><span style=\"color:#E6EDF3\"> data</span><span style=\"color:#FF7B72\">-</span><span style=\"color:#E6EDF3\">slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filters-item\"</span><span style=\"color:#FF7B72\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#FFA657\">FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            type</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"number\"</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            value</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{minVal}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            onChange</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{(e) => </span><span style=\"color:#D2A8FF\">onChange</span><span style=\"color:#E6EDF3\">([</span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">target</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">value</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">maxVal</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FFA657\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[])}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            placeholder</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{context.i18n.min}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-16'</span><span style=\"color:#E6EDF3\">, field.className)}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            min</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{field.min}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            max</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{field.max}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            step</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{field.step}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            pattern</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{field.pattern}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            field</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{field}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#FFA657\">div</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            data</span><span style=\"color:#E6EDF3\">-</span><span style=\"color:#FFA657\">slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filters-between\"</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{</span><span style=\"color:#D2A8FF\">filterFieldBetweenVariants</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">variant</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#FFA657\">context</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">variant</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">size</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#FFA657\">context</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">size</span><span style=\"color:#E6EDF3\"> })}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            {</span><span style=\"color:#FFA657\">context</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">i18n</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">to</span><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#FFA657\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#FFA657\">FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            type</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"number\"</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            value</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{maxVal}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            onChange</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{(e) => </span><span style=\"color:#D2A8FF\">onChange</span><span style=\"color:#E6EDF3\">([</span><span style=\"color:#FFA657\">minVal</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">target</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">value</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FFA657\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[])}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            placeholder</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{context.i18n.max}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-16'</span><span style=\"color:#E6EDF3\">, field.className)}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            min</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{field.min}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            max</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{field.max}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            step</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{field.step}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            pattern</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{field.pattern}</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">            field</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\">{field}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#FFA657\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex items-center\"</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filters-item\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          type</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'number'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#A5D6FF\"> 'number'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'text'</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(values[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> onChange</span><span style=\"color:#E6EDF3\">([e.target.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[])</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          placeholder</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.placeholder</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          min</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'number'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> field.min </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          max</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'number'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> field.max </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          step</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'number'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#E6EDF3\"> field.step </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> undefined</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          pattern</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.pattern</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">          className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-36'</span><span style=\"color:#E6EDF3\">, field.className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    );</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  if (field.type === 'date') </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">    return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">FilterInput</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        type</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"date\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(values[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">e</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> onChange</span><span style=\"color:#E6EDF3\">([e.target.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[])</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-16'</span><span style=\"color:#E6EDF3\">, field.className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    );</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  // For select and multiselect types, use the SelectOptionsPopover component</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  if (field.type === 'select' || field.type === 'multiselect') </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    return &#x3C;</span><span style=\"color:#7EE787\">SelectOptionsPopover</span><span style=\"color:#79C0FF\"> field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> values</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">values</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">onChange</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> />;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const isMultiSelect = values.length > 1;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const selectedOptions = field.options?.filter((opt) => values.includes(opt.value)) || [];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const unselectedOptions = field.options?.filter((opt) => !values.includes(opt.value)) || [];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  return (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">Popover</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      open</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">open</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      onOpenChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">open</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setOpen</span><span style=\"color:#E6EDF3\">(open);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">open) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">          setTimeout</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> setSearchInput</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">), </span><span style=\"color:#79C0FF\">200</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">PopoverTrigger</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">filterFieldValueVariants</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          variant: context.variant,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          size: context.size,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          cursorPointer: context.cursorPointer,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex gap-1.5 items-center\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">field.customValueRenderer </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            field.</span><span style=\"color:#D2A8FF\">customValueRenderer</span><span style=\"color:#E6EDF3\">(values, field.options </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> [])</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#E6EDF3\">selectedOptions.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"flex items-center -space-x-1.5\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  {</span><span style=\"color:#E6EDF3\">selectedOptions.</span><span style=\"color:#D2A8FF\">slice</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">3</span><span style=\"color:#E6EDF3\">).</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">option</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">String</span><span style=\"color:#E6EDF3\">(option.value)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">option.icon</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  ))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#E6EDF3\">selectedOptions.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ===</span><span style=\"color:#79C0FF\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                ?</span><span style=\"color:#E6EDF3\"> selectedOptions[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">].label</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                :</span><span style=\"color:#E6EDF3\"> selectedOptions.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  ?</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">selectedOptions</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#A5D6FF\">} ${</span><span style=\"color:#E6EDF3\">context</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#E6EDF3\">i18n</span><span style=\"color:#A5D6FF\">.</span><span style=\"color:#E6EDF3\">selectedCount</span><span style=\"color:#A5D6FF\">}`</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  :</span><span style=\"color:#E6EDF3\"> context.i18n.select</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;/></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">PopoverTrigger</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">PopoverContent</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-36 p-0'</span><span style=\"color:#E6EDF3\">, field.popoverContentClassName)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;</span><span style=\"color:#7EE787\">Command</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          {</span><span style=\"color:#E6EDF3\">field.searchable </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">CommandInput</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              placeholder</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">context.i18n.placeholders.</span><span style=\"color:#D2A8FF\">searchField</span><span style=\"color:#E6EDF3\">(field.label </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"h-9 text-sm\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">searchInput</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              onValueChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">setSearchInput</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">CommandList</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">CommandEmpty</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">context.i18n.noResultsFound</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">CommandEmpty</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#8B949E\">/* Selected items */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">selectedOptions.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                {</span><span style=\"color:#E6EDF3\">selectedOptions.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">option</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;</span><span style=\"color:#7EE787\">CommandItem</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">String</span><span style=\"color:#E6EDF3\">(option.value)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"group flex gap-2 items-center\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    onSelect</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                      if</span><span style=\"color:#E6EDF3\"> (isMultiSelect) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                        onChange</span><span style=\"color:#E6EDF3\">(values.</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">v</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> v </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#E6EDF3\"> option.value) </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                        onChange</span><span style=\"color:#E6EDF3\">([] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">isMultiSelect) </span><span style=\"color:#D2A8FF\">setOpen</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    {</span><span style=\"color:#E6EDF3\">option.icon </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> option.icon</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-accent-foreground truncate\"</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">option.label</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">Check</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-primary ms-auto\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;/</span><span style=\"color:#7EE787\">CommandItem</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                ))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;/</span><span style=\"color:#7EE787\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#8B949E\">/* Available items */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">unselectedOptions.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                {</span><span style=\"color:#E6EDF3\">selectedOptions.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">CommandSeparator</span><span style=\"color:#E6EDF3\"> /></span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;</span><span style=\"color:#7EE787\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  {</span><span style=\"color:#E6EDF3\">unselectedOptions.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">option</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">CommandItem</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                      key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">String</span><span style=\"color:#E6EDF3\">(option.value)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                      className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"group flex gap-2 items-center\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                      value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">option.label</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                      onSelect</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        if</span><span style=\"color:#E6EDF3\"> (isMultiSelect) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          const</span><span style=\"color:#79C0FF\"> newValues</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">values, option.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          if</span><span style=\"color:#E6EDF3\"> (field.maxSelections </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> newValues.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#E6EDF3\"> field.maxSelections) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                            return</span><span style=\"color:#E6EDF3\">; </span><span style=\"color:#8B949E\">// Don't exceed max selections</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          }</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                          onChange</span><span style=\"color:#E6EDF3\">(newValues);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                          onChange</span><span style=\"color:#E6EDF3\">([option.value] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                          setOpen</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                      {</span><span style=\"color:#E6EDF3\">option.icon </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> option.icon</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-accent-foreground truncate\"</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">option.label</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">Check</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"text-primary ms-auto opacity-0\"</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;/</span><span style=\"color:#7EE787\">CommandItem</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  ))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;/</span><span style=\"color:#7EE787\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;/></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">CommandList</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        &#x3C;/</span><span style=\"color:#7EE787\">Command</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">PopoverContent</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">Popover</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">export interface Filter&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  id: string;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  field: string;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  operator: string;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  values: </span><span style=\"color:#79C0FF\">T</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">export interface FilterGroup&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  id: string;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  label</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> string;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  filters: Filter</span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#79C0FF\">T</span><span style=\"color:#FF7B72\">></span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  fields: FilterFieldConfig</span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#79C0FF\">T</span><span style=\"color:#FF7B72\">></span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">// FiltersContent component for the filter panel content</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">interface FiltersContentProps&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  filters: Filter</span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#79C0FF\">T</span><span style=\"color:#FF7B72\">></span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  fields: FilterFieldsConfig</span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#79C0FF\">T</span><span style=\"color:#FF7B72\">></span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  onChange: (</span><span style=\"color:#FFA657\">filters</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Filter</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>[]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#FF7B72\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">export const FiltersContent = &#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> unknown,>({</span><span style=\"color:#FFA198;font-style:italic\"> filters,</span><span style=\"color:#FFA198;font-style:italic\"> fields,</span><span style=\"color:#79C0FF\"> onChange</span><span style=\"color:#FFA198;font-style:italic\"> }:</span><span style=\"color:#FFA198;font-style:italic\"> FiltersContentProps&#x3C;T>)</span><span style=\"color:#FFA198;font-style:italic\"> =></span><span style=\"color:#FF7B72\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const context </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useFilterContext</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const fieldsMap </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useMemo</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> getFieldsMap</span><span style=\"color:#E6EDF3\">(fields), [fields]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const updateFilter </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useCallback</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">filterId</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">updates</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Partial</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">Filter</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      onChange</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        filters.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">filter</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          if</span><span style=\"color:#E6EDF3\"> (filter.id </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> filterId) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            const</span><span style=\"color:#79C0FF\"> updatedFilter</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">filter, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">updates };</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">            // Clear values for empty/not empty operators</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            if</span><span style=\"color:#E6EDF3\"> (updates.operator </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'empty'</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> updates.operator </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'not_empty'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              updatedFilter.values </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            return</span><span style=\"color:#E6EDF3\"> updatedFilter;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#E6EDF3\"> filter;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [filters, onChange],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const removeFilter </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useCallback</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">filterId</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      onChange</span><span style=\"color:#E6EDF3\">(filters.</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">filter</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> filter.id </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#E6EDF3\"> filterId));</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [filters, onChange],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#D2A8FF\">filtersContainerVariants</span><span style=\"color:#E6EDF3\">({ variant: context.variant, size: context.size }), context.className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">filters.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">filter</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> field</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> fieldsMap[filter.field];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">field) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">filter.id</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">filterItemVariants</span><span style=\"color:#E6EDF3\">({ variant: context.variant })</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filter-item\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#8B949E\">/* Field Label */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">filterFieldLabelVariants</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                variant: context.variant,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                size: context.size,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                radius: context.radius,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#E6EDF3\">field.icon</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#E6EDF3\">field.label</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#8B949E\">/* Operator Dropdown */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">FilterOperatorDropdown</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              operator</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">filter.operator</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              values</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">filter.values</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">operator</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> updateFilter</span><span style=\"color:#E6EDF3\">(filter.id, { operator })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            /></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#8B949E\">/* Value Selector */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">FilterValueSelector</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              values</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">filter.values</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">values</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> updateFilter</span><span style=\"color:#E6EDF3\">(filter.id, { values })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">              operator</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">filter.operator</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            /></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#8B949E\">/* Remove Button */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">FilterRemoveButton</span><span style=\"color:#79C0FF\"> onClick</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> removeFilter</span><span style=\"color:#E6EDF3\">(filter.id)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span><span style=\"color:#FFA198;font-style:italic\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">interface</span><span style=\"color:#FFA198;font-style:italic\"> FiltersProps&#x3C;T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  filters: Filter</span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#79C0FF\">T</span><span style=\"color:#FF7B72\">></span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  fields: FilterFieldsConfig</span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#79C0FF\">T</span><span style=\"color:#FF7B72\">></span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  onChange: (</span><span style=\"color:#FFA657\">filters</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Filter</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>[]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#FF7B72\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> string;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  showAddButton</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> boolean;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addButtonText</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> string;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addButtonIcon</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> React.ReactNode;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addButtonClassName</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> string;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addButton</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> React.ReactNode;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  variant</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#A5D6FF\"> 'solid'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'outline'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  size</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#A5D6FF\"> 'sm'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'lg'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  radius</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'full'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  i18n</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> Partial</span><span style=\"color:#FF7B72\">&#x3C;</span><span style=\"color:#E6EDF3\">FilterI18nConfig</span><span style=\"color:#FF7B72\">></span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  showSearchInput</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> boolean;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  cursorPointer</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> boolean;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  trigger</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> React.ReactNode;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  allowMultiple</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> boolean;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  popoverContentClassName</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> string;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">export function Filters&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  filters,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  fields,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  onChange,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  showAddButton </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addButtonText,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addButtonIcon,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addButtonClassName,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  addButton,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  variant </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\"> 'outline'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  size </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  radius </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  i18n,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  showSearchInput </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  cursorPointer </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  trigger,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  allowMultiple </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  popoverContentClassName,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">: FiltersProps&#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#E6EDF3\">>) </span><span style=\"color:#FF7B72\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const [addFilterOpen, setAddFilterOpen] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const [selectedFieldForOptions, setSelectedFieldForOptions] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">FilterFieldConfig</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">> </span><span style=\"color:#FF7B72\">|</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const [tempSelectedValues, setTempSelectedValues] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useState</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#79C0FF\">unknown</span><span style=\"color:#E6EDF3\">[]>([]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Merge provided i18n with defaults</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const mergedI18n: FilterI18nConfig </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    ...</span><span style=\"color:#79C0FF\">DEFAULT_I18N</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    ...</span><span style=\"color:#E6EDF3\">i18n,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    operators: {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      ...</span><span style=\"color:#79C0FF\">DEFAULT_I18N</span><span style=\"color:#E6EDF3\">.operators,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      ...</span><span style=\"color:#E6EDF3\">i18n?.operators,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    placeholders: {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      ...</span><span style=\"color:#79C0FF\">DEFAULT_I18N</span><span style=\"color:#E6EDF3\">.placeholders,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      ...</span><span style=\"color:#E6EDF3\">i18n?.placeholders,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    validation: {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      ...</span><span style=\"color:#79C0FF\">DEFAULT_I18N</span><span style=\"color:#E6EDF3\">.validation,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      ...</span><span style=\"color:#E6EDF3\">i18n?.validation,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const fieldsMap </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useMemo</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> getFieldsMap</span><span style=\"color:#E6EDF3\">(fields), [fields]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const updateFilter </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useCallback</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">filterId</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">updates</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> Partial</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">Filter</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>>) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      onChange</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        filters.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">filter</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          if</span><span style=\"color:#E6EDF3\"> (filter.id </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> filterId) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            const</span><span style=\"color:#79C0FF\"> updatedFilter</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">filter, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">updates };</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">            // Clear values for empty/not empty operators</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            if</span><span style=\"color:#E6EDF3\"> (updates.operator </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'empty'</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> updates.operator </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'not_empty'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              updatedFilter.values </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            return</span><span style=\"color:#E6EDF3\"> updatedFilter;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#E6EDF3\"> filter;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [filters, onChange],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const removeFilter </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useCallback</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">filterId</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      onChange</span><span style=\"color:#E6EDF3\">(filters.</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">filter</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> filter.id </span><span style=\"color:#FF7B72\">!==</span><span style=\"color:#E6EDF3\"> filterId));</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [filters, onChange],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const addFilter </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useCallback</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">fieldKey</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> field</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> fieldsMap[fieldKey];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (field </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> field.key) {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">        // For select and multiselect types, show options directly</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'select'</span><span style=\"color:#FF7B72\"> ||</span><span style=\"color:#E6EDF3\"> field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'multiselect'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">          setSelectedFieldForOptions</span><span style=\"color:#E6EDF3\">(field);</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">          // For multiselect, check if there's already a filter and use its values</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> existingFilter</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> filters.</span><span style=\"color:#D2A8FF\">find</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">f</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> f.field </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> fieldKey);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> initialValues</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'multiselect'</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> existingFilter </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> existingFilter.values </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> [];</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">          setTempSelectedValues</span><span style=\"color:#E6EDF3\">(initialValues);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">        // For other types, add filter directly</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> defaultOperator</span><span style=\"color:#FF7B72\"> =</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'daterange'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            ?</span><span style=\"color:#A5D6FF\"> 'between'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            :</span><span style=\"color:#E6EDF3\"> field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'numberrange'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              ?</span><span style=\"color:#A5D6FF\"> 'between'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              :</span><span style=\"color:#E6EDF3\"> field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'boolean'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                ?</span><span style=\"color:#A5D6FF\"> 'is'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                :</span><span style=\"color:#A5D6FF\"> 'is'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        let</span><span style=\"color:#E6EDF3\"> defaultValues</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">[] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> ([</span><span style=\"color:#A5D6FF\">'text'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'number'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'date'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'email'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'url'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'tel'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'time'</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">'datetime'</span><span style=\"color:#E6EDF3\">].</span><span style=\"color:#D2A8FF\">includes</span><span style=\"color:#E6EDF3\">(field.type </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          defaultValues </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'daterange'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          defaultValues </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'numberrange'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          defaultValues </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [field.min </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">, field.max </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#79C0FF\"> 100</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'boolean'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          defaultValues </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'time'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          defaultValues </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#FF7B72\"> if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'datetime'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          defaultValues </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#A5D6FF\">''</span><span style=\"color:#E6EDF3\">] </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">[];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> newFilter</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> createFilter</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>(fieldKey, defaultOperator, defaultValues </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> newFilters</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">filters, newFilter];</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        onChange</span><span style=\"color:#E6EDF3\">(newFilters);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setAddFilterOpen</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [fieldsMap, filters, onChange],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const addFilterWithOption </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useCallback</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    (</span><span style=\"color:#FFA657\">field</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> FilterFieldConfig</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>, </span><span style=\"color:#FFA657\">values</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">[], </span><span style=\"color:#FFA657\">closePopover</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">field.key) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      const</span><span style=\"color:#79C0FF\"> defaultOperator</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'multiselect'</span><span style=\"color:#FF7B72\"> ?</span><span style=\"color:#A5D6FF\"> 'is_any_of'</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> 'is'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // If allowMultiple is true, always create a new filter</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (allowMultiple) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> newFilter</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> createFilter</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>(field.key, defaultOperator, values </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> newFilters</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">filters, newFilter];</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        onChange</span><span style=\"color:#E6EDF3\">(newFilters);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">        // Check if there's already a filter for this field</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        const</span><span style=\"color:#79C0FF\"> existingFilterIndex</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> filters.</span><span style=\"color:#D2A8FF\">findIndex</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">f</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> f.field </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> field.key);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        if</span><span style=\"color:#E6EDF3\"> (existingFilterIndex </span><span style=\"color:#FF7B72\">>=</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'multiselect'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">          // Update existing multiselect filter</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> updatedFilters</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">filters];</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          updatedFilters[existingFilterIndex] </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            ...</span><span style=\"color:#E6EDF3\">updatedFilters[existingFilterIndex],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            values: values </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          };</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">          onChange</span><span style=\"color:#E6EDF3\">(updatedFilters);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">          // Create new filter</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> newFilter</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> createFilter</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>(field.key, defaultOperator, values </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> newFilters</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> [</span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">filters, newFilter];</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">          onChange</span><span style=\"color:#E6EDF3\">(newFilters);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (closePopover) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setAddFilterOpen</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setSelectedFieldForOptions</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setTempSelectedValues</span><span style=\"color:#E6EDF3\">([]);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      } </span><span style=\"color:#FF7B72\">else</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">        // For multiselect, keep popover open but update temp values</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        setTempSelectedValues</span><span style=\"color:#E6EDF3\">(values </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">[]);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    [filters, onChange, allowMultiple],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  const selectableFields </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useMemo</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> flatFields</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> flattenFields</span><span style=\"color:#E6EDF3\">(fields);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> flatFields.</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">field</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Only include actual filterable fields (must have key and type)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">field.key </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'separator'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // If allowMultiple is true, don't filter out fields that already have filters</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (allowMultiple) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        return</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">      // Filter out fields that already have filters (default behavior)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      return</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">filters.</span><span style=\"color:#D2A8FF\">some</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">filter</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> filter.field </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> field.key);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    });</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [fields, filters, allowMultiple]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">FilterContext.Provider</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        variant,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        size,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        radius,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        i18n: mergedI18n,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        cursorPointer,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        showAddButton,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        addButtonText,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        addButtonIcon,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        addButtonClassName,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        addButton,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        showSearchInput,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        trigger,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        allowMultiple,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#D2A8FF\">filtersContainerVariants</span><span style=\"color:#E6EDF3\">({ variant, size }), className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">showAddButton </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> selectableFields.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ></span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#FF7B72\"> &#x26;&#x26;</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;</span><span style=\"color:#7EE787\">Popover</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            open</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">addFilterOpen</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">            onOpenChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">open</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">              setAddFilterOpen</span><span style=\"color:#E6EDF3\">(open);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">open) {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                setSelectedFieldForOptions</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                setTempSelectedValues</span><span style=\"color:#E6EDF3\">([]);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          ></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">PopoverTrigger</span><span style=\"color:#79C0FF\"> asChild</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#E6EDF3\">addButton </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                addButton</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;</span><span style=\"color:#7EE787\">button</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                  className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                    filterAddButtonVariants</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      variant: variant,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      size: size,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      cursorPointer: cursorPointer,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      radius: radius,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    }),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    addButtonClassName,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                  title</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">mergedI18n.addFilterTitle</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  {</span><span style=\"color:#E6EDF3\">addButtonIcon </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">Plus</span><span style=\"color:#E6EDF3\"> /></span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  {</span><span style=\"color:#E6EDF3\">addButtonText </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#E6EDF3\"> mergedI18n.addFilter</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                &#x3C;/</span><span style=\"color:#7EE787\">button</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;/</span><span style=\"color:#7EE787\">PopoverTrigger</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">PopoverContent</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'w-[200px] p-0'</span><span style=\"color:#E6EDF3\">, popoverContentClassName)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> align</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"start\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">Command</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                {</span><span style=\"color:#E6EDF3\">selectedFieldForOptions </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                  // Show original select/multiselect rendering without back button</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;</span><span style=\"color:#7EE787\">SelectOptionsPopover</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">selectedFieldForOptions</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    values</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">tempSelectedValues </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> T</span><span style=\"color:#E6EDF3\">[]</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">values</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                      // For multiselect, create filter immediately but keep popover open</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                      // For single select, create filter and close popover</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                      const</span><span style=\"color:#79C0FF\"> shouldClosePopover</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> selectedFieldForOptions.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'select'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">                      addFilterWithOption</span><span style=\"color:#E6EDF3\">(selectedFieldForOptions, values </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#79C0FF\"> unknown</span><span style=\"color:#E6EDF3\">[], shouldClosePopover);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    }</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    onClose</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> setAddFilterOpen</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#79C0FF\">false</span><span style=\"color:#E6EDF3\">)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                    inline</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#79C0FF\">true</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                ) </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                  // Show field selection</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    {</span><span style=\"color:#E6EDF3\">showSearchInput </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">CommandInput</span><span style=\"color:#79C0FF\"> placeholder</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">mergedI18n.searchFields</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"h-9\"</span><span style=\"color:#E6EDF3\"> /></span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;</span><span style=\"color:#7EE787\">CommandList</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      &#x3C;</span><span style=\"color:#7EE787\">CommandEmpty</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">mergedI18n.noFieldsFound</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">CommandEmpty</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                      {</span><span style=\"color:#E6EDF3\">fields.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">item</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">index</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                        // Handle grouped fields (FilterFieldGroup structure)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#D2A8FF\">isFieldGroup</span><span style=\"color:#E6EDF3\">(item)) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          const</span><span style=\"color:#79C0FF\"> groupFields</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> item.fields.</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">field</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                            // Include separators and labels for display</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                            if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'separator'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                              return</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                            }</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                            // If allowMultiple is true, don't filter out fields that already have filters</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                            if</span><span style=\"color:#E6EDF3\"> (allowMultiple) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                              return</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                            }</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                            // Filter out fields that already have filters (default behavior)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                            return</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">filters.</span><span style=\"color:#D2A8FF\">some</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">filter</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> filter.field </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> field.key);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          if</span><span style=\"color:#E6EDF3\"> (groupFields.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ===</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                            &#x3C;</span><span style=\"color:#7EE787\">CommandGroup</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#A5D6FF\">`group-${</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#A5D6FF\">}`</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> heading</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">item.group </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> 'Fields'</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                              {</span><span style=\"color:#E6EDF3\">groupFields.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">field</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">fieldIndex</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                                // Handle separator</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                                if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'separator'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                                  return</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">CommandSeparator</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#A5D6FF\">`separator-${</span><span style=\"color:#E6EDF3\">fieldIndex</span><span style=\"color:#A5D6FF\">}`</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> />;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                                }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                                // Regular field</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                                return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                                  &#x3C;</span><span style=\"color:#7EE787\">CommandItem</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.key</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> onSelect</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> field.key </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#D2A8FF\"> addFilter</span><span style=\"color:#E6EDF3\">(field.key)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                                    {</span><span style=\"color:#E6EDF3\">field.icon</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                                    &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">field.label</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                                  &#x3C;/</span><span style=\"color:#7EE787\">CommandItem</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                                );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                              })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                            &#x3C;/</span><span style=\"color:#7EE787\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                        // Handle group-level fields (new FilterFieldConfig structure with group property)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#D2A8FF\">isGroupLevelField</span><span style=\"color:#E6EDF3\">(item)) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          const</span><span style=\"color:#79C0FF\"> groupFields</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> item.fields</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#D2A8FF\">filter</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">field</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                            // Include separators and labels for display</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                            if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'separator'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                              return</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                            }</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                            // If allowMultiple is true, don't filter out fields that already have filters</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                            if</span><span style=\"color:#E6EDF3\"> (allowMultiple) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                              return</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                            }</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                            // Filter out fields that already have filters (default behavior)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                            return</span><span style=\"color:#FF7B72\"> !</span><span style=\"color:#E6EDF3\">filters.</span><span style=\"color:#D2A8FF\">some</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">filter</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> filter.field </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#E6EDF3\"> field.key);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          if</span><span style=\"color:#E6EDF3\"> (groupFields.</span><span style=\"color:#79C0FF\">length</span><span style=\"color:#FF7B72\"> ===</span><span style=\"color:#79C0FF\"> 0</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                            &#x3C;</span><span style=\"color:#7EE787\">CommandGroup</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#A5D6FF\">`group-${</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#A5D6FF\">}`</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> heading</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">item.group </span><span style=\"color:#FF7B72\">||</span><span style=\"color:#A5D6FF\"> 'Fields'</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                              {</span><span style=\"color:#E6EDF3\">groupFields.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">field</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">fieldIndex</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                                // Handle separator</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                                if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'separator'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                                  return</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">CommandSeparator</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#A5D6FF\">`separator-${</span><span style=\"color:#E6EDF3\">fieldIndex</span><span style=\"color:#A5D6FF\">}`</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> />;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                                }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                                // Regular field</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                                return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                                  &#x3C;</span><span style=\"color:#7EE787\">CommandItem</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.key</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> onSelect</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> field.key </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#D2A8FF\"> addFilter</span><span style=\"color:#E6EDF3\">(field.key)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                                    {</span><span style=\"color:#E6EDF3\">field.icon</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                                    &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">field.label</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                                  &#x3C;/</span><span style=\"color:#7EE787\">CommandItem</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                                );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                              })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                            &#x3C;/</span><span style=\"color:#7EE787\">CommandGroup</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                        // Handle flat field configuration (backward compatibility)</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        const</span><span style=\"color:#79C0FF\"> field</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> item </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> FilterFieldConfig</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">>;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                        // Handle separator</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        if</span><span style=\"color:#E6EDF3\"> (field.type </span><span style=\"color:#FF7B72\">===</span><span style=\"color:#A5D6FF\"> 'separator'</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                          return</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">CommandSeparator</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#A5D6FF\">`separator-${</span><span style=\"color:#E6EDF3\">index</span><span style=\"color:#A5D6FF\">}`</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> />;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">                        // Regular field</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                        return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          &#x3C;</span><span style=\"color:#7EE787\">CommandItem</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field.key</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> onSelect</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> field.key </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#D2A8FF\"> addFilter</span><span style=\"color:#E6EDF3\">(field.key)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                            {</span><span style=\"color:#E6EDF3\">field.icon</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                            &#x3C;</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span><span style=\"color:#FF7B72\">{</span><span style=\"color:#E6EDF3\">field.label</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">&#x3C;/</span><span style=\"color:#7EE787\">span</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                          &#x3C;/</span><span style=\"color:#7EE787\">CommandItem</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                        );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                      })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                    &#x3C;/</span><span style=\"color:#7EE787\">CommandList</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  &#x3C;/></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;/</span><span style=\"color:#7EE787\">Command</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;/</span><span style=\"color:#7EE787\">PopoverContent</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/</span><span style=\"color:#7EE787\">Popover</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">filters.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">filter</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          const</span><span style=\"color:#79C0FF\"> field</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> fieldsMap[filter.field];</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">field) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">          return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">filter.id</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">filterItemVariants</span><span style=\"color:#E6EDF3\">({ variant })</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"filter-item\"</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#8B949E\">/* Field Label */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">filterFieldLabelVariants</span><span style=\"color:#E6EDF3\">({ variant: variant, size: size, radius: radius })</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                {</span><span style=\"color:#E6EDF3\">field.icon</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                {</span><span style=\"color:#E6EDF3\">field.label</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#8B949E\">/* Operator Dropdown */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">FilterOperatorDropdown</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                operator</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">filter.operator</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                values</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">filter.values</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">operator</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> updateFilter</span><span style=\"color:#E6EDF3\">(filter.id, { operator })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              /></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#8B949E\">/* Value Selector */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">FilterValueSelector</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">T</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                field</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">field</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                values</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">filter.values</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                onChange</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#FFA657\">values</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> updateFilter</span><span style=\"color:#E6EDF3\">(filter.id, { values })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                operator</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">filter.operator</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              /></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">              {</span><span style=\"color:#8B949E\">/* Remove Button */</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">FilterRemoveButton</span><span style=\"color:#79C0FF\"> onClick</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#D2A8FF\"> removeFilter</span><span style=\"color:#E6EDF3\">(filter.id)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        })</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">FilterContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">export const createFilter = &#x3C;</span><span style=\"color:#7EE787\">T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> unknown,>(field:</span><span style=\"color:#FFA198;font-style:italic\"> string,</span><span style=\"color:#FFA198;font-style:italic\"> operator?:</span><span style=\"color:#FFA198;font-style:italic\"> string,</span><span style=\"color:#FFA198;font-style:italic\"> values:</span><span style=\"color:#FFA198;font-style:italic\"> T[]</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> []):</span><span style=\"color:#FFA198;font-style:italic\"> Filter&#x3C;T></span><span style=\"color:#FFA198;font-style:italic\"> =></span><span style=\"color:#FFA198;font-style:italic\"> ({</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  id:</span><span style=\"color:#FFA198;font-style:italic\"> `${Date.now()}-${Math.random().toString(36).substring(2,</span><span style=\"color:#FFA198;font-style:italic\"> 11)}`,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  field,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  operator:</span><span style=\"color:#79C0FF\"> operator</span><span style=\"color:#FFA198;font-style:italic\"> ||</span><span style=\"color:#A5D6FF\"> 'is'</span><span style=\"color:#FFA198;font-style:italic\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  values,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">export</span><span style=\"color:#79C0FF\"> const</span><span style=\"color:#79C0FF\"> createFilterGroup</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> &#x3C;T</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> unknown,>(</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  id:</span><span style=\"color:#FFA198;font-style:italic\"> string,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  label:</span><span style=\"color:#FFA198;font-style:italic\"> string,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  fields:</span><span style=\"color:#FFA198;font-style:italic\"> FilterFieldConfig&#x3C;T>[],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  initialFilters:</span><span style=\"color:#FFA198;font-style:italic\"> Filter&#x3C;T>[]</span><span style=\"color:#FFA198;font-style:italic\"> =</span><span style=\"color:#FFA198;font-style:italic\"> [],</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">):</span><span style=\"color:#FFA198;font-style:italic\"> FilterGroup&#x3C;T></span><span style=\"color:#FFA198;font-style:italic\"> =></span><span style=\"color:#FFA198;font-style:italic\"> ({</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  id,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  label,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  filters:</span><span style=\"color:#FFA198;font-style:italic\"> initialFilters,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">  fields,</span></span>\n<span class=\"line\"><span style=\"color:#FFA198;font-style:italic\">});</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/filters.tsx",
    "timestamp": "2025-10-13T18:43:11.502Z"
  }
}