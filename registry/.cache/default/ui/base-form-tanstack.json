{
  "base-form-tanstack": {
    "code": "'use client';\n\nimport * as React from 'react';\nimport { Label } from '@/components/ui/base-label';\nimport { useRender } from '@base-ui-components/react/use-render';\nimport { createFormHookContexts, createFormHook as createTanstackFormHook } from '@tanstack/react-form';\nimport { cn } from '@/lib/utils';\n\nconst { fieldContext, formContext, useFieldContext } = createFormHookContexts();\n\nconst useFormField = () => {\n  const itemContext = React.useContext(FormItemContext);\n  const fieldContext = useFieldContext();\n\n  if (!fieldContext) {\n    throw new Error('useFormField should be used within <field.Container>');\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldContext.state.meta,\n  };\n};\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>({} as FormItemContextValue);\n\nfunction FormItem({ className, ...props }: React.ComponentProps<'div'>) {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div data-slot=\"form-item\" className={cn('grid gap-2', className)} {...props} />\n    </FormItemContext.Provider>\n  );\n}\n\nfunction FieldLabel({ className, ...props }: React.ComponentProps<typeof Label>) {\n  const { formItemId, isValid } = useFormField();\n\n  return (\n    <Label\n      data-slot=\"field-label\"\n      data-error={!isValid}\n      className={cn('data-[error=true]:text-destructive', className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  );\n}\n\nfunction FieldControl({ children = <div /> }: { children?: useRender.RenderProp }) {\n  const { formItemId, isValid, formDescriptionId, formMessageId } = useFormField();\n\n  return useRender({\n    render: children,\n    props: {\n      'data-slot': 'field-control',\n      id: formItemId,\n      'aria-describedby': isValid ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`,\n      'aria-invalid': !isValid,\n    },\n  });\n}\n\nfunction FieldDescription({ className, ...props }: React.ComponentProps<'p'>) {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      data-slot=\"field-description\"\n      id={formDescriptionId}\n      className={cn('text-muted-foreground text-sm', className)}\n      {...props}\n    />\n  );\n}\n\nfunction FieldMessage({ className, ...props }: React.ComponentProps<'p'>) {\n  const { formMessageId, isValid, errors } = useFormField();\n\n  if (props.children) return props.children;\n\n  const body = isValid ? props.children : String(errors.map((error) => error.message).join(', ') ?? '');\n\n  if (!body) return null;\n\n  return (\n    <p data-slot=\"field-message\" id={formMessageId} className={cn('text-destructive text-sm', className)} {...props}>\n      {body}\n    </p>\n  );\n}\n\nconst createFormHook = (args?: Parameters<typeof createTanstackFormHook>[0]) => {\n  const formHook = createTanstackFormHook({\n    fieldComponents: {\n      ...args?.fieldComponents,\n      Label: FieldLabel,\n      Control: FieldControl,\n      Description: FieldDescription,\n      Message: FieldMessage,\n    },\n    formComponents: { ...args?.formComponents, Item: FormItem },\n    fieldContext,\n    formContext,\n  });\n\n  return formHook;\n};\n\nexport { createFormHook };\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#A5D6FF\">'use client'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#79C0FF\"> *</span><span style=\"color:#FF7B72\"> as</span><span style=\"color:#E6EDF3\"> React </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Label } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/components/ui/base-label'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { useRender } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@base-ui-components/react/use-render'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { createFormHookContexts, createFormHook </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#E6EDF3\"> createTanstackFormHook } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@tanstack/react-form'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">fieldContext</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">formContext</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">useFieldContext</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> createFormHookContexts</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#D2A8FF\"> useFormField</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> itemContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(FormItemContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> fieldContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useFieldContext</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">fieldContext) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    throw</span><span style=\"color:#FF7B72\"> new</span><span style=\"color:#D2A8FF\"> Error</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'useFormField should be used within &#x3C;field.Container>'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">id</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#E6EDF3\"> itemContext;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    id,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    name: fieldContext.name,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    formItemId: </span><span style=\"color:#A5D6FF\">`${</span><span style=\"color:#E6EDF3\">id</span><span style=\"color:#A5D6FF\">}-form-item`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    formDescriptionId: </span><span style=\"color:#A5D6FF\">`${</span><span style=\"color:#E6EDF3\">id</span><span style=\"color:#A5D6FF\">}-form-item-description`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    formMessageId: </span><span style=\"color:#A5D6FF\">`${</span><span style=\"color:#E6EDF3\">id</span><span style=\"color:#A5D6FF\">}-form-item-message`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    ...</span><span style=\"color:#E6EDF3\">fieldContext.state.meta,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  };</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">type</span><span style=\"color:#FFA657\"> FormItemContextValue</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  id</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> FormItemContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">createContext</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">FormItemContextValue</span><span style=\"color:#E6EDF3\">>({} </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> FormItemContextValue</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> FormItem</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> id</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useId</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">FormItemContext.Provider</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ id }</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"form-item\"</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'grid gap-2'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FF7B72\"> {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\"> /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">FormItemContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> FieldLabel</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> Label>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">formItemId</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isValid</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useFormField</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">Label</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"field-label\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-error</span><span style=\"color:#FF7B72\">={!</span><span style=\"color:#E6EDF3\">isValid</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'data-[error=true]:text-destructive'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      htmlFor</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">formItemId</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> FieldControl</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">children</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\"> /> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#FFA657\">children</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> useRender</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">RenderProp</span><span style=\"color:#E6EDF3\"> }) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">formItemId</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isValid</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">formDescriptionId</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">formMessageId</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useFormField</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#D2A8FF\"> useRender</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    render: children,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    props: {</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">      'data-slot'</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#A5D6FF\">'field-control'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      id: formItemId,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">      'aria-describedby'</span><span style=\"color:#E6EDF3\">: isValid </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">formDescriptionId</span><span style=\"color:#A5D6FF\">}`</span><span style=\"color:#FF7B72\"> :</span><span style=\"color:#A5D6FF\"> `${</span><span style=\"color:#E6EDF3\">formDescriptionId</span><span style=\"color:#A5D6FF\">} ${</span><span style=\"color:#E6EDF3\">formMessageId</span><span style=\"color:#A5D6FF\">}`</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">      'aria-invalid'</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">isValid,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  });</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> FieldDescription</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'p'</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">formDescriptionId</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useFormField</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">p</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"field-description\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      id</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">formDescriptionId</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'text-muted-foreground text-sm'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> FieldMessage</span><span style=\"color:#E6EDF3\">({ </span><span style=\"color:#FFA657\">className</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#FFA657\">props</span><span style=\"color:#E6EDF3\"> }</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'p'</span><span style=\"color:#E6EDF3\">>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#E6EDF3\"> { </span><span style=\"color:#79C0FF\">formMessageId</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">isValid</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#79C0FF\">errors</span><span style=\"color:#E6EDF3\"> } </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#D2A8FF\"> useFormField</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (props.children) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\"> props.children;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> body</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> isValid </span><span style=\"color:#FF7B72\">?</span><span style=\"color:#E6EDF3\"> props.children </span><span style=\"color:#FF7B72\">:</span><span style=\"color:#D2A8FF\"> String</span><span style=\"color:#E6EDF3\">(errors.</span><span style=\"color:#D2A8FF\">map</span><span style=\"color:#E6EDF3\">((</span><span style=\"color:#FFA657\">error</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> error.message).</span><span style=\"color:#D2A8FF\">join</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">', '</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#A5D6FF\"> ''</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">body) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#79C0FF\"> null</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">p</span><span style=\"color:#79C0FF\"> data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"field-message\"</span><span style=\"color:#79C0FF\"> id</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">formMessageId</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#79C0FF\"> className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'text-destructive text-sm'</span><span style=\"color:#E6EDF3\">, className)</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#FF7B72\"> {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">body</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">p</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#D2A8FF\"> createFormHook</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FFA657\">args</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#FFA657\"> Parameters</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> createTanstackFormHook>[</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#E6EDF3\">]) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> formHook</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> createTanstackFormHook</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    fieldComponents: {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      ...</span><span style=\"color:#E6EDF3\">args?.fieldComponents,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      Label: FieldLabel,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      Control: FieldControl,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      Description: FieldDescription,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      Message: FieldMessage,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    formComponents: { </span><span style=\"color:#FF7B72\">...</span><span style=\"color:#E6EDF3\">args?.formComponents, Item: FormItem },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    fieldContext,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    formContext,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> formHook;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> { createFormHook };</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/base-form-tanstack.tsx",
    "timestamp": "2025-10-13T19:01:24.305Z"
  }
}