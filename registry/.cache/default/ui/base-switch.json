{
  "base-switch": {
    "code": "import * as React from 'react';\nimport { Switch as SwitchPrimitive } from '@base-ui-components/react/switch';\nimport { cva, VariantProps } from 'class-variance-authority';\nimport { cn } from '@/lib/utils';\n\n// Define a context for `size` state\nconst SwitchContext = React.createContext<{ size: 'sm' | 'md' | 'lg' }>({\n  size: 'md',\n});\n\nconst useSwitchContext = () => {\n  const context = React.useContext(SwitchContext);\n  if (!context) {\n    throw new Error('SwitchThumb must be used within a Switch component');\n  }\n  return context;\n};\n\n// Define the variants for the Switch using cva.\nconst switchVariants = cva(\n  `\n    peer data-[checked]:bg-primary data-[unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[unchecked]:bg-input/80 \n    aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n    inline-flex shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] \n    disabled:cursor-not-allowed disabled:opacity-50\n  `,\n  {\n    variants: {\n      size: {\n        sm: 'h-4 w-6',\n        md: 'h-5 w-8',\n        lg: 'h-6 w-10',\n      },\n    },\n    defaultVariants: {\n      size: 'md',\n    },\n  },\n);\n\nconst switchThumbVariants = cva(\n  'bg-background dark:data-[unchecked]:bg-foreground dark:data-[checked]:bg-primary-foreground pointer-events-none rounded-full ring-0 transition-transform flex items-center justify-center',\n  {\n    variants: {\n      size: {\n        sm: 'size-3 data-[checked]:translate-x-[calc(100%-2px)] data-[unchecked]:translate-x-0',\n        md: 'size-4 data-[checked]:translate-x-[calc(100%-2px)] data-[unchecked]:translate-x-0',\n        lg: 'size-5 data-[checked]:translate-x-[calc(100%-2px)] data-[unchecked]:translate-x-0',\n      },\n    },\n    defaultVariants: {\n      size: 'md',\n    },\n  },\n);\n\nfunction Switch({\n  className,\n  children,\n  size = 'md',\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root> & VariantProps<typeof switchVariants>) {\n  const effectiveSize = size ?? 'md';\n  return (\n    <SwitchContext.Provider value={{ size: effectiveSize }}>\n      <SwitchPrimitive.Root\n        data-slot=\"switch\"\n        className={cn(switchVariants({ size: effectiveSize }), className)}\n        {...props}\n      >\n        {children ?? <SwitchThumb />}\n      </SwitchPrimitive.Root>\n    </SwitchContext.Provider>\n  );\n}\n\nfunction SwitchThumb({\n  className,\n  size,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Thumb> & Partial<VariantProps<typeof switchThumbVariants>>) {\n  const context = useSwitchContext();\n  const effectiveSize = size ?? context.size;\n\n  return (\n    <SwitchPrimitive.Thumb\n      data-slot=\"switch-thumb\"\n      className={cn(switchThumbVariants({ size: effectiveSize }), className)}\n      {...props}\n    />\n  );\n}\n\nexport { Switch, SwitchThumb, switchVariants };\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#79C0FF\"> *</span><span style=\"color:#FF7B72\"> as</span><span style=\"color:#E6EDF3\"> React </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { Switch </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#E6EDF3\"> SwitchPrimitive } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@base-ui-components/react/switch'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cva, VariantProps } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'class-variance-authority'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Define a context for `size` state</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> SwitchContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">createContext</span><span style=\"color:#E6EDF3\">&#x3C;{ </span><span style=\"color:#FFA657\">size</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#A5D6FF\"> 'sm'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'lg'</span><span style=\"color:#E6EDF3\"> }>({</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#D2A8FF\"> useSwitchContext</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> context</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> React.</span><span style=\"color:#D2A8FF\">useContext</span><span style=\"color:#E6EDF3\">(SwitchContext);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">context) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    throw</span><span style=\"color:#FF7B72\"> new</span><span style=\"color:#D2A8FF\"> Error</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'SwitchThumb must be used within a Switch component'</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> context;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8B949E\">// Define the variants for the Switch using cva.</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> switchVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">  `</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    peer data-[checked]:bg-primary data-[unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[unchecked]:bg-input/80 </span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    inline-flex shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] </span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">    disabled:cursor-not-allowed disabled:opacity-50</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">  `</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        sm: </span><span style=\"color:#A5D6FF\">'h-4 w-6'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        md: </span><span style=\"color:#A5D6FF\">'h-5 w-8'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        lg: </span><span style=\"color:#A5D6FF\">'h-6 w-10'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">const</span><span style=\"color:#79C0FF\"> switchThumbVariants</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> cva</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">  'bg-background dark:data-[unchecked]:bg-foreground dark:data-[checked]:bg-primary-foreground pointer-events-none rounded-full ring-0 transition-transform flex items-center justify-center'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    variants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        sm: </span><span style=\"color:#A5D6FF\">'size-3 data-[checked]:translate-x-[calc(100%-2px)] data-[unchecked]:translate-x-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        md: </span><span style=\"color:#A5D6FF\">'size-4 data-[checked]:translate-x-[calc(100%-2px)] data-[unchecked]:translate-x-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        lg: </span><span style=\"color:#A5D6FF\">'size-5 data-[checked]:translate-x-[calc(100%-2px)] data-[unchecked]:translate-x-0'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    defaultVariants: {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      size: </span><span style=\"color:#A5D6FF\">'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> Switch</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  size</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> SwitchPrimitive.Root> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#FFA657\"> VariantProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> switchVariants>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> effectiveSize</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> size </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#A5D6FF\"> 'md'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">SwitchContext.Provider</span><span style=\"color:#79C0FF\"> value</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">{ size: effectiveSize }</span><span style=\"color:#FF7B72\">}</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;</span><span style=\"color:#7EE787\">SwitchPrimitive.Root</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"switch\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">        className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#D2A8FF\">switchVariants</span><span style=\"color:#E6EDF3\">({ size: effectiveSize }), className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">        {</span><span style=\"color:#E6EDF3\">children </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#E6EDF3\"> &#x3C;</span><span style=\"color:#7EE787\">SwitchThumb</span><span style=\"color:#E6EDF3\"> /></span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      &#x3C;/</span><span style=\"color:#7EE787\">SwitchPrimitive.Root</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">SwitchContext.Provider</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">function</span><span style=\"color:#D2A8FF\"> SwitchThumb</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  size</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ComponentProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> SwitchPrimitive.Thumb> </span><span style=\"color:#FF7B72\">&#x26;</span><span style=\"color:#FFA657\"> Partial</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">VariantProps</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FF7B72\">typeof</span><span style=\"color:#E6EDF3\"> switchThumbVariants>>) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> context</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useSwitchContext</span><span style=\"color:#E6EDF3\">();</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> effectiveSize</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> size </span><span style=\"color:#FF7B72\">??</span><span style=\"color:#E6EDF3\"> context.size;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">SwitchPrimitive.Thumb</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"switch-thumb\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#D2A8FF\">switchThumbVariants</span><span style=\"color:#E6EDF3\">({ size: effectiveSize }), className)</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    /></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#E6EDF3\"> { Switch, SwitchThumb, switchVariants };</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/base-switch.tsx",
    "timestamp": "2025-10-13T17:29:04.522Z"
  }
}
